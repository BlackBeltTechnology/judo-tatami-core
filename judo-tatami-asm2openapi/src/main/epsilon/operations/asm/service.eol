import "annotation.eol";
import "modelElement.eol";

@cached
operation getAllStatelessOperations() : Collection {
    return ASM!EOperation.all.select(o | o.isStateless());
}

@cached
operation getAllMappedTransferObjectTypes() : Collection {
    return ASM!EClass.all.select(c | c.isMappedTransferObjectType());
}

/*@cached
operation ASM!EOperation isExposed() : Boolean {
    var exposedBy = self.getAnnotationValue("exposedBy", false);
    if (exposedBy.isDefined()) {
        return exposedBy.resolve().isAccessPoint();
    } else {
        return false;
    }
} */

@cached
operation ASM!EOperation isStateless() : Boolean {
    return self.annotatedAsFalse("stateful");
}

@cached
operation ASM!EOperation isStateful() : Boolean {
    return self.annotatedAsTrue("stateful");
}

@cached
operation ASM!EOperation isBound() : Boolean {
    return self.eContainingClass.isMappedTransferObjectType();
}

@cached
operation ASM!EClass isMappedTransferObjectType() : Boolean {
    return self.getEntityType().isDefined();
}

@cached
operation ASM!EClass getEntityType() : ASM!EClass {
    var entityTypeName = self.getAnnotationValue("mappedEntityType", false);
    if (entityTypeName.isDefined()) {
        return entityTypeName.resolve();
    } else {
        return null;
    }
}
