import "modules/api.etl";
import "modules/schema.etl";
import "modules/property.etl";
import "modules/parameter.etl";
import "modules/operation.etl";
import "modules/security.etl";
import "../../operations/openapi/_importAll.eol";

pre {
    var forCreateAndUpdateMap : Map = new Map;
    var classMap : Map = new Map;
    var annotationMap : Map = new Map;
    var actorNames = asmUtils.getAllActorTypes().collect(a | asmUtils.getClassifierFQName(a));
    var parameterAnnotations = getExposedByAnnotationsOfParameters();
    
    for (actor in actorNames) {
        classMap.put(actor, new List);
        forCreateAndUpdateMap.put(actor, new List);
        annotationMap.put(actor, new List);
    }
    
    for (class in ASM!EClass.all()) {
        for (a in asmUtils.getExtensionAnnotationListByName(class, "exposedBy")) {
            classMap.get(a.details.get("value")).add(class);
        }
    }
    
    for (a in parameterAnnotations) {
        annotationMap.get(a.details.get("value")).add(a);
    }
    
    for (actor in actorNames) {
        for (class in classMap.get(actor).select(c | annotationMap.get(actor).exists(a | a.eContainer.eType == c or a.eContainer.eType.eAllContainments.includes(c)))) {
            forCreateAndUpdateMap.get(actor).add(class);
        }
    }
}
