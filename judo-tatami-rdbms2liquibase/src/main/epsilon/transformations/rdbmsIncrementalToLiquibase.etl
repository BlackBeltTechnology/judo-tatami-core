import "liquibase/utils/changeset.eol";
import "rdbms/utils/field.eol";
import "rdbms/utils/model.eol";
import "rdbms/utils/table.eol";

// sorted in logical order
import "liquibase/modules/dbCheckup.etl";
import "liquibase/modules/beforeIncremental.etl";
import "liquibase/modules/changes.etl";
import "liquibase/modules/afterIncremental.etl";

pre {
    var operationMeta = RDBMS!RdbmsOperationMeta.all.first();
    var previousModel;
    var newModel;
    if (operationMeta.isDefined()) { // if defined in "if" block, transformations might fail.....
        previousModel = operationMeta.previousModel;
        newModel = operationMeta.currentModel;
    }

    var context;
    if (RDBMS!RdbmsModel.all.first.isDefined()) {
        context = RDBMS!RdbmsModel.all.first.version;
    }
    var targetModel : LIQUIBASE!databaseChangeLog = new LIQUIBASE!databaseChangeLog();
    var dbCheckupModel : DBCHECKUP!databaseChangeLog = new DBCHECKUP!databaseChangeLog(preConditions = new DBCHECKUP!PreConditions());
    var beforeIncrementalModel : BEFORE_INCREMENTAL!databaseChangeLog = new BEFORE_INCREMENTAL!databaseChangeLog();
    var afterIncrementalModel : AFTER_INCREMENTAL!databaseChangeLog = new AFTER_INCREMENTAL!databaseChangeLog();
}
