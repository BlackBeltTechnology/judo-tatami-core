[%
  import "../operations/asm/_importAll.eol";
  import "../operations/sdk.eol";
  out.setContentType("Java");
%]
package [%= dto.getDtoPackageName() %];

import java.util.List;
import java.util.Map;
import java.util.LinkedHashMap;
import java.util.stream.Collectors;

public class [%= dto.name.normalizeName() %] {
	private [%= dto.idType() %] identifier;

    [% for (field in dto.eAllAttributes.includingAll(dto.eAllReferences)) { %]
	private [%= field.getTypeDefinition() %] [%= field.name.firstToLowerCase().safeName() %];
	[% } %]

    @java.beans.ConstructorProperties({"identifier"[% for (field in dto.eAllAttributes.includingAll(dto.eAllReferences)) { %], "[%= field.name.firstToLowerCase().safeName() %]"[% } %]})
    [%= dto.name.normalizeName() %](java.util.UUID identifier[% for (field in dto.eAllAttributes.includingAll(dto.eAllReferences)) { %], [%= field.getTypeDefinition() %] [%= field.name.firstToLowerCase().safeName() %][% } %]) {
        [% for (field in dto.eAllAttributes.includingAll(dto.eAllReferences)) { %]
        this.[%= field.name.firstToLowerCase().safeName() %] = [%= field.name.firstToLowerCase().safeName() %];
        [% } %]
    }

	// Getters
	public [%= dto.idType() %] getIdentifier() {
		return this.identifier;
	}

    [% for (field in dto.eAllAttributes.includingAll(dto.eAllReferences)) { %]
	public [%= field.getTypeDefinition() %] [%= field.getterName() %]() {
		return this.[%= field.name.firstToLowerCase().safeName() %];
	}
	[% } %]

	// Setters
	public void setIdentifier([%= dto.idType() %] identifier) {
		this.identifier = identifier;
	}
    [% for (field in dto.eAllAttributes.includingAll(dto.eAllReferences)) { %]
	public void [%= field.setterName() %]([%= field.getTypeDefinition() %] [%= field.name.firstToLowerCase().safeName() %]) {
		this.[%= field.name.firstToLowerCase().safeName() %] = [%= field.name.firstToLowerCase().safeName() %];
	}
	[% } %]

	public Map<String, Object> toMap() {
		Map ret = new LinkedHashMap();
		if (getIdentifier() != null) {
			ret.put("__identifier", this.identifier);
		}

	    [% for (attr in dto.eAllAttributes) { %]
	    if ([%= attr.getterName() %]() != null) {
		    ret.put("[%= attr.name %]", this.[%= attr.name.firstToLowerCase().safeName() %]);
	    }
		[% } %]
	    [% for (ref in dto.eAllReferences) { %]
	    if ([%= ref.getterName() %]() != null) {
	    	[% if (ref.upperBound == -1) { %]
		    ret.put("[%= ref.name %]", [%= ref.getterName() %]().stream().map(i -> i.toMap()).collect(Collectors.toList()));
	    	[% } else { %]
		    ret.put("[%= ref.name %]", [%= ref.getterName() %]().toMap());
			[% } %]
		}
		[% } %]
		return ret;
	}

	public static [%= dto.name.normalizeName() %] fromMap(Map<String, Object> map) {
		[%= dto.name.normalizeName() %]Builder builder = [%= dto.name.normalizeName().firstToLowerCase() %]Builder();
		if (map.containsKey("__identifier")) {
			builder.identifier(([%= dto.idType() %])map.get("identifier"));
		}
	    [% for (attr in dto.eAllAttributes) { %]
	    if (map.containsKey("[%= attr.name %]")) {
			builder.[%= attr.name.firstToLowerCase().safeName() %](([%= attr.getTypeDefinition() %]) map.get("[%= attr.name %]"));
		}
		[% } %]
	    [% for (ref in dto.eAllReferences) { %]
	    if (map.containsKey("[%= ref.name %]")) {
	    	[% if (ref.upperBound == -1) { %]
		    builder.[%= ref.name.firstToLowerCase().safeName() %](([%= ref.getTypeDefinition() %]) ((List) map.get("[%= ref.name %]")).stream().map(i -> [%= ref.getBareTypeDefinition() %].fromMap((Map<String, Object>) i)).collect(Collectors.toList()));
	    	[% } else { %]
		    builder.[%= ref.name.firstToLowerCase().safeName() %]([%= ref.getTypeDefinition() %].fromMap((Map<String, Object>) map.get("[%= ref.name %]")));
			[% } %]
	    }
		[% } %]

	    return builder.build();
	}

	public String toString() {
	    return "[%= dto.name.normalizeName() %](identifier=" + this.identifier + "[% for (field in dto.eAllAttributes.includingAll(dto.eAllReferences)) { %], [%= field.name.firstToLowerCase().safeName() %]=" + this.[%= field.name.firstToLowerCase().safeName() %] + "[% } %])";
	}

    // Builder
	public static [%= dto.name.normalizeName() %]Builder [%= dto.name.normalizeName().firstToLowerCase() %]Builder() {
		return new [%= dto.name.normalizeName() %]Builder();
	}

	public static class [%= dto.name.normalizeName() %]Builder {
		private [%= dto.idType() %] identifier;
        [% for (field in dto.eAllAttributes.includingAll(dto.eAllReferences)) { %]
        private [%= field.getTypeDefinition() %] [%= field.name.firstToLowerCase().safeName() %];
        [% } %]

		[%= dto.name.normalizeName() %]Builder() {
		}
		public [%= dto.name.normalizeName() %]Builder identifier([%= dto.idType() %] identifier) {
			this.identifier = identifier;
			return this;
		}

        [% for (field in dto.eAllAttributes.includingAll(dto.eAllReferences)) { %]
		public [%= dto.name.normalizeName() %]Builder [%= field.name.firstToLowerCase().safeName() %]([%= field.getTypeDefinition() %] [%= field.name.firstToLowerCase().safeName() %]) {
			this.[%= field.name.firstToLowerCase().safeName() %] = [%= field.name.firstToLowerCase().safeName() %];
			return this;
		}
		[% } %]

		public [%= dto.name.normalizeName() %] build() {
			return new [%= dto.name.normalizeName() %](this.identifier[% for (field in dto.eAllAttributes.includingAll(dto.eAllReferences)) { %], this.[%= field.name.firstToLowerCase().safeName() %][% } %]);
		}

		public String toString() {
    	    return "[%= dto.name.normalizeName() %]Builder.[%= dto.name.normalizeName() %](identifier=" + identifier + "[% for (field in dto.eAllAttributes.includingAll(dto.eAllReferences)) { %], [%= field.name.firstToLowerCase().safeName() %]=" + this.[%= field.name.firstToLowerCase().safeName() %] + "[% } %])";
		}
	}
}