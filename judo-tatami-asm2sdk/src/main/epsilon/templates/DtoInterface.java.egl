[%
  import "../operations/sdk.eol";
  out.setContentType("Java");
%]

package [%= getSdkPrefix() + dto.getDtoPackageName() %];

public interface [%= dto.getClassName() %] {

    static [%= dto.getClassName() %] create() {
        return hu.blackbelt.structured.map.proxy.MapProxy.newInstance([%= dto.getClassName() %].class);
    }

    static [%= dto.getClassName() %]Builder builder() {
        return hu.blackbelt.structured.map.proxy.MapBuilderProxy.newInstance([%= dto.getClassName() %]Builder.class, [%= dto.getClassName() %].class, "with");
    }
    
    static [%= dto.getClassName() %]Builder builderFrom([%= dto.getClassName() %] instance) {
        return hu.blackbelt.structured.map.proxy.MapBuilderProxy.newInstance([%= dto.getClassName() %]Builder.class, instance, "with");
    }

    [%= dto.idType() %] get__identifier();

    void set__identifier([%= dto.idType() %] __identifier);

    String get__entityType();

    void set__entiyType(String __entityType);

    [% for (field in dto.eAllAttributes.includingAll(dto.eAllReferences)) { %]
    [%= field.getTypeDefinition() %] [%= field.getterName() %]();
    [% } %]

    [% for (field in dto.eAllAttributes.includingAll(dto.eAllReferences)) { %]
    void [%= field.setterName() %]([%= field.getTypeDefinition() %] [%= asmUtils.safeName(field.name.firstToLowerCase()) %]);
    [% } %]

	interface [%= dto.getClassName() %]Builder {

	    [% for (field in dto.eAllAttributes.includingAll(dto.eAllReferences)) { %]
	    [%= dto.getClassName() %]Builder [%= field.builderName() %]([%= field.getTypeDefinition() %] [%= asmUtils.safeName(field.name.firstToLowerCase()) %]);
	    [% } %]
	
	    [%= dto.getClassName() %]Builder with__identifier([%= dto.idType() %] __identifier);
	
	    [%= dto.getClassName() %] build();
    
	}

	[% if (not dto.getSdkOperations().isEmpty()) { %]
	interface [%= dto.getClassName() %]Operations {
	
		[% for (op in dto.getSdkOperations()) { %]
			[% var map = getOperationGenerationData(dto, op); %]

			[%= map.get("operationMethod") %];
			
		[% } %]
	}
	[% } %]
	
	[%
		if (asmUtils.isMappedTransferObjectType(dto)) { 
			var t = TemplateFactory .load("dao/Dao.java.egl");
			out.print(t.process);			 
		} else {
			var t = TemplateFactory.load("dao/UnmappedInitializer.java.egl");
			out.print(t.process);
		}
	%]
		
}

