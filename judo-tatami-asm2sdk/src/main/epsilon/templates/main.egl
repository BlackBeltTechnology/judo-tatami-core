[%
import "../operations/sdk.eol";

var sdkJavaClasses = new Set();
var internalJavaClasses = new Set();
var internalScrXmls = new Set();

executionContext.getContext().put("sdkJavaClasses", sdkJavaClasses);
executionContext.getContext().put("internalJavaClasses", internalJavaClasses);
executionContext.getContext().put("internalScrXmls", internalScrXmls);

internalJavaClasses.add(genUtil("AbstractSdkDao"));
internalJavaClasses.add(genUtil("SdkUtil"));

for (dto in getAllDTOs()) {
    sdkJavaClasses.add(genDtoInterface(dto));
    
    if (asmUtils.isMappedTransferObjectType(dto)) {
	    var daoInterfaces = genInternalDaoInterfaces(dto);
	    for (daoInterface in daoInterfaces) {
	    	if (daoInterface.endsWith(".java")) {
	    		internalJavaClasses.add(daoInterface);
	    	} else if (daoInterface.endsWith(".xml")){
	    		internalScrXmls.add(daoInterface);
	    	}    	
		}
	}
    
	var generatedFiles = genSdkOperationInterfaces(dto);
	for (generatedFile in generatedFiles) {
	    	sdkJavaClasses.add(generatedFile);
   	}
	generatedFiles = genInternalOperationInterfaces(dto);
	for (generatedFile in generatedFiles) {
		if (generatedFile.endsWith(".xml")) {
			internalScrXmls.add(generatedFile);
		} else {
			internalJavaClasses.add(generatedFile);
		}
	}
}

for (dto in getAllEntities()) {
    var generatedFiles = genSdkOperationInterfaces(dto);
	for (generatedFile in generatedFiles) {
	    	sdkJavaClasses.add(generatedFile);
   	}
    generatedFiles = genInternalOperationInterfaces(dto);
	for (generatedFile in generatedFiles) {
		if (generatedFile.endsWith(".xml")) {
			internalScrXmls.add(generatedFile);
		} else {
			internalJavaClasses.add(generatedFile);
		}
	}
}

%]
