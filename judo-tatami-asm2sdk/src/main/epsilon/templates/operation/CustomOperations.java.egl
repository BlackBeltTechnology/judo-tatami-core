[%
  import "../../operations/sdk.eol";
  out.setContentType("Java");
%]

package [%= getCustomOperationsPrefix() + dto.getClassifierPackageName() %];

[% if (dto.getDocumentation() <> "") {%]
/**
* [%= dto.getDocumentation() %]
*/
[% } %]
public interface [%= dto.getClassName() %] {

	[% for (op in dto.getCustomizableOperations()) { %]
			[% var map = getOperationGenerationData(dto, op); %]

			[% if (op.getDocumentation() <> "") {%]
            /**
            * [%= op.getDocumentation() %]
            *
            [% for (param in op.eParameters) { %]
            * @param [%= param.name%]
                [% if (param.getDocumentation() <> "") { %]
                    [%= param.getDocumentation() %]
                [% } else {
                   var paramName = getSdkPrefix() + param.eType.getDtoTypeName();
                    %]
                    [%= paramName%]
                [% } %]
            [% } %]

            [% if (op.eType.isDefined()) {%]
            * @return
                [% if (op.getOutputDocumentation() <> "") {%]
                    [%= op.getOutputDocumentation() %]
                [% } else {
                   var returnName = getSdkPrefix() + op.eType.getDtoTypeName();
                    %]
                    [%= returnName%]
                [% } %]
            [% } %]
            */
            [% } %]
			@FunctionalInterface
			interface [%= op.name.firstToUpperCase() %] extends [%= map.get("extendedInterface") %] {

				@Override
				[%= map.get("extendedMethod") %];
			}
	[% } %] 

}