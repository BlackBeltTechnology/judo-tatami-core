import "modelElement.eol";

@cached
operation ASM!EClass isEntity() : Boolean {
	return self.hasAnnotation("entity");
}

@cached
operation ASM!EClass isFacade() : Boolean {
	return self.hasAnnotation("facade");
}

@cached
operation ASM!EClassifier getPackage() : ASM!EPackage {
	return ASM!EPackage.all.selectOne(p | p.eClassifiers.contains(self));
}

// structure is a class that is referenced by an entity/facade but has no entity/facade annotation
@cached
operation ASM!EClass isStructure() : Boolean {
	return not self.isEntity() and
		not self.isFacade() and
		ASM!EClass.all.select(c | (c.isEntity() or c.isFacade()) and c.eStructuralFeatures.select(r | r.isTypeOf(ASM!EReference) and r.eType == self).size() > 0).size() > 0;
}
