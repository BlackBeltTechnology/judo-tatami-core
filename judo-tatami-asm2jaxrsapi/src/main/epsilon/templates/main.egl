[%
import "../operations/jaxrs.eol";

var outputJavaClasses = new Set();
var outputScrXmls = new Set();

executionContext.getContext().put("outputJavaClasses", outputJavaClasses);
executionContext.getContext().put("outputScrXmls", outputScrXmls);

for (dto in getAllDTOs()) {
	genDto(dto);
	outputJavaClasses.add(dto.getDtoJavaFileName());
}

for (ap in asmUtils.getAllAccessPoints()) {

    var apServiceInstances : Map = new Map();

    var exposedServices = asmUtils.getExposedServicesOfAccessPoint(ap);
	log.debug("exposedServices: " + exposedServices.collect(exposedService | "op: " + exposedService.getName() + " in " + exposedService.getEContainingClass().getName()));
	
	// Unbound service
    if (exposedServices.size() > 0) {
		genUnboundService(ap, exposedServices);
		outputJavaClasses.add(ap.getUnboundServiceJavaFileName());
		outputScrXmls.add(ap.getUnboundServiceScrXmlFileName());
		apServiceInstances.put("unboundService", ap.getUnboundServicePackageName() + "." + ap.getUnboundServiceClassName());
    }
	
    var boundOperations = ASM!EOperation.all.select(op | asmUtils.isBound(op) and asmUtils.getAccessPointsOfOperation(op).contains(ap));
	var boundOperationClasses = boundOperations.collect(op | op.eContainer).asSet();
	log.debug("boundOperations: " + boundOperations.collect(boundOperation | boundOperation.getName()));
	log.debug("boundOperationClasses: " + boundOperationClasses.collect(boundOperationClass | boundOperationClass.getName()));
	
    // Bound service
    for (boundOperationClass in boundOperationClasses) {
		genExposedMappedTransferObject(boundOperationClass, ap, boundOperations.select(op | op.eContainer == boundOperationClass));
		outputJavaClasses.add(boundOperationClass.getExposedMappedTransferObjectJavaFileName(ap));
		outputScrXmls.add(boundOperationClass.getExposedMappedTransferObjectScrXmlFileName(ap));
		apServiceInstances.put((boundOperationClass.getExposedMappedTransferObjectPackageName(ap) + "." + boundOperationClass.getExposedMappedTransferObjectClassName()).replaceAll("\\.", "_"),
			boundOperationClass.getExposedMappedTransferObjectPackageName(ap) + "." + boundOperationClass.getExposedMappedTransferObjectClassName());		
    }
    
    // Generate ApplicationConfigs
    genApplication(ap, apServiceInstances);
	outputJavaClasses.add(ap.getApplicationConfigJavaFileName());
	outputScrXmls.add(ap.getApplicationConfigScrXmlFileName());
}
%]
