[%
  import "../operations/jaxrs.eol";
  out.setContentType("Java");
%]
package [%= dto.getDtoPackageName() %];

import java.util.List;
import java.util.Map;
import java.util.LinkedHashMap;
import java.util.stream.Collectors;

public class [%= dto.name.normalizeName() %] {
	private [%= dto.getIdTypeName() %] __identifier;
    [% for (field in dto.eAllAttributes.includingAll(dto.eAllReferences)) { %]
	private [%= field.getTypeDefinition() %] [%= asmUtils.safeName(field.name.firstToLowerCase()) %];
	[% } %]

    @java.beans.ConstructorProperties({"__identifier"[% for (field in dto.eAllAttributes.includingAll(dto.eAllReferences)) { %], "[%= asmUtils.safeName(field.name.firstToLowerCase()) %]"[% } %]})
    [%= dto.name.normalizeName() %]([%= dto.getIdTypeName() %] __identifier[% for (field in dto.eAllAttributes.includingAll(dto.eAllReferences)) { %], [%= field.getTypeDefinition() %] [%= asmUtils.safeName(field.name.firstToLowerCase()) %][% } %]) {
		this.__identifier = __identifier;
        [% for (field in dto.eAllAttributes.includingAll(dto.eAllReferences)) { %]
        this.[%= asmUtils.safeName(field.name.firstToLowerCase()) %] = [%= asmUtils.safeName(field.name.firstToLowerCase()) %];
        [% } %]
    }

	// Getters
	public [%= dto.getIdTypeName() %] get__identifier() {
		return this.__identifier;
	}
    [% for (field in dto.eAllAttributes.includingAll(dto.eAllReferences)) { %]
	public [%= field.getTypeDefinition() %] [%= asmUtils.getterName(field) %]() {
		return this.[%= asmUtils.safeName(field.name.firstToLowerCase()) %];
	}
	[% } %]

	// Setters
	public void set__identifier([%= dto.getIdTypeName() %] __identifier) {
		this.__identifier = __identifier;
	}
    [% for (field in dto.eAllAttributes.includingAll(dto.eAllReferences)) { %]
	public void [%= asmUtils.setterName(field) %]([%= field.getTypeDefinition() %] [%= asmUtils.safeName(field.name.firstToLowerCase()) %]) {
		this.[%= asmUtils.safeName(field.name.firstToLowerCase()) %] = [%= asmUtils.safeName(field.name.firstToLowerCase()) %];
	}
	[% } %]

	public Map<String, Object> toMap() {
		Map ret = new LinkedHashMap();
		if (this.__identifier != null) {
			ret.put("__identifier", this.__identifier);
		}

	    [% for (attr in dto.eAllAttributes) { %]
	    if ([%= asmUtils.safeName(attr.name.firstToLowerCase()) %] != null) {
		    ret.put("[%= attr.name %]", this.[%= asmUtils.safeName(attr.name.firstToLowerCase()) %]);
	    }
		[% } %]
	    [% for (ref in dto.eAllReferences) { %]
	    if ([%= asmUtils.safeName(ref.name.firstToLowerCase()) %] != null) {
	    	[% if (ref.many) { %]
		    ret.put("[%= ref.name %]", this.[%= asmUtils.safeName(ref.name.firstToLowerCase()) %].stream().map(i -> i.toMap()).collect(Collectors.toList()));
	    	[% } else { %]
		    ret.put("[%= ref.name %]", this.[%= asmUtils.safeName(ref.name.firstToLowerCase()) %].toMap());
			[% } %]
		}
		[% } %]
		return ret;
	}

	public static [%= dto.name.normalizeName() %] fromMap(Map<String, Object> map) {
		[%= dto.name.normalizeName() %]Builder builder = [%= dto.name.normalizeName().firstToLowerCase() %]Builder();
		if (map.containsKey("__identifier")) {
			builder.__identifier(([%= dto.getIdTypeName() %])map.get("__identifier"));
		}
	    [% for (attr in dto.eAllAttributes) { %]
	    if (map.containsKey("[%= attr.name %]")) {
			builder.[%= asmUtils.safeName(attr.name.firstToLowerCase()) %](([%= attr.getTypeDefinition() %]) map.get("[%= attr.name %]"));
		}
		[% } %]
	    [% for (ref in dto.eAllReferences) { %]
	    if (map.containsKey("[%= ref.name %]")) {
	    	[% if (ref.many) { %]
		    builder.[%= asmUtils.safeName(ref.name.firstToLowerCase()) %](([%= ref.getTypeDefinition() %]) ((List) map.get("[%= ref.name %]")).stream().map(i -> [%= ref.eReferenceType.getDtoPackageName() + "." + ref.eReferenceType.name %].fromMap((Map<String, Object>) i)).collect(Collectors.toList()));
	    	[% } else { %]
		    builder.[%= asmUtils.safeName(ref.name.firstToLowerCase()) %]([%= ref.getTypeDefinition() %].fromMap((Map<String, Object>) map.get("[%= ref.name %]")));
			[% } %]
	    }
		[% } %]
	    return builder.build();
	}

	public String toString() {
	    return "[%= dto.name.normalizeName() %](identifier=" + this.__identifier + "[% for (field in dto.eAllAttributes.includingAll(dto.eAllReferences)) { %], [%= asmUtils.safeName(field.name.firstToLowerCase()) %]=" + this.[%= asmUtils.safeName(field.name.firstToLowerCase()) %] + "[% } %])";
	}

    // Builder
	public static [%= dto.name.normalizeName() %]Builder [%= dto.name.normalizeName().firstToLowerCase() %]Builder() {
		return new [%= dto.name.normalizeName() %]Builder();
	}

	public static class [%= dto.name.normalizeName() %]Builder {
		private [%= dto.getIdTypeName() %] __identifier;
        [% for (field in dto.eAllAttributes.includingAll(dto.eAllReferences)) { %]
        private [%= field.getTypeDefinition() %] [%= asmUtils.safeName(field.name.firstToLowerCase()) %];
        [% } %]

		[%= dto.name.normalizeName() %]Builder() {
		}

		public [%= dto.name.normalizeName() %]Builder __identifier([%= dto.getIdTypeName() %] __identifier) {
			this.__identifier = __identifier;
			return this;
		}
        [% for (field in dto.eAllAttributes.includingAll(dto.eAllReferences)) { %]
		public [%= dto.name.normalizeName() %]Builder [%= asmUtils.safeName(field.name.firstToLowerCase()) %]([%= field.getTypeDefinition() %] [%= asmUtils.safeName(field.name.firstToLowerCase()) %]) {
			this.[%= asmUtils.safeName(field.name.firstToLowerCase()) %] = [%= asmUtils.safeName(field.name.firstToLowerCase()) %];
			return this;
		}

		[% } %]
		public [%= dto.name.normalizeName() %] build() {
			return new [%= dto.name.normalizeName() %](this.__identifier[% for (field in dto.eAllAttributes.includingAll(dto.eAllReferences)) { %], this.[%= asmUtils.safeName(field.name.firstToLowerCase()) %][% } %]);
		}

		public String toString() {
    	    return "[%= dto.name.normalizeName() %]Builder.[%= dto.name.normalizeName() %](identifier=" + __identifier + "[% for (field in dto.eAllAttributes.includingAll(dto.eAllReferences)) { %], [%= asmUtils.safeName(field.name.firstToLowerCase()) %]=" + this.[%= asmUtils.safeName(field.name.firstToLowerCase()) %] + "[% } %])";
		}
	}
}
