[%
  import "../operations/asm/_importAll.eol";
  import "../operations/jaxrs.eol";
  out.setContentType("Java");
%]
package [%= dto.getDtoPackageName() %];

import java.util.List;
import java.util.Map;
import java.util.LinkedHashMap;
import java.util.stream.Collectors;

public class [%= dto.name %] {
    [% for (field in dto.eAllAttributes.includingAll(dto.eAllReferences)) { %]
	private [%= field.getTypeDefinition() %] [%= field.name.firstToLowerCase().safeName() %];
	[% } %]

    @java.beans.ConstructorProperties({[% for (field in dto.eAllAttributes.includingAll(dto.eAllReferences)) { %]"[%= field.name.firstToLowerCase().safeName() %]"[% if (hasMore) { %], [% } %][% } %]})
    [%= dto.name %]([% for (field in dto.eAllAttributes.includingAll(dto.eAllReferences)) { %][%= field.getTypeDefinition() %] [%= field.name.firstToLowerCase().safeName() %][% if (hasMore) { %], [% } %][% } %]) {
        [% for (field in dto.eAllAttributes.includingAll(dto.eAllReferences)) { %]
        this.[%= field.name.firstToLowerCase().safeName() %] = [%= field.name.firstToLowerCase().safeName() %];
        [% } %]
    }

	// Getters
    [% for (field in dto.eAllAttributes.includingAll(dto.eAllReferences)) { %]
	public [%= field.getTypeDefinition() %] [%= field.getterName() %]() {
		return this.[%= field.name.firstToLowerCase().safeName() %];
	}
	[% } %]

	// Setters
    [% for (field in dto.eAllAttributes.includingAll(dto.eAllReferences)) { %]
	public void [%= field.setterName() %]([%= field.getTypeDefinition() %] [%= field.name.firstToLowerCase().safeName() %]) {
		this.[%= field.name.firstToLowerCase().safeName() %] = [%= field.name.firstToLowerCase().safeName() %];
	}
	[% } %]

	public Map<String, Object> toMap() {
		Map ret = new LinkedHashMap(); 
	    [% for (attr in dto.eAllAttributes) { %]
	    if ([%= attr.getterName() %]() != null) {
		    ret.put("[%= attr.name %]", this.[%= attr.name.firstToLowerCase().safeName() %]);
	    }
		[% } %]
	    [% for (ref in dto.eAllReferences) { %]
	    if ([%= ref.getterName() %]() != null) {
	    	[% if (ref.upperBound == -1) { %]
		    ret.put("[%= ref.name %]", [%= ref.getterName() %]().stream().map(i -> i.toMap()).collect(Collectors.toList()));
	    	[% } else { %]
		    ret.put("[%= ref.name %]", [%= ref.getterName() %]().toMap());
			[% } %]
		}
		[% } %]
		return ret;
	}

	public static [%= dto.name %] fromMap(Map<String, Object> map) {
		[%= dto.name %]Builder builder = [%= dto.name.firstToLowerCase() %]Builder();
	    [% for (attr in dto.eAllAttributes) { %]
	    if (map.containsKey("[%= attr.name %]")) {
			builder.[%= attr.name.firstToLowerCase().safeName() %](([%= attr.getTypeDefinition() %]) map.get("[%= attr.name %]"));
		}
		[% } %]
	    [% for (ref in dto.eAllReferences) { %]
	    if (map.containsKey("[%= ref.name %]")) {
	    	[% if (ref.upperBound == -1) { %]
		    builder.[%= ref.name.firstToLowerCase().safeName() %](([%= ref.getTypeDefinition() %]) ((List) map.get("[%= ref.name %]")).stream().map(i -> [%= ref.getBareTypeDefinition() %].fromMap((Map<String, Object>) i)).collect(Collectors.toList()));
	    	[% } else { %]
		    builder.[%= ref.name.firstToLowerCase().safeName() %]([%= ref.getTypeDefinition() %].fromMap((Map<String, Object>) map.get("[%= ref.name %]")));
			[% } %]
	    }
		[% } %]

	    return builder.build();
	}

	public String toString() {
	    return "[%= dto.name %]([% for (field in dto.eAllAttributes.includingAll(dto.eAllReferences)) { %][%= field.name.firstToLowerCase().safeName() %]=" + this.[%= field.name.firstToLowerCase().safeName() %] + [% if (hasMore) { %]", [% } else { %]"[% } %][% } %])";
	}

    // Builder
	public static [%= dto.name %]Builder [%= dto.name.firstToLowerCase() %]Builder() {
		return new [%= dto.name %]Builder();
	}

	public static class [%= dto.name %]Builder {
        [% for (field in dto.eAllAttributes.includingAll(dto.eAllReferences)) { %]
        private [%= field.getTypeDefinition() %] [%= field.name.firstToLowerCase().safeName() %];
        [% } %]

		[%= dto.name %]Builder() {
		}

        [% for (field in dto.eAllAttributes.includingAll(dto.eAllReferences)) { %]
		public [%= dto.name %]Builder [%= field.name.firstToLowerCase().safeName() %]([%= field.getTypeDefinition() %] [%= field.name.firstToLowerCase().safeName() %]) {
			this.[%= field.name.firstToLowerCase().safeName() %] = [%= field.name.firstToLowerCase().safeName() %];
			return this;
		}
		[% } %]

		public [%= dto.name %] build() {
			return new [%= dto.name %]([% for (field in dto.eAllAttributes.includingAll(dto.eAllReferences)) { %]this.[%= field.name.firstToLowerCase().safeName() %][% if (hasMore) { %], [% } %][% } %]);
		}

		public String toString() {
    	    return "[%= dto.name %]Builder.[%= dto.name %]([% for (field in dto.eAllAttributes.includingAll(dto.eAllReferences)) { %][%= field.name.firstToLowerCase().safeName() %]=" + this.[%= field.name.firstToLowerCase().safeName() %] + [% if (hasMore) { %]", [% } else { %]"[% } %][% } %])";
		}
	}
}