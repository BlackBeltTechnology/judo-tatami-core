import "../../../operations/asm/_importAsm.eol";
import "../../../operations/typemapping/_importTypeMapping.eol";

import "element.etl";

@abstract
rule EAttributeToRdbmsField
	transform s : ASM!EAttribute
	to t : RDBMS!RdbmsField 
	extends ENamedElementToRdbmsElement { 
		guard : s.getClass().isEntity()
	    t.uuid = s.getFQName();
		t.table = s.getClass().equivalent("EClassToRdbmsTable");
		
		if (s.eType.isKindOf(ASM!EEnum)) {
			// TODO: Make value constraints
			t.fillType("JInteger");
	    } else {
	        if (s.eType.isUndefined()) {
	        	log.warn("Could not determinate type (maybe enum?): " + s.getClass().name + "#" + s.name);
				t.fillType("JInteger");
	        } else {
				t.fillType(s.eType.name);
				t.fillConstraintsFromAttribute(s);
			}
		}
		t.sqlName = s.fieldSqlName();
		if (s.isPrimaryKey()) {
			t.mandatory = true;
		} else {
			t.mandatory = s.required;
		}		
}

rule EAttributeToTableIdentifierField
	transform s : ASM!EAttribute
	to t : RDBMS!RdbmsIdentifierField
	extends ENamedElementToRdbmsElement {
		guard : s.getClass().isEntity() and s.isPrimaryKey()
		t.table = s.getClass().equivalent("EClassToRdbmsTable");
		t.name = s.getFQName();
	    t.uuid = s.getFQName();
	    t.table.fields.add(t);
		t.table.primaryKey = t;
		t.sqlName = "ID";
		t.fillType(s.eType.name);
}

rule EAttributeToTableValueField
	transform s : ASM!EAttribute
	to t : RDBMS!RdbmsValueField
	extends EAttributeToRdbmsField { 
		guard : s.getClass().isEntity() and not s.isPrimaryKey() and not s.derived
}

rule EAttributeToUniqueKey
	transform s : ASM!EAttribute
	to u : RDBMS!RdbmsUniqueConstraint 
	extends ENamedElementToRdbmsElement { 
		guard : s.getClass().isEntity() and s.ID and not s.isPrimaryKey() and not s.derived
	    
	    u.uuid = s.getFQName() + "@uniqueConstraint";
		u.table = s.getClass().equivalent("EClassToRdbmsTable");
		u.sqlName = ("UQ_" + md5(u.uuid));
		u.name = s.getFQName(); 
		u.fields.add(s.equivalent("EAttributeToTableValueField"));
}

