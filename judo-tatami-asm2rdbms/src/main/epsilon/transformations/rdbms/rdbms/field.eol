operation RDBMS!RdbmsField fillType(type : String) {
    if (type.getJudoDataType().isUndefined()) {
        throw "Cannot resolve type: " + type;
    }

    var typeMapping : RDBMS!TypeMapping = RDBMS!TypeMapping.all.selectOne(m | m.asmType == type.getJudoDataType());
    if (typeMapping.isUndefined()) {
        throw "Cannot resolve typemapping: " + type;
    }

	self.rdbmsTypeName = typeMapping.rdbmsType;
    self.size = typeMapping.rdbmsSize;
    self.precision = typeMapping.rdbmsPrecision;
    self.scale = typeMapping.rdbmsScale;
	self.storageByte = -1;
}

operation RDBMS!RdbmsField fromType(type : RDBMS!RdbmsField) {
	self.rdbmsTypeName = type.rdbmsTypeName;
	self.size = type.size;
	self.precision = type.precision;
	self.scale = type.scale;
	self.storageByte = type.storageByte;
}

operation RDBMS!RdbmsField fillConstraintsFromAttribute(attribute : ASM!EAttribute) {
	if (attribute.hasAnnotation("maxLength")) {
		self.size = attribute.getAnnotationValue("maxLength").asInteger();
	}
	if (attribute.hasAnnotation("precision")) {
		self.precision = attribute.getAnnotationValue("precision").asInteger();
	}
	if (attribute.hasAnnotation("scale")) {
		self.scale = attribute.getAnnotationValue("scale").asInteger();
	}

}