operation RDBMS!RdbmsField fillType(type : String) {
    var typeMapping : RDBMS!TypeMapping = RDBMS!TypeMapping.all.selectOne(m | m.asmType == type);
    if (typeMapping.isUndefined()) {
        throw "Cannot resolve typemapping: " + type;
    }

	self.rdbmsTypeName = typeMapping.rdbmsType;
    self.size = typeMapping.rdbmsSize;
    self.precision = typeMapping.rdbmsPrecision;
    self.scale = typeMapping.rdbmsScale;
	self.storageByte = -1;
}

operation RDBMS!RdbmsField fromType(type : RDBMS!RdbmsField) {
	self.rdbmsTypeName = type.rdbmsTypeName;
	self.size = type.size;
	self.precision = type.precision;
	self.scale = type.scale;
	self.storageByte = type.storageByte;
}

operation RDBMS!RdbmsField fillConstraintsFromAttribute(attribute : ASM!EAttribute) {
    var maxLength = asmUtils.getExtensionAnnotationValue(attribute, "maxLength", false);
    var precision = asmUtils.getExtensionAnnotationValue(attribute, "precision", false);
    var scale = asmUtils.getExtensionAnnotationValue(attribute, "scale", false);
    if (maxLength.isPresent()) {
        self.size = maxLength.get().asInteger();
    }
    if (precision.isPresent()) {
        self.precision = precision.get().asInteger();
    }
    if (scale.isPresent()) {
        self.scale = scale.get().asInteger();
    }
}