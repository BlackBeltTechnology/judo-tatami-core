import "../../../operations/psm/namespace/_importNamespace.eol";

@cached
operation String getJudoDataType() : ASM!EDataType {
	var dataType : ASM!EDataType = 
			ASM.resource.resourceSet.packageRegistry.get("http://blackbelt.hu/judo/asm/types").eClassifiers
				.selectOne(clazz | clazz.name = self);
    return dataType;
}

@cached
operation JUDOPSM!Primitive getEcoreType() : ASM!EDataType {
	if (self.isKindOf(JUDOPSM!StringType)) {
		return "JString".getJudoDataType();
	} else if (self.isKindOf(JUDOPSM!NumericType)) {
		if (self.scale == 0 and self.precision <= 9) {
			return "JInteger".getJudoDataType();
		} else if (self.scale == 0 and self.precision > 9 and self.precision <= 18) {
			return "JLong".getJudoDataType();
		} else if (self.scale == 0 and self.precision > 18) {
			return "JBigInteger".getJudoDataType();
		} else if (self.scale > 0 and self.precision <= 7) {
			return "JFloat".getJudoDataType();
		} else if (self.scale > 0 and self.precision > 7 and self.precision <= 15) {
			return "JDouble".getJudoDataType();
		} else if (self.scale > 0 and self.precision > 15) {
			return "JBigDecimal".getJudoDataType();
		}
	} else if (self.isKindOf(JUDOPSM!BooleanType)) {
		return "JBoolean".getJudoDataType();
	} else if (self.isKindOf(JUDOPSM!EnumerationType)) {
		return self.equivalent("CreateEnumeration");
    } else if (self.isKindOf(JUDOPSM!DateType)) {
        return "JDate".getJudoDataType();
    } else if (self.isKindOf(JUDOPSM!TimestampType)) {
        return "JTimestamp".getJudoDataType();
	} else if (self.isKindOf(JUDOPSM!CustomType)) {
		switch (self.name) {
			case "Binary":
				return "JByteArray".getJudoDataType();
			default:
				return "JObject".getJudoDataType();
		}
	} else {
		return "JObject".getJudoDataType();
	}
}
