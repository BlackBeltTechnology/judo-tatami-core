import "../utils/_importUtils.eol";

rule CreateAccessPointAnnotation
    transform s : JUDOPSM!AccessPoint
    to t : ASM!EAnnotation {
        t.source = asmUtils.getAnnotationUri("accessPoint");
        
        var accessPoint = new ASM!EStringToStringMapEntry;
        accessPoint.key = "value";
        accessPoint.value = "true";
        t.details.add(accessPoint);
        
        s.equivalent("CreateAccessPoint").eAnnotations.add(t);
}

rule CreateAccessPoint
    transform s : JUDOPSM!AccessPoint
    to t : ASM!EClass {
        t.name = s.name;
        t.abstract = true;
        t.interface = true;
        
        // TODO - add platform specific attributes (protocol, message format, etc.)
        
        s.getNamespace().asmEquivalent().eClassifiers.add(t);
}

rule CreateExposedByAnnotationForUnboundOperation
    transform s : JUDOPSM!ExposedService
    to t : ASM!EAnnotation {
        t.source = asmUtils.getAnnotationUri("exposedBy");
        
        var exposedBy = new ASM!EStringToStringMapEntry;
        exposedBy.key = "value";
        exposedBy.value = asmUtils.getClassifierFQName(s.eContainer.equivalent("CreateAccessPoint"));
        t.details.add(exposedBy);
        
        s.`operation`.equivalent("CreateUnboundOperation").eAnnotations.add(t);
}

rule CreateAnnotationForExposedGraph
    transform s : JUDOPSM!ExposedGraph
    to t : ASM!EAnnotation {
        t.source = asmUtils.getAnnotationUri("graph");
        
        var exposedBy = new ASM!EStringToStringMapEntry;
        exposedBy.key = "value";
        exposedBy.value = s.name;
        t.details.add(exposedBy);
        
        var root = new ASM!EStringToStringMapEntry;
        root.key = "root";
        root.value = asmUtils.getClassifierFQName(s.mappedTransferObjectType.equivalent("CreateMappedTransferObject"));
        t.details.add(root);
        
        var selector = new ASM!EStringToStringMapEntry;
        selector.key = "selector";
        selector.value = s.selector.getterExpression.expression;
        t.details.add(selector);
        
        var selectorDialect = new ASM!EStringToStringMapEntry;
        selectorDialect.key = "selector.dialect";
        selectorDialect.value = s.selector.getterExpression.dialect.asString();
        t.details.add(selectorDialect);
        
        var collection = new ASM!EStringToStringMapEntry;
        collection.key = "collection";
        collection.value = (s.selector.cardinality.upper > 1 or s.selector.cardinality.upper == -1).asString();
        t.details.add(collection);
        
        s.eContainer.equivalent("CreateAccessPoint").eAnnotations.add(t);
}
