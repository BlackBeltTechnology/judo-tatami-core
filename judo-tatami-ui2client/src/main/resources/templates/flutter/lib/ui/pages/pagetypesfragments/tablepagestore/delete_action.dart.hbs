@action
Future<void> delete{{ className relation.target.name }}({{ storeClassName relation.target }} targetStore{{# unless relation.isAccess }}, {{ storeClassName relation.owner }} ownerStore{{/ unless }}) async {
    try {
        errorMessage = null;
        await _actorRepository.{{ fqVariable relation.target.name }}Delete(targetStore);
        get{{ fqClass relation.name }}({{# unless page.dataElement.isAccess }}ownerStore{{/ unless }});
    } on ApiException catch (error) {
        errorMessage = "Could not delete {{ relation.target.name }}";
        throw error;
    }
}
