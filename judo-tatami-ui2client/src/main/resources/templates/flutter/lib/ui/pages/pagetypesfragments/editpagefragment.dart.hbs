//START editpagefragment.dart.hbs-----{{page.name}}----------------------------------------------------------------------------------------
    final {{storeClassName page.dataElement.target.name}} targetStore;
    {{#if (validatableFlagNeed page.dataElement)}}
    final bool validatable;
    {{/if}}

    const {{fqClass page.name}}Page({Key key, @required this.targetStore{{#if (validatableFlagNeed page.dataElement)}}, this.validatable{{/if}} }) : super(key: key);

    @override
    State<StatefulWidget> createState() =>
        _{{fqClass page.name}}PageState(targetStore: targetStore{{#if (validatableFlagNeed page.dataElement)}}, validatable: validatable{{/if}});
}

class _{{fqClass page.name}}PageState extends State<{{fqClass page.name}}Page> {

    final {{storeClassName page.dataElement.target.name}} targetStore;
    {{#if (validatableFlagNeed page.dataElement)}}
    final bool validatable;
    {{/if}}

    final {{fqClass page.name}}PageStore {{fqVariable page.name}}PageStore = {{fqClass page.name}}PageStore();

    _{{fqClass page.name}}PageState({@required this.targetStore{{#if (validatableFlagNeed page.dataElement)}}, this.validatable{{/if}} })
    {
        final navigation = locator<NavigationState>();
        SchedulerBinding.instance.addPostFrameCallback((_) {
            navigation.setCurrentTitle(AppLocalizations.of(context).lookUpValue(context, {{fqClass page.name}}Page.title){{#if page.dataElement.target.representation}} + ' - ${targetStore.{{variable page.dataElement.target.representation.name}} }'{{/if}});
        });
        {{#if (validatableFlagNeed page.dataElement)}}
        if (this.validatable != null) {
            {{fqVariable page.name}}PageStore.validatable = this.validatable;
        }
        {{/if}}
    }
//END editpagefragment.dart.hbs-----{{page.name}}------------------------------------------------------------------------------------------
