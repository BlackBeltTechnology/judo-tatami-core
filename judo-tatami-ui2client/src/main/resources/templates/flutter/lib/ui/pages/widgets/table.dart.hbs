Observer(builder: (_) {
    switch({{ fqVariable page.targetClassType.name }}Store.{{ fqClass page.targetClassType.name }}StoreFuture.status){
        case FutureStatus.pending:
            return JudoLoadingProgress();
        case FutureStatus.rejected:
            return Container();
        case FutureStatus.fulfilled:
            return JudoTable(
                col: {{ col }},
                dataInfo: {{ fqClass pageDefinition.name }}{{ fqClass name }}Table(),
                rowList: {{ fqVariable page.targetClassType.name }}Store.{{ variable dataElement.name }},
                {{# if onSelectItemAction.target }}
                onTap: (element) async {
                    var response = await navigation.open(Routes.{{ fqVariable onSelectItemAction.target.name }},
                    arguments: {{ fqClass onSelectItemAction.target.name }}Arguments({{ fqVariable page.targetClassType.name }}Store: element));
                    if (response != null) {
                {{ fqVariable page.targetClassType.name }}Store.get{{ fqClass page.targetClassType.name }}();
                    }
                },
                {{/if}}
            );
    }
}),
