@action
Future<void> create{{ fqClass relation.name }}({{# unless relation.isAccess }}{{ storeClassName relation.owner }} ownerStore, {{/ unless }}{{ storeClassName relation.target }} targetStore) async {
    try {
        errorMessage = null;
        {{# if page.isPageTypeView }}
            await _actorRepository.{{ fqVariable relation.owner.name }}{{ fqClass relation.name }}Create({{# unless relation.isAccess }}ownerStore, {{/ unless }}targetStore);
            refresh{{ className relation.owner.name }}(ownerStore);
        {{ else }}
            ownerStore.{{ variable relation.name }}{{# if relation.isCollection }}.add(targetStore){{ else }} = targetStore{{/ if }};
        {{/ if }}
    } on ApiException catch (error) {
        errorMessage = "Could not create {{ relation.name }}";
        throw error;
    }
}
