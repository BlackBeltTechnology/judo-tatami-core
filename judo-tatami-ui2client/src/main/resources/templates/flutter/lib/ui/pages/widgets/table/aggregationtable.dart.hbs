{{~ log 'Table generation for' (variable application.name) '-' (fqClass page.name) (variable dataElement.name) level='debug' ~}}
{{# if addDebugToTemplate }}//START aggregationtable.dart.hbs-----{{ dataElement.name }}---------------------------------------------------------------------------------{{/ if }}
{{# with dataElement as |relation| }}
Observer(builder: (_) {
    var dataInfo = {{ fqClass pageDefinition.name }}{{ fqClass table.name }}{{ fqClass pageContainer.layoutType.name }}Table(context, disabled: {{ disabled }});
    return JudoTable(
        disabled: {{# if disabled }}true{{ else }}pageStore.pageState.disabledByLoading{{/ if }},
        col: {{ col }},
        {{# neq row 2.0 }}row: {{ row }} - 1,{{/ neq }}
        {{# if isInCard }}inCard: true,{{/ if }}
        dataInfo: dataInfo,
        rowList: {{# if relation.isCollection }}pageStore.{{ variable relation.name }}TablePagingList{{ else }}[targetStore.{{ variable relation.name }}].asObservable(){{/ if }},
        {{# if relation.isCollection }}
            sortAscending: pageStore.{{ fqVariable relation.name }}SortAsc,
            sortColumnIndex: pageStore.{{ fqVariable relation.name }}SortColumnIndex,
            sortInitially: true,
            onSort: (int columnIndex, bool asc) {
              pageStore.{{ fqVariable relation.name }}SetSort(
                context,
                dataInfo.getColumnFieldByIndex(columnIndex, asc),
                columnIndex,
                asc,
                dataInfo.getSortComparator(columnIndex, asc),
                targetStore
              );
            },
        {{/if}}
        {{#each table.rowActions as |rowAction|}}
            {{#if rowAction.isViewAction}}
                {{> flutter/lib/ui/pages/widgets/table/aggregationtable/viewaction.dart.hbs relation=relation page=page rowAction=rowAction }}
            {{/ if }}

            {{# if rowAction.isEditAction }}
                {{> flutter/lib/ui/pages/widgets/table/aggregationtable/editaction.dart.hbs relation=relation page=page rowAction=rowAction }}
            {{/ if }}

            {{# if rowAction.isRemoveAction }}
                {{> flutter/lib/ui/pages/widgets/table/aggregationtable/removeaction.dart.hbs relation=relation page=page rowAction=rowAction }}
            {{/ if }}

            {{# if rowAction.isUnsetAction }}
                {{> flutter/lib/ui/pages/widgets/table/aggregationtable/unsetaction.dart.hbs relation=relation page=page rowAction=rowAction }}
            {{/ if }}

            {{# if rowAction.isDeleteAction }}
                {{> flutter/lib/ui/pages/widgets/table/aggregationtable/deleteaction.dart.hbs relation=relation page=page rowAction=rowAction }}
            {{/ if }}
        {{/ each }}
    );
}),
Row(
    children: [
        Padding(
            padding: JudoComponentCustomizer.get().getDefaultPadding(),
            child: Observer(
                builder: (_) => Text(
                    '${pageStore.{{ variable relation.name }}TableItemsRangeStart} - ${pageStore.{{ variable relation.name }}TableItemsRangeEnd}',
                    style: JudoComponentCustomizer.get().getRowCounterTextStyle(Theme.of(context)),
                ),
            ),
        ),
        Observer(
            builder: (_) => Padding(
                padding: JudoComponentCustomizer.get().getDefaultPadding(),
                child: ElevatedButton(
                    onPressed: pageStore.{{ variable relation.name }}TablePreviousEnable ? () async {
                        pageStore.{{ variable relation.name }}TablePreviousPage();
                    } : null,
                    child: Text(AppLocalizations.of(context).lookUpValue(context, 'Previous')),
                ),
            ),
        ),
        Observer(
            builder: (_) => Padding(
                padding: JudoComponentCustomizer.get().getDefaultPadding(),
                child: ElevatedButton(
                    onPressed: pageStore.{{ variable relation.name }}TableNextEnable ? () async {
                        pageStore.{{ variable relation.name }}TableNextPage();
                    } : null,
                    child: Text(AppLocalizations.of(context).lookUpValue(context, 'Next')),
                ),
            ),
        ),
    ],
),
{{/ with }}
{{# if addDebugToTemplate }}//END aggregationtable.dart.hbs-----{{ dataElement.name }}-----------------------------------------------------------------------------------{{/ if }}
