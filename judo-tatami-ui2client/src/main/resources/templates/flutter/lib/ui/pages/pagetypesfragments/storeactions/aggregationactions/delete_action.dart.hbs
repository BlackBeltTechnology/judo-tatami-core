@action
Future<void> delete{{ className relation.name }}{{ className relation.target.name }}({{ storeClassName relation.target }} targetStore, {{ storeClassName relation.owner }} ownerStore) async {
    try {
        errorMessage = null;
        {{# if page.isPageTypeView }}
            await _actorRepository.{{ fqVariable relation.target.name }}Delete(targetStore);
            refresh{{ className relation.owner.name }}(ownerStore);
        {{ else }}
            {{# if relation.isCollection }}ownerStore.{{ variable relation.name }}.remove(targetStore){{ else }}ownerStore.{{ variable relation.name }} = null{{/ if }};
        {{/ if }}
    } on ApiException catch (error) {
        errorMessage = "Could not delete {{ variable relation.target.name }}";
        throw error;
    }
}
