@action
Future<void> set{{ fqClass relation.name }}({{ storeClassName relation.owner }} ownerStore, {{# if relation.isCollection }}List<{{ storeClassName relation.target }}>{{ else }}{{ storeClassName relation.target }}{{/ if }} selectedStore) async {
    try {
        {{# if page.isPageTypeView }}
            await _actorRepository.{{ fqVariable relation.owner.name }}Set{{ fqClass relation.name }}(ownerStore, selectedStore);
            refresh{{ className relation.owner.name }}(ownerStore);
        {{ else }}
            ownerStore.{{ variable relation.name }} = {{# if relation.isCollection }}selectedStore.asObservable(){{ else }}selectedStore{{/ if }};
        {{/ if }}
    } on ApiException catch (error) {
        errorMessage = "Could not set {{ relation.name }}";
        throw error;
    }
}
