{{log 'Embedded table collaction order action generation for' (variable application.name) '-' (fqClass page.name)'page'(variable relation.name)'relation' level='debug'}}
//START embedded_table_order_action.dart.hbs-----{{relaltion.name}}---------------------------------------------------------------------------------
// {{ className relation.name }} embedded table order
{{# if relation.isCollection }}

@observable
int {{ fqVariable relation.name }}SortColumnIndex;

@observable
String {{ fqVariable relation.name }}SortColumnName;

@observable
bool {{ fqVariable relation.name }}SortAsc;

@observable
Comparator {{ fqVariable relation.name }}SortCompare;

@action
void {{ fqVariable relation.name }}SetSort(BuildContext context, String sortColumnName, int sortColumnIndex, bool asc, Comparator sortCompare, {{ storeClassName relation.owner }} store) {
    if ({{ fqVariable relation.name }}SortColumnIndex != sortColumnIndex) {
        {{ fqVariable relation.name }}SortAsc = true;
    } else {
        {{ fqVariable relation.name }}SortAsc = !{{ fqVariable relation.name }}SortAsc;
    }
    {{ fqVariable relation.name }}SortColumnIndex = sortColumnIndex;
    {{ fqVariable relation.name }}SortColumnName = sortColumnName;
    {{ fqVariable relation.name }}SortCompare = sortCompare;

    store.{{ variable relation.name }}.sort(sortCompare);
}
{{/if}}

//END embedded_table_order_action.dart.hbs-----{{relaltion.name}}-----------------------------------------------------------------------------------
