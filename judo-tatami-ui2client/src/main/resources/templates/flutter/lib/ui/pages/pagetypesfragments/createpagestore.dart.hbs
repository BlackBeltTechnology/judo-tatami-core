{{ log 'Pagestore generation for' (variable application.name) '-' (fqClass page.name) level='debug' }}
//START createpagestore.dart.hbs-----{{ page.name }}-----------------------------------------------------------------------------------------
class {{ fqClass page.name }}PageStore extends _{{ fqClass page.name }}PageStore with _${{ fqClass page.name }}PageStore {}

abstract class _{{ fqClass page.name }}PageStore with Store {
    {{# with page.relationType as |relation| }}
    {{ repositoryClassName application.actor.name }} _actorRepository = locator<{{ repositoryClassName application.actor.name }}>();

    @observable
    String errorMessage;

    {{# if (validatableFlagNeed relation) }}
    bool validatable = false;
    {{/ if }}

    {{# if relation.isRelationBehaviourTypeCreateValidatable }}
    @action
    Future<{{ storeClassName relation.target.name }}> validate({{# unless page.dataElement.isAccess }}{{ storeClassName relation.owner.name }} ownerStore, {{/ unless }}{{ storeClassName relation.target.name }} targetStore) async {
        try {
            errorMessage = null;
            return await _actorRepository.{{ fqVariable relation.owner.name }}{{ fqClass relation.name }}ValidateForCreate({{# unless page.dataElement.isAccess }}ownerStore, {{/ unless }}targetStore);
        } on ApiException catch (error) {
            errorMessage = "Could not validate {{ relation.name }}";
            throw error;
        }
    }

    {{/ if }}
    {{/ with }}
    {{# each page.dataElement.target.relations as |relation| }}
        {{# unless isRelationKindStatic }}
            {{# unless isRelationKindAssociation }}
                {{> templates/flutter/lib/ui/pages/pagetypesfragments/storeactions/embedded_collection_table_order_action.dart.hbs page=page relation=relation}}
            {{/ unless }}
        {{/ unless }}
        {{# unless isMemberTypeTransient }}
            {{# if isRelationKindAggregation }}
    {{> templates/flutter/lib/ui/pages/pagetypesfragments/storeactions/aggregationactions.dart.hbs page=page relation=relation }}
            {{/ if }}
            {{# if isRelationKindComposition }}
    {{> templates/flutter/lib/ui/pages/pagetypesfragments/storeactions/aggregationactions.dart.hbs page=page relation=relation }}
            {{/ if }}
        {{/ unless }}
    {{/ each }}
}
//END createpagestore.dart.hbs-----{{ page.name }}-------------------------------------------------------------------------------------------
