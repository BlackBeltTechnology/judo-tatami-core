{{ log 'Switch generation for' (variable application.name) '-' (fqClass page.name)'page' label level='debug' ~}}
//START xmi:id="{{ getXMIID this }}" switch.dart.hbs-----{{ page.name }}--------------------------------------------------------------------------------------------------
{{# if (isViewTypePage page) }}
Observer(
    builder: (_) => JudoSwitch(
        col: {{ col }},
        row: {{ row }},
        disabled: {{ disabled }}{{# if enabledBy }} || !((targetStore?.{{ variable enabledBy.name }}) ?? false){{/ if }},
      {{# if this.isLabelVisible }}
        label: AppLocalizations.of(context).lookUpValue(context, '{{ this.label }}'),
      {{/ if }}
      {{# if this.isIconVisible }}
        icon: Icon(getIconByString('{{ this.icon.name }}')),
      {{/ if }}
        initialValue: targetStore.{{ variable attributeType.name }},
        readOnly: {{ attributeType.isReadOnly }},
    ),
),
{{/ if }}

{{# if (isCreateTypePage page) }}
Observer(
    builder: (_) => JudoSwitch(
        col: {{ col }},
        row: {{ row }},
        mandatory: {{ attributeType.isRequired }},
        disabled: {{ disabled }}{{# if enabledBy }} || !((targetStore?.{{ variable enabledBy.name }}) ?? false){{/ if }},
      {{# if this.isLabelVisible }}
        label: AppLocalizations.of(context).lookUpValue(context, '{{ this.label }}'),
      {{/ if }}
      {{# if this.isIconVisible }}
        icon: Icon(getIconByString('{{ this.icon.name }}')),
      {{/ if }}
        initialValue: targetStore.{{ variable attributeType.name }},
        onChanged: (value) => targetStore.set{{ className attributeType.name }}(value),
        readOnly: {{ attributeType.isReadOnly }},
    ),
),
{{/ if }}

{{# if page.isPageTypeUpdate }}
Observer(
    builder: (_) => JudoSwitch(
        col: {{ col }},
        row: {{ row }},
        mandatory: {{ attributeType.isRequired }},
        disabled: {{ disabled }}{{# if enabledBy }} || !((targetStore?.{{ variable enabledBy.name }}) ?? false){{/ if }},
      {{# if this.isLabelVisible }}
        label: AppLocalizations.of(context).lookUpValue(context, '{{ this.label }}'),
      {{/ if }}
      {{# if this.isIconVisible }}
        icon: Icon(getIconByString('{{ this.icon.name }}')),
      {{/ if }}
        initialValue: targetStore.{{ variable attributeType.name }},
        onChanged: (value) => targetStore.set{{ className attributeType.name }}(value),
        readOnly: {{ attributeType.isReadOnly }},
    ),
),
{{/ if }}
//END switch.dart.hbs-----{{ page.name }}----------------------------------------------------------------------------------------------------
