{{ log 'Tabler helper store generation for' (variable application.name) level='debug' }}
//////////////////////////////////////////////////////////////////////////////
// G E N E R A T E D    C L A S S
// ------------------------------
// Factory expression: {{{ cleanup template.factoryExpression }}}
// Path expression: {{{ cleanup template.pathExpression }}}
// Overwrite: {{{ cleanup template.overwriteExpression }}}
// Template name: {{ template.templateName }}
// Application: {{ application.name }}

part of {{ variable application.name }}.ui.pages.dialogs.helperStores;

class TableHelperStore extends _TableHelperStore with _$TableHelperStore {
  TableHelperStore(ObservableList selected, Function getId) : super(selected, getId);
}

abstract class _TableHelperStore with Store {

    _TableHelperStore(this.selected, this.getId);

    Function getId;

    @observable
    ObservableList<dynamic> selected;

    @observable
    dynamic singleSelected;

    @computed
    bool get selectButtonEnabled => selected.isNotEmpty || singleSelected != null;

    @action
    void selectRow(dynamic value) {
      if (selected.firstWhere((element) => getId(element) == getId(value), orElse: () => null) != null) {
        selected.removeAt(selected.indexWhere((element) => getId(element) == getId(value)));
      } else {
        selected.add(value);
      }
    }

    @action
    void singleSelectRow(dynamic value) {
      if (getId(value) == getId(singleSelected)) {
        singleSelected = null;
      } else {
        singleSelected = value;
      }
    }

}
