{{~ log 'Numeric field generation for' (variable application.name) '-' (fqClass page.name)'page'(variable page.dataElement.target.name) attributeType.name level='debug' ~}}
//START numericinput.dart.hbs-----{{page.dataElement.target.name}}-------------------------------------------------------------------------
{{#if (isViewTypePage page) }}
Observer(
    builder: (_) => JudoNumericInput(
        key: UniqueKey(),
        col: {{ multiplyCol col }},
        row: {{ row }},
        disabled: {{ disabled }}{{# if enabledBy }} || !((target{{ className page.relationType.target.name }}Store?.{{ variable enabledBy.name }}) ?? false){{/ if }},
        icon: Icon(Icons.{{ this.iconName }}),
        label: AppLocalizations.of(context).lookUpValue(context, '{{ label }}'),
        initialValue: target{{ className page.dataElement.target.name }}Store.{{ variable attributeType.name }}.toString(),
        readOnly: true,
    )
),
{{/if}}

{{#if (isCreateTypePage page) }}
{{# if enabledBy }}Observer(
    builder: (_) => {{/ if }}JudoNumericInput(
        key: inputWidgetKeyMap['{{ name }}'],
        col: {{ multiplyCol col }},
        row: {{ row }},
        disabled: {{ disabled }}{{# if enabledBy }} || !((target{{ className page.relationType.target.name }}Store?.{{ variable enabledBy.name }}) ?? false){{/ if }},
        icon: Icon(Icons.{{ this.iconName }}),
        label: AppLocalizations.of(context).lookUpValue(context, '{{ label }}'),
        onChanged: (value) => target{{ className page.dataElement.target.name }}Store.set{{ className attributeType.name }}({{ dartType attributeType.dataType }}.parse(value)),
        readOnly: {{attributeType.isReadOnly}},
    ){{# if enabledBy }}
){{/ if }},
{{/if}}

{{#if page.isPageTypeUpdate}}
{{# if enabledBy }}Observer(
    builder: (_) => {{/ if }}JudoNumericInput(
        key: inputWidgetKeyMap['{{ name }}'],
        col: {{ multiplyCol col }},
        row: {{ row }},
        disabled: {{ disabled }}{{# if enabledBy }} || !((target{{ className page.relationType.target.name }}Store?.{{ variable enabledBy.name }}) ?? false){{/ if }},
        icon: Icon(Icons.{{ this.iconName }}),
        label: AppLocalizations.of(context).lookUpValue(context, '{{ label }}'),
        initialValue: target{{ className page.dataElement.target.name }}Store.{{ variable attributeType.name }}.toString(),
        onChanged: (value) => target{{ className page.dataElement.target.name }}Store.set{{ className attributeType.name }}({{ dartType attributeType.dataType }}.parse(value)),
        readOnly: {{attributeType.isReadOnly}},
    ){{# if enabledBy }}
){{/ if }},
{{/if}}
//END numericinput.dart.hbs-----{{page.dataElement.target.name}}---------------------------------------------------------------------------
