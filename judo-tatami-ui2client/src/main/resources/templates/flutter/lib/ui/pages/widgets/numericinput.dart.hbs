{{~ log 'Numeric field generation for' (variable application.name) '-' (fqClass page.name)'page'(variable page.dataElement.target.name) attributeType.name level='debug' ~}}
//START numericinput.dart.hbs-----{{ page.dataElement.target.name }}-------------------------------------------------------------------------
{{# if (isViewTypePage page) }}
Observer(
    builder: (_) => JudoNumericInput(
        key: UniqueKey(),
        col: {{ col }},
        row: {{ row }},
        inCard: {{ isInCard }},
        disabled: {{ disabled }}{{# if enabledBy }} || !((targetStore?.{{ variable enabledBy.name }}) ?? false){{/ if }},
      {{# if this.isLabelVisible }}
        label: AppLocalizations.of(context).lookUpValue(context, '{{ this.label }}'),
      {{/ if }}
      {{# if this.isIconVisible }}
        icon: Icon(getIconByString("{{ this.icon.name }}")),
      {{/ if }}
        initialValue: targetStore.{{ variable attributeType.name }}.toString(),
        readOnly: true,
    )
),
{{/ if }}

{{# if (isCreateTypePage page) }}
{{# if enabledBy }}Observer(
    builder: (_) => {{/ if }}JudoNumericInput(
        key: inputWidgetKeyMap['{{ name }}'],
        col: {{ col }},
        row: {{ row }},
        inCard: {{ isInCard }},
        mandatory: {{ attributeType.isRequired }},
        disabled: {{ disabled }}{{# if enabledBy }} || !((targetStore?.{{ variable enabledBy.name }}) ?? false){{/ if }},
      {{# if this.isLabelVisible }}
        label: AppLocalizations.of(context).lookUpValue(context, '{{ this.label }}'),
      {{/ if }}
      {{# if this.isIconVisible }}
        icon: Icon(getIconByString("{{ this.icon.name }}")),
      {{/ if }}
        onChanged: (value) => targetStore.set{{ className attributeType.name }}({{ dartType attributeType.dataType }}.parse(value)),
        readOnly: {{ attributeType.isReadOnly }},
    ){{# if enabledBy }}
){{/ if }},
{{/ if }}

{{# if page.isPageTypeUpdate }}
{{# if enabledBy }}Observer(
    builder: (_) => {{/ if }}JudoNumericInput(
        key: inputWidgetKeyMap['{{ name }}'],
        col: {{ col }},
        row: {{ row }},
        inCard: {{ isInCard }},
        mandatory: {{ attributeType.isRequired }},
        disabled: {{ disabled }}{{# if enabledBy }} || !((targetStore?.{{ variable enabledBy.name }}) ?? false){{/ if }},
      {{# if this.isLabelVisible }}
        label: AppLocalizations.of(context).lookUpValue(context, '{{ this.label }}'),
      {{/ if }}
      {{# if this.isIconVisible }}
        icon: Icon(getIconByString("{{ this.icon.name }}")),
      {{/ if }}
        initialValue: targetStore.{{ variable attributeType.name }}.toString(),
        onChanged: (value) => targetStore.set{{ className attributeType.name }}({{ dartType attributeType.dataType }}.parse(value)),
        readOnly: {{ attributeType.isReadOnly }},
    ){{# if enabledBy }}
){{/ if }},
{{/ if }}
//END numericinput.dart.hbs-----{{ page.dataElement.target.name }}---------------------------------------------------------------------------
