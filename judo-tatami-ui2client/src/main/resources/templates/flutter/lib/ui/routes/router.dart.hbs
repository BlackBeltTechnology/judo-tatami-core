{{ log 'Route generation for' (variable application.name) level='info' }}
//////////////////////////////////////////////////////////////////////////////
// G E N E R A T E D    C L A S S
// ------------------------------
// Factory expression: {{{ cleanup template.factoryExpression }}}
// Path expression: {{{ cleanup template.pathExpression }}}
// Overwrite: {{{ cleanup template.overwriteExpression }}}
// Template name: {{ template.templateName }}
// Application: {{ application.name }}

import 'package:auto_route/auto_route.dart';
import 'package:auto_route/auto_route_annotations.dart';
import '../guards/auth_guard.dart';
import '../blank_page.dart';
import '../error_page.dart';
import '../settings.dart';

{{# each application.pages as |page| }}
import '../pages/{{ pageStorePackageRelativePath page.name }}';
{{/ each }}

@MaterialAutoRouter(preferRelativeImports: true, routes: <AutoRoute>[
    CustomRoute(
        page: {{ fqClass application.name }}SettingsPage,
        transitionsBuilder: TransitionsBuilders.slideLeftWithFade,
    ),
    CustomRoute(
        page: {{ fqClass application.name }}ErrorPage,
        transitionsBuilder: TransitionsBuilders.slideLeftWithFade,
    ),
    CustomRoute(
        page: {{ fqClass application.name }}BlankPage,
        transitionsBuilder: TransitionsBuilders.slideLeftWithFade,
    ),
    {{# each application.pages as |page| }}
    CustomRoute(
        page: {{ fqClass page.name }}Page,
        {{# if page.isPageTypeDashboard }}
        initial: true,
        {{/ if }}
        {{# unless page.isPageTypeUpdate }}
        transitionsBuilder: TransitionsBuilders.slideLeftWithFade,
        {{/ unless }}
        guards: [AuthGuard],
    ),
    {{/ each }}
])
    class $Router {}
