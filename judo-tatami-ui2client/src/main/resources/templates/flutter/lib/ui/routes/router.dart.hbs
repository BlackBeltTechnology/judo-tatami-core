{{ log 'Route generation for' (variable application.name) level='info' }}
//////////////////////////////////////////////////////////////////////////////
// G E N E R A T E D    C L A S S
// ------------------------------
// Factory expression: {{{ cleanup template.factoryExpression }}}
// Path expression: {{{ cleanup template.pathExpression }}}
// Overwrite: {{{ cleanup template.overwriteExpression }}}
// Template name: {{ template.templateName }}
// Application: {{ application.name }}

import 'package:auto_route/auto_route.dart';
import 'package:auto_route/auto_route_annotations.dart';
import '../guards/auth_guard.dart';
import '../pages/package.dart';
import '../blank_page.dart';
import '../error_page.dart';
import '../settings.dart';

const List<AutoRoute> bookmarkableRoutes = [
    {{# each layout.pageContainers as |container| }}
    {{# if (isBookmarkablePage container.owner) }}
    CustomRoute(
        {{# if container.owner.isPageTypeDashboard }}
        initial: true,
        path: '/',
        {{ else if container.owner.isPageTypeView }}
        path: '/{{ uriPathWithIdParam container.owner.name }}',
        {{ else }}
        path: '/{{ uriPath container.owner.name }}',
        {{/ if }}
        page: {{ fqClass container.owner.name }}Page,
        transitionsBuilder: TransitionsBuilders.slideLeftWithFade,
        guards: [AuthGuard],
    ),
    {{/ if }}
    {{/ each }}
];

const List<AutoRoute> otherRoutes = [
    {{# each layout.pageContainers as |container| }}
    {{# unless (isBookmarkablePage container.owner) }}
    CustomRoute(
        path: '/{{ uriPath container.owner.name }}',
        page: {{ fqClass container.owner.name }}Page,
        transitionsBuilder: TransitionsBuilders.slideLeftWithFade,
        guards: [AuthGuard],
    ),
    {{/ unless }}
    {{/ each }}
];

const List<AutoRoute> genericRoutes = [
    CustomRoute(
        page: {{ fqClass application.name }}SettingsPage,
        transitionsBuilder: TransitionsBuilders.slideLeftWithFade,
    ),
    CustomRoute(
        page: {{ fqClass application.name }}ErrorPage,
        transitionsBuilder: TransitionsBuilders.slideLeftWithFade,
    ),
    CustomRoute(
        page: {{ fqClass application.name }}BlankPage,
        transitionsBuilder: TransitionsBuilders.slideLeftWithFade,
    ),
];

const List<AutoRoute> allRoutes = [...bookmarkableRoutes, ...otherRoutes, ...genericRoutes];

@MaterialAutoRouter(preferRelativeImports: true, routes: allRoutes)
class $Router {}
