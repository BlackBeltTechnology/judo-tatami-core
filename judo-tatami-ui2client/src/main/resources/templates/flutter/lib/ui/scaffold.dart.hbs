{{log 'Scaffold generation for' (variable application.name) level='info'}}
//////////////////////////////////////////////////////////////////////////////
// G E N E R A T E D    C L A S S
// ------------------------------
// Factory expression: {{{ cleanup template.factoryExpression }}}
// Path expression: {{{ cleanup template.pathExpression }}}
// Overwrite: {{{ cleanup template.overwriteExpression }}}
// Template name: {{ template.templateName }}
// Application: {{ application.name }}

import 'package:flutter/material.dart';
import 'package:flutter_mobx/flutter_mobx.dart';
import 'package:flutter_breadcrumb/flutter_breadcrumb.dart';
import 'package:judo_flutter_components/judo_flutter_components.dart';
import 'package:{{ modelPackage application.name }}/{{ path application.name }}/injector/injector.dart';
import 'package:{{ modelPackage application.name }}/{{ path application.name }}/app.dart';
import 'package:{{ modelPackage application.name }}/{{ path application.name }}/app_theme.dart';
import 'package:{{ modelPackage application.name }}/{{ path application.name }}/ui/navigation/navigation_state.dart';

/// A responsive scaffold for our application.
/// Displays the navigation drawer alongside the [Scaffold] if the screen/window size is large enough
class {{ fqClass application.name }}Scaffold extends StatelessWidget {
    const {{ fqClass application.name }}Scaffold({@required this.body, this.floatingActionButton, Key key}) : super(key: key);

    final Widget body;

    final Widget floatingActionButton;

    @override
    Widget build(BuildContext context) {
        final navigation = locator<NavigationState>();
        final drawer = navigation.isMenuCollapsed(context) ? {{ fqClass application.name }}Drawer() : null;

        return SafeArea(
            child: Scaffold(
                drawer: drawer,
                appBar: PreferredSize(
                    preferredSize: Size.fromHeight(105),
                    child:
                        Column(
                            children: [
                                Padding(
                                  padding: EdgeInsets.fromLTRB(new AppDesignCustomizer().getContentMargin(context), 16, 0, 10),
                                  child: AppBar(
                                        automaticallyImplyLeading: drawer != null,
                                        toolbarHeight: 62,
                                        title: Theme(
                                            child: PreferredSize(
                                                preferredSize: Size.fromHeight(105),
                                                child: Column(
                                                    crossAxisAlignment: CrossAxisAlignment.start,
                                                    mainAxisAlignment: MainAxisAlignment.spaceBetween,
                                                    children: [
                                                        Padding(
                                                            padding: EdgeInsets.symmetric(vertical: 1),
                                                            child: Observer(
                                                                builder: (_) => BreadCrumb(
                                                                  items: navigation.breadcumbItems,
                                                                  divider: Icon(Icons.chevron_right, size: 20, color: Color(0xffdcdcdc),),
                                                                  overflow: ScrollableOverflow(
                                                                      keepLastDivider: false,
                                                                      direction: Axis.horizontal,
                                                                  )
                                                              ),
                                                            )
                                                        ),
                                                        Observer(
                                                          builder: (_) => Text(
                                                                  navigation.currentTitle,
                                                                  style: Theme.of(context).textTheme.headline4,
                                                          ),
                                                        ),
                                                    ]
                                                )
                                            ),
                                            data: JudoComponentCustomizer.get().getBreadcumbThemeCustomizer(Theme.of(context)),
                                        ),
                                    ),
                                ),

                                const Divider(
                                    color: Color(0xffdcdcdc),
                                    height: 16,
                                    thickness: 1,
                                    indent: 0,
                                    endIndent: 0,
                                )
                            ],
                        )

                ),
                body: GestureDetector(
                    onTap: () => FocusScope.of(context).requestFocus(new FocusNode()),
                    child: Padding(
                            padding: EdgeInsets.symmetric(horizontal: new AppDesignCustomizer().getContentMargin(context)),
                            child: body,
//                    child: Column(
//                        children: [
//                            Expanded(
//                                child: new Container(
//                                margin: const EdgeInsets.only(left: 116.0, right: 116.0),
//                                child: Divider(
//                                    color: Colors.black,
//                                    height: 1,
//                                )),
//                            ),
//                            body
//                        ],
//                    )
                    ),
                ),
                floatingActionButton: floatingActionButton,
            ),
        );
    }
}
