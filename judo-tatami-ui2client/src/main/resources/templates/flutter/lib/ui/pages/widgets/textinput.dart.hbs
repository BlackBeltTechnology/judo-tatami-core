{{~ log 'Text input field generation for' (variable application.name) '-' (fqClass page.name)'page'(variable page.dataElement.target.name) attributeType.name level='debug' ~}}
//START textinput.dart.hbs-----{{page.dataElement.target.name}}----------------------------------------------------------------------------
{{#if (isViewTypePage page) }}
Observer(
    builder: (_) => JudoInputText(
        key: UniqueKey(),
        col: {{ multiplyCol col }},
        row: {{ row }},
        disabled: {{ disabled }},
        icon: Icon(Icons.{{ this.leadingIcon.name }}),
        label: '{{ label }}',
        initialValue: target{{ className page.dataElement.target.name }}Store.{{ attributeType.name }},
        readOnly: true,
    )
),
{{/if}}
{{#if page.isPageTypeCreate}}
JudoInputText(
    key: inputWidgetKeyMap['{{ name }}'],
    col: {{ multiplyCol col }},
    row: {{ row }},
    disabled: {{ disabled }},
    icon: Icon(Icons.{{ this.leadingIcon.name }}),
    label: '{{ label }}',
    onChanged: (value) => target{{ className page.dataElement.target.name }}Store.set{{ className attributeType.name }}(value.toString()),
    readOnly: {{attributeType.isReadOnly}},
),
{{/if}}
{{#if page.isPageTypeOperationInput}}
JudoInputText(
    key: inputWidgetKeyMap['{{ name }}'],
    col: {{ multiplyCol col }},
    row: {{ row }},
    disabled: {{ disabled }},
    icon: Icon(Icons.{{ this.leadingIcon.name }}),
    label: '{{ label }}',
    onChanged: (value) => target{{ className page.dataElement.target.name }}Store.set{{ className attributeType.name }}(value.toString()),
    readOnly: {{attributeType.isReadOnly}},
    ),
{{/if}}
{{#if page.isPageTypeUpdate}}
JudoInputText(
    key: inputWidgetKeyMap['{{ name }}'],
    col: {{ multiplyCol col }},
    row: {{ row }},
    disabled: {{ disabled }},
    icon: Icon(Icons.{{ this.leadingIcon.name }}),
    label: '{{ label }}',
    initialValue: target{{ className page.dataElement.target.name }}Store.{{ attributeType.name }},
    onChanged: (value) => target{{ className page.dataElement.target.name }}Store.set{{ className attributeType.name }}(value.toString()),
    readOnly: {{attributeType.isReadOnly}},
),
{{/if}}
//END textinput.dart.hbs-----{{page.dataElement.target.name}}------------------------------------------------------------------------------
