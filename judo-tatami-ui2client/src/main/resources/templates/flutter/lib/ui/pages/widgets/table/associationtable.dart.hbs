{{ log 'Table generation for' (variable application.name) '-' (fqClass page.name) (variable dataElement.name) level='debug' ~}}
{{# if addDebugToTemplate }}//START associationtable.dart.hbs-----{{ dataElement.name }}---------------------------------------------------------------------------------{{/ if }}
{{# with page.dataElement as |relation| }}
Observer(
    builder: (_) => JudoColumn(
        col: 1,
        row: pageStore.getPlusRowSize as double,
        children: getInputFilterWidgetsForTablePage(context, pageStore.availableFilterList, {{ table.col }}, () => pageStore.get{{ className relation.name }}({{# unless relation.isAccess }}ownerStore{{/ unless }}).catchError((error) => ErrorHandler.showErrorSnack(context, error.message))),
    ),
),
// ignore: missing_return
Observer(builder: (_) {
    switch(pageStore.{{ variable relation.owner.name }}{{ fqClass relation.name }}StoreFuture.status){
        case FutureStatus.pending:
            return JudoLoadingProgress();
        case FutureStatus.rejected:
            return Container();
        case FutureStatus.fulfilled:
            var dataInfo = {{ fqClass pageDefinition.name }}{{ fqClass table.name }}{{ fqClass pageContainer.layoutType.name }}Table(context, disabled: {{ disabled }});
            return JudoTable(
                disabled: {{# if disabled }}true{{ else }}pageStore.pageState.disabledByLoading{{/ if }},
                col: {{ col }},
                {{# neq row 2.0 }}row: {{ row }} - 1,{{/ neq }}
                {{# if isInCard }}inCard: true,{{/ if }}
                dataInfo: dataInfo,
                rowList: {{# if relation.isAccess }}{{# if relation.isCollection }}pageStore.{{ fqVariable relation.name }}StoreList.asObservable(){{ else }}[pageStore.store].asObservable(){{/ if }}{{ else }}{{# if relation.isCollection }}ownerStore.{{ variable relation.name }}{{ else }}[ownerStore.{{ variable relation.name }}].asObservable(){{/ if }}{{/ if }},
                {{# if relation.isCollection }}
                    sortAscending: pageStore.{{ fqVariable relation.name }}SortAsc,
                    sortColumnIndex: pageStore.{{ fqVariable relation.name }}SortColumnIndex,
                    onSort: (int columnIndex, bool asc) {
                        pageStore.{{ fqVariable relation.name }}SetSort(
                            {{# unless relation.isAccess }}
                            ownerStore,
                            {{/ unless }}
                            context,
                            dataInfo.getColumnFieldByIndex(columnIndex, asc),
                            columnIndex,
                            asc,
                            dataInfo.getSortComparator(columnIndex, asc)
                        );
                    },
                {{/ if }}
                {{# each table.rowActions as |action| }}
                    {{# if action.isViewAction }}
                        {{> flutter/lib/ui/pages/widgets/table/associationtable/viewaction.dart.hbs relation=relation page=page action=action }}
                    {{/ if }}

                    {{# if action.isCreateAction }}
                        {{> flutter/lib/ui/pages/widgets/table/associationtable/createaction.dart.hbs relation=relation page=page action=action }}
                    {{/ if }}

                    {{# if action.isEditAction }}
                        {{> flutter/lib/ui/pages/widgets/table/associationtable/editaction.dart.hbs relation=relation page=page action=action relationType=relationType }}
                    {{/ if }}

                    {{# if action.isRemoveAction }}
                        {{> flutter/lib/ui/pages/widgets/table/associationtable/removeaction.dart.hbs relation=relation page=page action=action }}
                    {{/ if }}

                    {{# if relationAction.isUnsetAction }}
                        {{> flutter/lib/ui/pages/widgets/table/associationtable/unsetaction.dart.hbs relation=relation page=page action=action }}
                    {{/ if }}

                    {{# if action.isDeleteAction }}
                        {{> flutter/lib/ui/pages/widgets/table/associationtable/deleteaction.dart.hbs relation=relation page=page action=action }}
                    {{/ if }}
                {{/ each }}
            );
    }
}),
{{# if relation.isCollection }}
Row(
    children: [
        Padding(
            padding: JudoComponentCustomizer.get().getDefaultPadding(),
            child: Observer(
                builder: (_) => Text(
                    '${pageStore.pageTableItemsRangeStart} - ${pageStore.pageTableItemsRangeStart - 1 + {{# if relation.isAccess }}pageStore.{{ fqVariable relation.name }}StoreList.length{{ else }}ownerStore.{{ variable relation.name }}.length{{/ if }} }',
                    style: JudoComponentCustomizer.get().getRowCounterTextStyle(Theme.of(context)),
                ),
            ),
        ),
        Observer(
            builder: (_) => Padding(
                padding: JudoComponentCustomizer.get().getDefaultPadding(),
                child: ElevatedButton(
                    onPressed: pageStore.previousButtonEnable && !pageStore.pageState.disabledByLoading ?
                        () async {
                            await pageStore.get{{ fqClass relation.name }}({{# unless relation.isAccess }}ownerStore, {{/ unless }}isNext: false);
                        } : null,
                    child: Text(AppLocalizations.of(context).lookUpValue(context, 'Previous')),
                ),
            ),
        ),
        Observer(
            builder: (_) => Padding(
                padding: JudoComponentCustomizer.get().getDefaultPadding(),
                child: ElevatedButton(
                    onPressed: pageStore.nextButtonEnable && !pageStore.pageState.disabledByLoading ?
                        () async {
                            await pageStore.get{{ fqClass relation.name }}({{# unless relation.isAccess }}ownerStore, {{/ unless }}isNext: true);
                        } : null,
                    child: Text(AppLocalizations.of(context).lookUpValue(context, 'Next')),
                ),
            ),
        ),
    ],
),
{{/ if }}
{{/with}}
{{# if addDebugToTemplate }}//END associationtable.dart.hbs-----{{ dataElement.name }}---------------------------------------------------------------------------------{{/ if }}
