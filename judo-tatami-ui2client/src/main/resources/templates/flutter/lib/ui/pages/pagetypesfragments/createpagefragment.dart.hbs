//START createpagefragment.dart.hbs-----{{ page.name }}--------------------------------------------------------------------------------------
    {{# unless page.dataElement.isAccess }}
    final {{ storeClassName page.dataElement.owner.name }} ownerStore;
    {{/ unless }}
    {{# if (validatableFlagNeed page.dataElement) }}
    final bool validatable;
    {{/ if }}

    const {{ fqClass page.name }}Page({ Key key{{# unless page.dataElement.isAccess }}, @required this.ownerStore{{/ unless }}{{# if (validatableFlagNeed page.dataElement) }}, this.validatable{{/ if }} }) : super(key: key);

    {{# unless page.dataElement.isAccess }}
    @override
    _{{ fqClass page.name }}PageState createState() => _{{ fqClass page.name }}PageState(ownerStore: ownerStore{{# if (validatableFlagNeed page.dataElement) }}, validatable: validatable{{/ if }});
    {{ else }}
    @override
    _{{ fqClass page.name }}PageState createState() => _{{ fqClass page.name }}PageState({{# if (validatableFlagNeed page.dataElement) }}validatable: validatable{{/ if }});
    {{/ unless }}
}

class _{{ fqClass page.name }}PageState extends State<{{ fqClass page.name }}Page> {

    final {{ storeClassName page.dataElement.target.name }} targetStore = {{ storeClassName page.dataElement.target.name }}();
    {{# unless page.dataElement.isAccess }}
    final {{ storeClassName page.dataElement.owner.name }} ownerStore;
    {{/ unless }}
    {{# if (validatableFlagNeed page.dataElement) }}
    final bool validatable;
    {{/ if }}

    final {{ fqClass page.name }}PageStore {{ fqVariable page.name }}PageStore = {{ fqClass page.name }}PageStore();


    _{{ fqClass page.name }}PageState({{# unless page.dataElement.isAccess }}{ @required this.ownerStore,{{# unless (validatableFlagNeed page.dataElement) }} } {{/ unless }}{{/ unless }}{{# if (validatableFlagNeed page.dataElement) }}{{# if page.dataElement.isAccess }}{ {{/ if }} this.validatable }{{/ if }} )
    {
        final navigation = locator<NavigationState>();
        SchedulerBinding.instance.addPostFrameCallback((_) {
            navigation.setCurrentTitle(AppLocalizations.of(context).lookUpValue(context, {{ fqClass page.name }}Page.title));
        });
    {{# if (validatableFlagNeed page.dataElement) }}
        if (this.validatable != null) {
            {{ fqVariable page.name }}PageStore.validatable = this.validatable;
        }
    {{/ if }}
    }
//END createpagefragment.dart.hbs-----{{ page.name }}----------------------------------------------------------------------------------------
