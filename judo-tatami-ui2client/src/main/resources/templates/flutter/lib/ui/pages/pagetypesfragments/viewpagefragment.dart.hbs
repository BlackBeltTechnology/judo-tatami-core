//START viewpagefragment.dart.hbs-----{{ page.name }}----------------------------------------------------------------------------------------
    final {{ storeClassName page.dataElement.target.name }} targetStore;
    {{# unless page.dataElement.isAccess }}
    final {{ storeClassName page.dataElement.owner.name }} ownerStore;
    {{/ unless }}
    
    const {{ fqClass page.name }}Page({Key key, @required this.targetStore{{# unless page.dataElement.isAccess }}, @required this.ownerStore{{/ unless }} }) : super(key: key);
    
    @override
    State<StatefulWidget> createState() => _{{ fqClass page.name }}PageState(targetStore: targetStore{{# unless page.dataElement.isAccess }}, ownerStore: ownerStore{{/ unless }});
}

class _{{ fqClass page.name }}PageState extends State<{{ fqClass page.name }}Page> {
    final {{ storeClassName page.dataElement.target.name }} targetStore;
    {{# unless page.dataElement.isAccess }}
    final {{ storeClassName page.dataElement.owner.name }} ownerStore;
    {{/ unless }}

    final {{ fqClass page.name }}PageStore {{ fqVariable page.name }}PageStore = {{ fqClass page.name }}PageStore();

    _{{ fqClass page.name }}PageState({@required this.targetStore{{# unless page.dataElement.isAccess }}, @required this.ownerStore{{/ unless }} }){
        final navigation = locator<NavigationState>();
        SchedulerBinding.instance.addPostFrameCallback((_) {
            navigation.setCurrentTitle(AppLocalizations.of(context).lookUpValue(context, {{ fqClass page.name }}Page.title){{# if page.dataElement.target.representation }} + ' - ${targetStore.{{ variable page.dataElement.target.representation.name }} }'{{/ if }});
        });
    {{# if page.dataElement.isRelationBehaviourTypeRefreshable }}
        {{ fqVariable page.name }}PageStore.refresh{{ className page.dataElement.target.name }}(targetStore).catchError((error) => ErrorHandler.showErrorSnack(context, error.message));
    {{/ if }}
    }
//END viewpagefragment.dart.hbs-----{{ page.name }}------------------------------------------------------------------------------------------
