{{# if addDebugToTemplate }}//START viewpagefragment.dart.hbs-----{{ page.name }}----------------------------------------------------------------------------------------{{/ if }}
    {{# if (isPageWithIdParam page application) }}
        final String idParam;
    {{ else }}
        final {{ storeClassName page.dataElement.target }} targetStore;
    {{/ if }}
    {{# unless page.dataElement.isAccess }}
        final {{ storeClassName page.dataElement.owner }} ownerStore;
    {{/ unless }}
    
    const {{ pageClassName page }}({Key key{{# if (isPageWithIdParam page application) }}, @PathParam('id') this.idParam{{ else }}, @required this.targetStore{{/ if }}{{# unless page.dataElement.isAccess }}, @required this.ownerStore{{/unless}} }) : super(key: key);
    
    @override
    State<StatefulWidget> createState() => _{{ pageStateClassName page }}({{# if (isPageWithIdParam page application) }}idParam: idParam{{ else  }}targetStore: targetStore{{/ if }}{{# unless page.dataElement.isAccess }}, ownerStore: ownerStore{{/ unless }});
}

class _{{ pageStateClassName page }} extends State<{{ pageClassName page }}> {
    {{# if (isPageWithIdParam page application) }}
        final String idParam;
    {{/ if }}
        {{ storeClassName page.dataElement.target }} targetStore;
    {{# unless page.dataElement.isAccess }}
        final {{ storeClassName page.dataElement.owner }} ownerStore;
    {{/ unless }}
    
    final {{ pageStoreClassName page }} pageStore = {{ pageStoreClassName page }}();
    
    _{{ pageStateClassName page }}({ {{# if (isPageWithIdParam page application) }}this.idParam{{ else }}@required this.targetStore{{/ if }}{{# unless page.dataElement.isAccess }}, @required this.ownerStore{{/ unless }} }){
        final navigation = locator<NavigationState>();
        {{# if page.dataElement.isRelationBehaviourTypeRefreshable }}
            {{# if (isPageWithIdParam page application) }}
                targetStore = {{ storeClassName page.dataElement.target }}();
                targetStore.internal__signedIdentifier = idParam;
            {{/ if }}
            pageStore.targetStore = targetStore;
            pageStore
                .refresh{{ className page.dataElement.target.name }}(targetStore)
                    .then((_) {
                        navigation.setCurrentTitle(AppLocalizations.of(context).lookUpValue(context, {{ pageClassName page }}.title){{# if page.dataElement.target.representation }} + ' - ${targetStore.{{ variable page.dataElement.target.representation.name }} }'{{/ if }});
                    })
                    .catchError((error) => ErrorHandler.showErrorSnack(context, error.message));
        {{/ if }}
    }
        {{# if addDebugToTemplate }}//END viewpagefragment.dart.hbs-----{{ page.name }}------------------------------------------------------------------------------------------{{/ if }}
