(targetStore.internal__updatable && targetStore.{{ variable relation.name }} != null) ?
    IconButton(
        icon: Icon(
            Icons.{{ action.icon.name }},
        ),
        onPressed:{{# unless relation.isAccess }} targetStore.internal__updatable ?{{/ unless }} () async {
            {{ storeClassName relationType.target }} cloned = {{ storeClassName relationType.target }}();
            cloned.updateWith(targetStore.{{ variable relation.name }});
            var res = await navigation.open(Routes.{{ pageClassVariableName action.target }},
                arguments: {{ pageArgumentsClassName action.target }}(targetStore: cloned, validatable: pageStore.validatable));
            if (res != null) {
                targetStore.{{ variable relation.name }}.updateWith(cloned);
                var updated = await pageStore.update{{ className relation.name }}{{ className relation.target.name }}(targetStore.{{ variable relation.name }}, targetStore)
                    .catchError((error) => ErrorHandler.showErrorSnack(context, error.message));
                {{# if (isValidateHere page) }}
                    {{# unless page.dataElement.isRelationKindAggregation }}
                        {{# unless page.dataElement.isRelationKindComposition }}
                            {{# unless relation.isMemberTypeTransient }}
                                var validate = await pageStore.validate({{# unless page.dataElement.isAccess }}targetStore, {{/ unless }}targetStore)
                                    .catchError((error) => ErrorHandler.showErrorSnack(context, error.message));
                                if (validate != null) {
                                    targetStore.updateWith(validate);
                                }
                            {{/ unless }}
                        {{/ unless }}
                    {{/ unless }}
                {{ else }}
                    if (updated != null) {
                        targetStore.{{ variable relation.name }}.updateWith(updated);
                        pageStore.get{{ fqClass relation.name }}({{# unless relation.isAccess }}targetStore{{/ unless }})
                            .catchError((error) => ErrorHandler.showErrorSnack(context, error.message));
                    }
                {{/ if }}
            }
        }{{# unless relation.isAccess }} : null{{/ unless }}
    ) : null,
