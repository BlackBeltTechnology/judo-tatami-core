@action
Future<List<{{ storeClassName relation.target }}>> add{{ fqClass relation.name }}({{ storeClassName relation.owner }} ownerStore, List<{{ storeClassName relation.target }}> selectedStore) async {
    try {
        {{# if page.isPageTypeView }}
            await _actorRepository.{{ fqVariable relation.owner.name }}Add{{ fqClass relation.name }}(ownerStore, selectedStore);
            refresh{{ className relation.owner.name }}(ownerStore);
        {{ else }}
            ownerStore.{{ variable relation.name }}.addAll(selectedStore);
        {{/ if }}
        return ownerStore.{{ variable relation.name }};
    } on ApiException catch (error) {
        errorMessage = "Could not add {{ relation.name }}";
        throw error;
    }
}
