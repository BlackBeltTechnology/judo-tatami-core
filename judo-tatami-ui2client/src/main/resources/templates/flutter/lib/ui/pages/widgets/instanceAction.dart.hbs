JudoButton(
    col: 1,
{{# if (isSaveButton this) }}
    onPressed: () => navigation.close({{ fqVariable page.targetClassType.name }}Store),
    icon: Icon(Icons.save),
    label: 'Save',
{{/ if}}
{{# if (isBackButton this) }}
    onPressed: () => navigation.close(),
    icon: Icon(Icons.arrow_back_ios),
{{/ if }}
{{# if (isCreateButton this) }}
    onPressed: () async {
        var created = await navigation.open(Routes.{{ fqVariable this.target.name }}Page);
        if (created != null) {
            await {{ fqVariable page.name }}PageStore.create{{ fqClass page.targetClassType.name }}(created);
            {{ fqVariable page.name }}PageStore.get{{ fqClass page.targetClassType.name }}();
        }
    },
    label: 'Create',
    icon: Icon(Icons.add),
{{/ if }}
{{# if (isDeleteButton this) }}
    onPressed: () async {
        await {{ fqVariable page.name }}PageStore.delete{{ fqClass page.targetClassType.name }}({{ fqVariable page.targetClassType.name }}Store);
        navigation.close({{ fqVariable page.targetClassType.name }}Store);
    },
    label: 'Delete',
    icon: Icon(Icons.delete),
{{/ if }}
{{# if (isEditButton this) }}
    onPressed: () async {
        {{ fqClass page.targetClassType.name }}Store cloned = {{ fqClass page.targetClassType.name }}Store();
        cloned.updateWith({{ fqVariable page.targetClassType.name }}Store);
        var ret = await navigation.open(Routes.{{ fqVariable this.target.name }}Page,
        arguments: {{ fqClass this.target.name }}PageArguments({{ fqVariable page.targetClassType.name }}Store: cloned));
        if (ret != null) {
            {{ fqVariable page.targetClassType.name }}Store.updateWith(cloned);
            var updated = await {{ fqVariable page.name }}PageStore.update{{ fqClass page.targetClassType.name }}({{ fqVariable page.targetClassType.name }}Store);
            if (updated != null) {
            {{ fqVariable page.targetClassType.name }}Store.updateWith(updated);
            }
        }
    },
    label: 'Edit',
    icon: Icon(Icons.edit),
{{/ if }}
    rounded: true,
),
