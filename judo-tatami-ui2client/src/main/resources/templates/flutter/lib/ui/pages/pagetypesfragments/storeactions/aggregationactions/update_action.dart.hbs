@action
Future<{{ storeClassName relation.target }}> update{{ className relation.name }}{{ className relation.target.name }}({{ storeClassName relation.target }} targetStore, {{ storeClassName relation.owner }} ownerStore) async {
    try {
        errorMessage = null;
        {{# if page.isPageTypeView }}
            var result = await _actorRepository.{{ fqVariable relation.target.name }}Update(targetStore);
            refresh{{ className relation.owner.name }}(ownerStore);
            return result;
        {{ else }}
            return targetStore;
        {{/ if }}
    } on ApiException catch (error) {
        errorMessage = "Could not update {{ variable relation.target.name }}";
        throw error;
    }
}
