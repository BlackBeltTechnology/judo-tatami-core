@action
Future<{{ storeClassName relation.target }}> create{{ fqClass relation.name }}({{# unless page.dataElement.isAccess }}{{ storeClassName relation.owner }} ownerStore, {{/ unless }}{{ storeClassName relation.target }} targetStore) async {
    try {
        errorMessage = null;
        var created = await _actorRepository.{{ fqVariable relation.owner.name }}{{ fqClass relation.name }}Create({{# unless page.dataElement.isAccess }}ownerStore, {{/ unless }}targetStore);
        get{{ fqClass relation.name }}({{# unless page.dataElement.isAccess }}ownerStore{{/ unless }});
        return created;
    } on ApiException catch (error) {
        errorMessage = "Could not create {{ relation.name }}";
        throw error;
    }
}
