class {{ fqClass page.name }}PageStore extends _{{ fqClass page.name }}PageStore with _${{ fqClass page.name }}PageStore {}

abstract class _{{ fqClass page.name }}PageStore with Store {
    {{# with page.relationType as |relation| }}
    {{ fqClass application.actor.name }}Repository _{{ fqVariable application.actor.name }}Repository = locator<{{ fqClass application.actor.name }}Repository>();

    @observable
    String errorMessage;

    @observable
    ObservableFuture {{ fqVariable relation.name }}StoreFuture;

    {{# if relation.target.isClassBehaviourTypeUpdatable }}
    @action
    Future<{{ fqClass relation.target.name }}Store> update{{ className relation.target.name }}({{ fqClass relation.target.name }}Store target{{ className page.dataElement.target.name }}Store) async {
        try {
            errorMessage = null;
            return await _{{ fqVariable application.actor.name }}Repository.{{fqVariable relation.target.name}}Update(target{{ className page.dataElement.target.name }}Store);
        } on ApiException {
            errorMessage = "Could not update {{ variable relation.target.name }}";
        }
    }

    {{/ if }}
    {{# if relation.target.isClassBehaviourTypeDeletable }}
    @action
    Future<void> delete{{ className relation.target.name }}({{ fqClass relation.target.name }}Store target{{ className page.dataElement.target.name }}Store) async {
        try {
            errorMessage = null;
            await _{{ fqVariable application.actor.name }}Repository.{{fqVariable relation.target.name}}Delete(target{{ className page.dataElement.target.name }}Store);
        } on ApiException {
            errorMessage = "Could not delete {{ variable relation.name }}";
        }
    }

    {{/ if }}
    {{/ with }}
    {{# each page.dataElement.target.relations as |relation| }}
    {{# if isRelationKindAggregation }}
        {{> templates/flutter/lib/ui/pages/pagetypesfragments/storeactions/aggregationactions.dart.hbs relation=relation}}
    {{/ if}}
    {{# if isRelationKindComposition }}
        {{> templates/flutter/lib/ui/pages/pagetypesfragments/storeactions/compositionactions.dart.hbs relation=relation}}
    {{/ if}}
    {{/ each}}
}
