{{log 'Main generation for' (variable application.name) level='info'}}
//////////////////////////////////////////////////////////////////////////////
// G E N E R A T E D    C L A S S
// ------------------------------
// Factory expression: {{{ cleanup template.factoryExpression }}}
// Path expression: {{{ cleanup template.pathExpression }}}
// Overwrite: {{{ cleanup template.overwriteExpression }}}
// Template name: {{ template.templateName }}
// Application: {{ application.name }}

import 'package:auto_route/auto_route.dart';
import 'package:flutter/material.dart';
import 'package:openapi_dart_common/openapi.dart';
import 'package:{{ modelPackage application.name }}/{{ path application.name }}/ui/routes/router.gr.dart' as router;
import 'package:{{ modelPackage application.name }}/{{ path application.name }}/ui/drawer_items.dart';
import 'package:{{ modelPackage application.name }}/{{ path application.name }}/ui/navigation_state.dart';
import 'package:{{ modelPackage application.name }}/{{ path application.name }}/utilities/package.dart';
import 'package:{{ modelPackage application.name }}/{{ path application.name }}/injector/injector.dart';


void main() {
    configureDependencies();
    ApiClient _apiClient = ApiClient(basePath: "http://localhost:8181/api/{{ modelPackage application.name }}", apiClientDelegate: DioClientDelegate());
    locator.registerSingleton<ApiClient>(_apiClient);
    runApp({{ fqClass application.name }}Application());
}


class {{ fqClass application.name }}Application extends StatelessWidget {

    @override
    Widget build(BuildContext context) => MaterialApp(
        title: 'Northwind',
        theme: ThemeData.light().copyWith(
        primaryColor: kPrimaryColor,
        ),
        home: {{ fqClass application.name }}ApplicationPage());
}

class {{ fqClass application.name }}ApplicationPage extends StatefulWidget {
    final String title;

    {{ fqClass application.name }}ApplicationPage({Key key, this.title}) : super(key: key);

    @override
    {{ fqClass application.name }}ApplicationPageState createState() => {{ fqClass application.name }}ApplicationPageState();
}

class {{ fqClass application.name }}ApplicationPageState extends State<{{ fqClass application.name }}ApplicationPage> {

    @override
    Widget build(BuildContext context) {
        final navigation = locator<NavigationState>();

            final menu = Container(
                child: SafeArea(
                    child: {{ fqClass application.name }}Drawer(),
                    right: false,
                ),
            );

        final screen = Row(
            children: <Widget>[
                if (!navigation.isMenuCollapsed(context)) menu,
                Expanded(
                    child: ExtendedNavigator(
                        key: navigation.navigatorKey,
                        router: router.Router()
                    ),
                ),
            ],
        );

        return Container(color: kSecondaryColor, child: screen);
    }
}

class {{ fqClass application.name }}Drawer extends StatefulWidget {
    @override
    _{{ fqClass application.name }}DrawerState createState() => new _{{ fqClass application.name }}DrawerState();
}

class _{{ fqClass application.name }}DrawerState extends State<{{ fqClass application.name }}Drawer> {

    @override
    void initState() {
        super.initState();
    }

    @override
    Widget build(BuildContext context) {
        NavigationState navigationState = locator<NavigationState>();

        String _selected = navigationState.currentRoute; //widget.navigationState.currentRoute;
        return Drawer(
            child: Container(
                color: Colors.black12,
                child: Row(children: [
                    Expanded(
                        child: ListView(
                            padding: EdgeInsets.zero,
                            children: [
                                Column(
                                    children: [
                                        UserAccountsDrawerHeader(
                                            decoration: BoxDecoration(
                                                color: kSecondaryColor
                                            ),
                                            accountName: Text('User'),
                                            accountEmail: Text('user@email.com'),
                                            currentAccountPicture: CircleAvatar(
                                                child: IconButton(
                                                    padding: EdgeInsets.zero,
                                                    icon: Icon(Icons.settings),
                                                    color: Colors.black54,
                                                    onPressed: () => { navigationState.open(router.Routes.{{ fqVariable application.name }}SettingsPage)},
                                                ),
                                                backgroundColor: Colors.white,
                                            ),
                                        ),
                                    ]
                                ),
                                ...{{ fqClass application.name }}NavigationItems.navigationItems
                                    .map((e) => ListTile(
                                    leading: e.leading,
                                    title: e.title,
                                    onTap: () {
                                        navigationState.navigateTo(e.route);
                                        setState(() => {});
                                    },
                                    selected: e.route == _selected))
                                    .toList(),
                                const Divider(),
                            ],
                        ),
                    ),
                    const VerticalDivider(
                        width: 1,
                    )
                ]),
            )
        );
    }
}
