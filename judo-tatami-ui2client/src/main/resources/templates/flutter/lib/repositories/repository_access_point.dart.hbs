//////////////////////////////////////////////////////////////////////////////
// G E N E R A T E D    C L A S S
// ------------------------------
// Factory expression: {{{ cleanup template.factoryExpression }}}
// Path expression: {{{ cleanup template.pathExpression }}}
// Overwrite: {{{ cleanup template.overwriteExpression }}}
// Template name: {{ template.templateName }}
// Application: {{ application.name }}
//
//{{# each ap.relations }}
//    {{# each behaviours }}
//        {{ behaviour }} {{ fqClass ap.name }}.{{ variable ../name }} ({{ fqClass ../target.name }})  {{ fqClass sourceRelationType.target.name }}.{{ variable sourceRelationType.name }}
//    {{/ each }}
//{{/ each }}

part of {{ variable ap.name }}.repository;

@lazySingleton
class {{ fqClass ap.name }}Repository with
{{# each ap.relations ~}}
    {{ fqClass ap.name }}{{ className name }}DefaultRepository{{# unless @last}},{{/ unless}}
{{/ each }}
{{# if operations ~}},{{/if ~}}
{{# each operations ~}}
    {{ fqClass ap.name }}{{ className accessRelation.name }}{{ fqClass accessRelation.target.name }}{{ className relationType.name }}Repository{{# unless @last}},{{/ unless}}
{{/ each }}
{
  //////////////////////////////////////////////////////////////////////////////
  // GET Principal
  //////////////////////////////////////////////////////////////////////////////
  Future get({{ fqClass ap.name }}Store {{ variable ap.name }}Store) async {
    {{ fqClass ap.name }} {{ variable ap.name }}Response = await DefaultApi(locator<ApiClient>()).{{ fqVariable ap.name }}Principal();
    {{ fqClass ap.name }}RepositoryStoreMapper.map{{ fqClass ap.name }}To{{ fqClass ap.name }}Store({{ variable ap.name }}Response, {{ variable ap.name }}Store);
  }
}
