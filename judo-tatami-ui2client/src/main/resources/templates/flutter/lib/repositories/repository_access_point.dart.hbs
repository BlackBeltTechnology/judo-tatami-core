//////////////////////////////////////////////////////////////////////////////
// G E N E R A T E D    C L A S S
// ------------------------------
// Factory expression: {{{ cleanup template.factoryExpression }}}
// Path expression: {{{ cleanup template.pathExpression }}}
// Overwrite: {{{ cleanup template.overwriteExpression }}}
// Template name: {{ template.templateName }}
// Application: {{ application.name }}
//
// {{# each ap.relations }}
//    Relation {{ ap.name }}.{{ variable name }} ({{ target.name }}) behaviours: {{# each behaviours }} {{{ . }}} {{/ each }}
//    TransferObject: {{ target.name }} behaviours: {{# each target.behaviours }} {{{ . }}} {{/ each }}
// {{/ each }}

part of {{ variable ap.name }}.repository;

@lazySingleton
class {{ fqClass ap.name }}Repository with
{{# each application.relationTypes ~}}
    {{ fqClass owner.name }}{{ className name }}Repository{{# unless @last}},{{/ unless}}
{{/ each }} {
  //////////////////////////////////////////////////////////////////////////////
  // GET Principal
  //////////////////////////////////////////////////////////////////////////////
  Future<{{ fqClass ap.name }}Store> getPrincipal() async {
    {{ fqClass ap.name }} {{ variable ap.name }}Response = await DefaultApi(locator<ApiClient>()).{{ fqVariable ap.name }}Principal();
    return {{ fqClass ap.name }}RepositoryStoreMapper.create{{ fqClass ap.name }}StoreFrom{{ fqClass ap.name }}({{ variable ap.name }}Response);

  }
}
