operation ESM!RelationFeature getPSMRangeEquivalent(): JUDOPSM!ReferenceAccessor {
      if (self.eContainer().isMapped()) {
          return self.equivalent("CreateNavigationPropertyForTransferObjectRelationRange");
      } else {
          return self.equivalent("CreateStaticNavigationForTransferObjectRelationRange");
      }
}

operation ESM!RelationFeature getPSMDefaultEquivalent(): JUDOPSM!ReferenceAccessor {
      if (self.eContainer().isMapped()) {
            return self.equivalent("CreateNavigationPropertyForTransferObjectRelationDefaultValue");
      } else {
            return self.equivalent("CreateStaticNavigationForTransferObjectRelationDefaultValue");
      }
}

@cached
operation ESM!RelationFeature isAnyRangeExpressionSupported() : Boolean {
    return self.rangeType == ESM!RangeType#ANY and esmUtils.isGetRangeSupported(self);
}

@cached
operation ESM!RelationFeature isDerivedRangeExpressionSupported() : Boolean {
    return self.rangeType == ESM!RangeType#DERIVED and esmUtils.isGetRangeSupported(self);
}

@cached
operation ESM!RelationFeature isNotDerived() : Boolean {
    return self.memberType <> ESM!MemberType#DERIVED and not (self.memberType == ESM!MemberType#MAPPED and self.binding.memberType == ESM!MemberType#DERIVED);
}

@cached
operation ESM!RelationFeature isContainerAndTargetMapped() : Boolean {
    return self.eContainer.isMapped() and self.target.isMapped();
}

@cached
operation ESM!RelationFeature isDefaultExpressionSupported() : Boolean {
    return self.isNotDerived() and self.target.isMapped() and self.defaultExpression.isDefined() and self.defaultExpression.trim().length() > 0;
}
