operation ESM!DataExpressionType getPSMEquivalent(): JUDOPSM!DataExpressionType {
	return self.equivalent("CreateDataExpressionType");
}

operation ESM!AttributeSelectorType getPSMEquivalent(): JUDOPSM!AttributeSelectorType {
	return self.equivalent("CreateAttributeSelectorType");
}

operation ESM!ReferenceExpressionType getPSMEquivalent(): JUDOPSM!ReferenceExpressionType {
	return self.equivalent("CreateReferenceExpressionType");
}

operation ESM!ReferenceSelectorType getPSMEquivalent(): JUDOPSM!ReferenceSelectorType {
	return self.equivalent("CreateReferenceSelectorType");
}

//[non-equivalent()-function]
operation ESM!DataProperty getEntityType(): ESM!EntityType {
	return ESM!EntityType.all.selectOne(et | et.attributes.includes(self));
}

//[non-equivalent()-function]
operation ESM!NavigationProperty getEntityType(): ESM!EntityType {
	return ESM!EntityType.all.selectOne(et | et.relations.includes(self));
}

//[non-equivalent()-function]
operation ESM!StaticNavigation getTransferRelation(): ESM!TransferRelation {
	return ESM!TransferRelation.all.selectOne(tr | tr.referenceTypedElement = self);
}

//[non-equivalent()-function]
operation ESM!NavigationProperty getTransferRelation(): ESM!TransferRelation {
	return ESM!TransferRelation.all.selectOne(tr | tr.referenceTypedElement = self);
}

/* [postponed]:
operation ESM!ExpressionDialect getPSMEquivalent(): JUDOPSM!ExpressionDialect {
	switch (self) {
		case ESM!ExpressionDialect#JQL : return JUDOPSM!ExpressionDialect#JQL;
		case ESM!ExpressionDialect#XML : return JUDOPSM!ExpressionDialect#XML;
		default: throw "Unsupported dialect!";
	}
}
*/