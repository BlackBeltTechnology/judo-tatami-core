operation ESM!Model getPSMEquivalent(): JUDOPSM!Model {
        return self.equivalent("CreateModel");
}

operation ESM!Package getPSMEquivalent(): JUDOPSM!Package {
        return self.equivalent("CreatePackage");    
}

operation ESM!Model getPSMGeneratedDefaultTransferObjectNamespaceEquivalent(): JUDOPSM!Package {
    return self.equivalent("CreateGeneratedDefaultTransferObjectTypeRootPackage");
}

operation ESM!Package getPSMGeneratedDefaultTransferObjectNamespaceEquivalent(): JUDOPSM!Package {
    return self.equivalent("CreateGeneratedDefaultTransferObjectTypePackage");
}

operation ESM!Model getPSMGeneratedActorTypeNamespaceEquivalent(): JUDOPSM!Package {
    return self.equivalent("CreateGeneratedActorTypeRootPackage");
}

operation ESM!Package getPSMGeneratedActorTypeNamespaceEquivalent(): JUDOPSM!Package {
    return self.equivalent("CreateGeneratedActorTypePackage");
}

operation CLAIMMAPPING!Mapping getTypeName() : String {
    switch (self.Type) {
        case "String":
            if (self.Size.isDefined()) {
                return "_ClaimType_" + self.Type + "_" + self.Size.asFloat().asInteger();
            } else {
                return "_ClaimType_" + self.Type;
            }
        default:
            log.error("Unsupported claim type: " + self.Type);
            return undefined;
    }
}
