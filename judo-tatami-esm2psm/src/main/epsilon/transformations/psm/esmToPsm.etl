import "modules/namespace/namespace.etl";

import "modules/type/type.etl";

import "modules/constraint/invariantConstraint.etl";

import "modules/data/entityType.etl";
import "modules/data/primitiveTypedElement.etl";
import "modules/data/referenceTypedElement.etl";
import "modules/data/sequence.etl";

import "modules/measure/measure.etl";

import "modules/derived/expressionType.etl";
import "modules/derived/primitiveAccessor.etl";
import "modules/derived/referenceAccessor.etl";

import "modules/service/transferObjectType.etl";
import "modules/service/transferAttribute.etl";
import "modules/service/transferObjectRelation.etl";

import "modules/service/operation.etl";

import "modules/accesspoint/accessPoint.etl";

post {
    var enumsWithoutOrdinal = JUDOPSM!EnumerationMember.all.select(m | m.ordinal == -1).collect(m | m.eContainer).flatten().asSet();
    log.info("E: " + enumsWithoutOrdinal);
    for (e in enumsWithoutOrdinal) {
        log.info("Set/overwrite ordinals of enumeration: " + e.name);
        var index = 0;
        for (m in e.members) {
            m.ordinal = index;
            index = index + 1;
        }
    }
}