import "../data/referenceTypedElement.etl";
import "expressionType.etl";
import "../../../../operations/esm/derived/expressionType.eol";

@abstract
rule CreateReferenceAccessor
	transform s : ESM!ReferenceAccessor
	to t : JUDOPSM!ReferenceAccessor
	extends CreateReferenceTypedElement {
	  t.`getterExpression` = s.`getterExpression`.getPSMEquivalent();
	  if (s.`setterExpression`.isDefined()) {
	  	t.`setterExpression` = s.`setterExpression`.getPSMEquivalent();
	  }
}

rule CreateStaticNavigation
	transform s : ESM!StaticNavigation
	to t : JUDOPSM!StaticNavigation
	extends CreateReferenceAccessor {
	  log.debug("Created StaticNavigation: " + t.name);
}

rule CreateNavigationProperty
	transform s : ESM!NavigationProperty
	to t : JUDOPSM!NavigationProperty
	extends CreateReferenceAccessor {
	  var entity : ESM!EntityType = s.getEntityType();
	  entity.equivalent("CreateEntityType").navigationProperties.add(t);
	  
	  log.debug("Created NavigationProperty: " + t.name);
}