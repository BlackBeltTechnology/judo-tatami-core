import "../data/referenceTypedElement.etl";
import "expressionType.etl";
import "../../../../operations/esm/derived/expressionType.eol";
import "../../../../operations/esm/derived/referenceAccessor.eol";

@abstract
rule CreateReferenceAccessor
	transform s : ESM!ReferenceAccessor
	to t : JUDOPSM!ReferenceAccessor
	extends CreateReferenceTypedElement {
	  t.getterExpression = s.getterExpression.getPSMEquivalent();
	  if (s.setterExpression.isDefined()) {
	  	t.setterExpression = s.setterExpression.getPSMEquivalent();
	  }
}

rule CreateStaticNavigation
	transform s : ESM!StaticNavigation
	to t : JUDOPSM!StaticNavigation
	extends CreateReferenceAccessor {
	  ESM!Namespace.all.selectOne(ns | ns.elements.includes(s)).equivalent("CreatePackage").elements.add(t);
	  s.setTransferRelationBinding(t);
}

rule CreateNavigationProperty
	transform s : ESM!NavigationProperty
	to t : JUDOPSM!NavigationProperty
	extends CreateReferenceAccessor {
	  s.eContainer.equivalent("CreateEntityType").navigationProperties.add(t);
	  s.setTransferRelationBinding(t);

	  log.debug("Created NavigationProperty: " + t.name);
}