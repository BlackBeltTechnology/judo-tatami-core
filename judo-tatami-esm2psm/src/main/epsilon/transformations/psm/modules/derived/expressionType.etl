@lazy
rule CreateLogicalExpressionTypeForInvariantConstraint
    transform s : ESM!InvariantConstraint
    to t : JUDOPSM!LogicalExpressionType {
        t.expression = s.expression;
        log.debug("Created Logical Expression Type for Invariant Constraint: " + s.name);
}

@lazy
rule CreateGetterExpressionForDataProperty
    transform s : ESM!DataMember
    to t: JUDOPSM!DataExpressionType {
    guard: s.getterExpression.isDefined()
            and s.getterExpression.trim().length() > 0   
        t.expression = s.getterExpression;
        if (s.getterParameterType.isDefined()) {
            t.parameterType = s.getterParameterType.getPSMTransferObjectTypeEquivalent();
        }
        log.debug("Created Data Expression Type for Data Property: " + s.name);
}

@lazy
rule CreateGetterExpressionForStaticData
    transform s : ESM!StaticData
    to t : JUDOPSM!DataExpressionType {
     guard: s.getterExpression.isDefined()
            and s.getterExpression.trim().length() > 0
         t.expression = s.getterExpression;
         if (s.getterParameterType.isDefined()) {
             t.parameterType = s.getterParameterType.getPSMTransferObjectTypeEquivalent();
         }
         log.debug("Created Data Expression Type for Static Data: " + s.name);
}

@lazy
rule CreateGetterExpressionForTransferAttributeDefaultValue
    transform s : ESM!DataMember
       to t: JUDOPSM!DataExpressionType {
     t.expression = s.defaultExpression;
     log.debug("Created Data Expression Type for Static Data for Transfer Attribute Default: " + s.name);
}

@lazy
rule CreateGetterExpressionForNavigationProperty
    transform s : ESM!OneWayRelationMember
    to t : JUDOPSM!ReferenceExpressionType {
        t.expression = s.getterExpression;
        if (s.getterParameterType.isDefined()) {
            t.parameterType = s.getterParameterType.getPSMTransferObjectTypeEquivalent();
        }
        log.debug("Created Reference Expression Type for Navigation Property: " + s.name);
}

@lazy
rule CreateGetterExpressionForStaticNavigation
    transform s : ESM!StaticNavigation
    to t : JUDOPSM!ReferenceExpressionType {
        t.expression = s.getterExpression;
        if (s.getterParameterType.isDefined()) {
            t.parameterType = s.getterParameterType.getPSMTransferObjectTypeEquivalent();
        }
        log.debug("Created Reference Expression Type for Static Navigation: " + s.name);
}

@lazy
rule CreateGetterExpressionForTransferObjectRelationDefault
    transform s : ESM!OneWayRelationMember
    to t : JUDOPSM!ReferenceExpressionType {
        t.expression = s.defaultExpression;
        log.debug("Created Reference Expression Type for Transfer Object Relation Default: " + s.name);
}

@lazy
@greedy
rule CreateGetterExpressionForTransferObjectRelationDerivedRange
    transform s : ESM!RelationFeature
    to t : JUDOPSM!ReferenceExpressionType {
        t.expression = s.rangeExpression;
        log.debug("Created Reference Expression Type for Transfer Object Relation Range: " + s.name);
}

@lazy
@greedy
rule CreateGetterExpressionForTransferObjectRelationAnyRange
    transform s : ESM!RelationFeature
    to t : JUDOPSM!ReferenceExpressionType {
        t.expression = esmUtils.getNamespaceElementFQName(s.target.mapping.target);
        log.debug("Created Reference Expression Type for Transfer Object Relation Range: " + s.name);
}

@lazy
rule CreateGetterExpressionForTransferObjectRelationBinding
    transform s : ESM!OneWayRelationMember
    to t : JUDOPSM!ReferenceExpressionType {
        t.expression = s.getterExpression;
        if (s.getterParameterType.isDefined()) {
            t.parameterType = s.getterParameterType.getPSMTransferObjectTypeEquivalent();
        }
        log.debug("Created Reference Expression Type for Transfer Object Relation Binding: " + s.name);
}

@lazy
rule CreateGetterExpressionForAccessTransferObjectRelationWithBinding
    transform s : ESM!Access
    to t : JUDOPSM!ReferenceExpressionType {
        t.expression = s.getterExpression;
        if (s.getterParameterType.isDefined()) {
            t.parameterType = s.getterParameterType.getPSMTransferObjectTypeEquivalent();
        }
        log.debug("Created Reference Expression Type for access Transfer Object Relation With Binding: " + s.name);
}

@greedy
@lazy
rule CreateGetterExpressionForExposedGraphSelector
    transform s : ESM!OneWayRelationMember
    to t : JUDOPSM!ReferenceExpressionType {
        t.expression = s.getterExpression;
        if (s.getterParameterType.isDefined()) {
            t.parameterType = s.getterParameterType.getPSMTransferObjectTypeEquivalent();
        }
        log.debug("Created Reference Expression Type for Exposed Graph Selector: " + s.name);
}

@lazy
rule CreateGetterExpressionForStaticDataAsTransferAttributeBinding
    transform s : ESM!DataMember
       to t: JUDOPSM!DataExpressionType {
     t.expression = s.getterExpression;
     if (s.getterParameterType.isDefined()) {
         t.parameterType = s.getterParameterType.getPSMTransferObjectTypeEquivalent();
     }
     log.debug("Created Data Expression Type for Static Data for Transfer Attribute Binding: " + s.name);
}

@lazy
rule CreateFilterExpressionForMappedActorType
    transform s : ESM!ActorType
       to t: JUDOPSM!LogicalExpressionType {
     t.expression = s.isActiveExpression;
     log.debug("Created Logical Expression Type for Mapped Actor Type filter: " + s.name);
}
