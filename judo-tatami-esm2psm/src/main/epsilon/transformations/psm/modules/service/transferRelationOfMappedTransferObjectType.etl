import "transferObjectType.etl";

//------------- TransferObjectRelation / OneWayRelationMember - MappedTransferObject - targeting: Mapped
//property,default,range
rule CreateTransferObjectRelationFromOneWayRelationMemberOfMappedTransferObjectTypeWithBindingWithDefaultWithRangeTargetingMapped
	transform s: ESM!OneWayRelationMember
	to t: JUDOPSM!TransferObjectRelation
	extends CreateTransferObjectRelationTargetingMappedTransferObjectType {
	  guard: s.eContainer.isKindOf(ESM!TransferObjectType) and not s.eContainer.isTypeOf(ESM!EntityType)
	  			and s.eContainer.mapping.isDefined()
	  			and s.target.isKindOf(ESM!TransferObjectType) and not s.target.isTypeOf(ESM!EntityType)
	  			and s.property
	  			and (s.defaultExpression.expression.isDefined() and (s.defaultExpression.expression.trim().length() > 0))
	  			and (s.rangeExpression.expression.isDefined() and (s.rangeExpression.expression.trim().length() > 0))
	  			
	  t.defaultValue = s.equivalent("CreateNavigationPropertyForTransferObjectRelationDefault");
	  t.range = s.equivalent("CreateNavigationPropertyForTransferObjectRelationRange");
	  t.binding = s.equivalent("CreateNavigationPropertyForTransferObjectRelationBinding");
	  s.eContainer.getPSMEquivalent().relations.add(t);
	  log.debug("Created TransferObjectRelation (OneWayRelationMember - MappedTransferObject - With: Binding, Default, Range - Target: MappedTransferObjectType): " + t.name);
}

//property,default,!range
rule CreateTransferObjectRelationFromOneWayRelationMemberOfMappedTransferObjectTypeWithBindingWithDefaultTargetingMapped
	transform s: ESM!OneWayRelationMember
	to t: JUDOPSM!TransferObjectRelation
	extends CreateTransferObjectRelationTargetingMappedTransferObjectType {
	  guard: s.eContainer.isKindOf(ESM!TransferObjectType) and not s.eContainer.isTypeOf(ESM!EntityType)
	  			and s.eContainer.mapping.isDefined()
	  			and s.target.isKindOf(ESM!TransferObjectType) and not s.target.isTypeOf(ESM!EntityType)
	  			and s.property
	  			and s.defaultExpression.expression.isDefined() and (s.defaultExpression.expression.trim().length() > 0)
	  			and (not s.rangeExpression.expression.isDefined() or not (s.rangeExpression.expression.trim().length() > 0))

	  t.defaultValue = s.equivalent("CreateNavigationPropertyForTransferObjectRelationDefault");
	  t.binding = s.equivalent("CreateNavigationPropertyForTransferObjectRelationBinding");
	  s.eContainer.getPSMEquivalent().relations.add(t);
	  log.debug("Created TransferObjectRelation (OneWayRelationMember - MappedTransferObject - With: Binding, Default, Range - Target: MappedTransferObjectType): " + t.name);
}

//property,!default,range
rule CreateTransferObjectRelationFromOneWayRelationMemberOfMappedTransferObjectTypeWithBindingWithRangeTargetingMapped
	transform s: ESM!OneWayRelationMember
	to t: JUDOPSM!TransferObjectRelation
	extends CreateTransferObjectRelationTargetingMappedTransferObjectType {
	  guard: s.eContainer.isKindOf(ESM!TransferObjectType) and not s.eContainer.isTypeOf(ESM!EntityType)
	  			and s.eContainer.mapping.isDefined()
	  			and s.target.isKindOf(ESM!TransferObjectType) and not s.target.isTypeOf(ESM!EntityType)
	  			and s.property
	  			and (not s.defaultExpression.expression.isDefined() or not (s.defaultExpression.expression.trim().length() > 0))
	  			and s.rangeExpression.expression.isDefined() and (s.rangeExpression.expression.trim().length() > 0)
	  t.range = s.equivalent("CreateNavigationPropertyForTransferObjectRelationRange");
	  t.binding = s.equivalent("CreateNavigationPropertyForTransferObjectRelationBinding");
	  s.eContainer.getPSMEquivalent().relations.add(t);
	  log.debug("Created TransferObjectRelation (OneWayRelationMember - MappedTransferObject - With: Binding, Range - Target: MappedTransferObjectType): " + t.name);
}

//property(setter+getter & getter-only),!default,!range
rule CreateTransferObjectRelationFromOneWayRelationMemberOfMappedTransferObjectTypeWithBindingTargetingMapped
	transform s: ESM!OneWayRelationMember
	to t: JUDOPSM!TransferObjectRelation
	extends CreateTransferObjectRelationTargetingMappedTransferObjectType {
	  guard: s.eContainer.isKindOf(ESM!TransferObjectType) and not s.eContainer.isTypeOf(ESM!EntityType)
	  			and s.eContainer.mapping.isDefined()
	  			and s.target.isKindOf(ESM!TransferObjectType) and not s.target.isTypeOf(ESM!EntityType)
	  			and s.property
	  			and (not s.defaultExpression.expression.isDefined() or not (s.defaultExpression.expression.trim().length() > 0))
	  			and (not s.rangeExpression.expression.isDefined() or not (s.rangeExpression.expression.trim().length() > 0))
	  t.binding = s.equivalent("CreateNavigationPropertyForTransferObjectRelationBinding");
	  s.eContainer.getPSMEquivalent().relations.add(t);
	  log.debug("Created TransferObjectRelation (OneWayRelationMember - MappedTransferObject - With: Binding - Target: MappedTransferObjectType): " + t.name);
}

//------------- TransferObjectRelation / OneWayRelationMember - MappedTransferObject noBinding (!default,!range)
rule CreateTransferObjectRelationFromOneWayRelationMemberOfMappedTransferObjectTargetingMapped
	transform s: ESM!OneWayRelationMember
	to t: JUDOPSM!TransferObjectRelation
	extends CreateTransferObjectRelationTargetingMappedTransferObjectType {
	  guard: s.eContainer.isKindOf(ESM!TransferObjectType) and not s.eContainer.isTypeOf(ESM!EntityType)
	  			and s.eContainer.mapping.isDefined()
	  			and s.target.isKindOf(ESM!TransferObjectType) and not s.target.isTypeOf(ESM!EntityType)
	  			and not s.property
	  			and (not s.defaultExpression.expression.isDefined() or not (s.defaultExpression.expression.trim().length() > 0))
	  			and (not s.rangeExpression.expression.isDefined() or not (s.rangeExpression.expression.trim().length() > 0))
	  s.eContainer.getPSMEquivalent().relations.add(t);

	  log.debug("Created TransferObjectRelation (OneWayRelationMember - MappedTransferObject - basic - Target: MappedTransferObjectType): " + t.name);
}

//------------- TransferObjectRelation / OneWayRelationMember - MappedTransferObject - targeting: Entity
//property,default,range
rule CreateTransferObjectRelationFromOneWayRelationMemberOfMappedTransferObjectTypeWithBindingWithDefaultWithRangeTargetingEntity
	transform s: ESM!OneWayRelationMember
	to t: JUDOPSM!TransferObjectRelation
	extends CreateTransferObjectRelationTargetingDefaultTransferObjectType {
	  guard: s.eContainer.isKindOf(ESM!TransferObjectType) and not s.eContainer.isTypeOf(ESM!EntityType)
	  			and s.eContainer.mapping.isDefined()
	  			and s.target.isTypeOf(ESM!EntityType)
	  			and s.property
	  			and (s.defaultExpression.expression.isDefined() and (s.defaultExpression.expression.trim().length() > 0))
	  			and (s.rangeExpression.expression.isDefined() and (s.rangeExpression.expression.trim().length() > 0))
	  t.defaultValue = s.equivalent("CreateNavigationPropertyForTransferObjectRelationDefault");
	  t.range = s.equivalent("CreateNavigationPropertyForTransferObjectRelationRange");
	  t.binding = s.equivalent("CreateNavigationPropertyForTransferObjectRelationBinding");
	  s.eContainer.getPSMEquivalent().relations.add(t);
	  log.debug("Created TransferObjectRelation (OneWayRelationMember - MappedTransferObject - With: Binding, Default, Range - Target: Entity): " + t.name);
}

//property,default,!range
rule CreateTransferObjectRelationFromOneWayRelationMemberOfMappedTransferObjectTypeWithBindingWithDefaultTargetingEntity
	transform s: ESM!OneWayRelationMember
	to t: JUDOPSM!TransferObjectRelation
	extends CreateTransferObjectRelationTargetingDefaultTransferObjectType {
	  guard: s.eContainer.isKindOf(ESM!TransferObjectType) and not s.eContainer.isTypeOf(ESM!EntityType)
	  			and s.eContainer.mapping.isDefined()
	  			and s.target.isTypeOf(ESM!EntityType)
	  			and s.property
	  			and s.defaultExpression.expression.isDefined() and (s.defaultExpression.expression.trim().length() > 0)
	  			and (not s.rangeExpression.expression.isDefined() or not (s.rangeExpression.expression.trim().length() > 0))

	  t.defaultValue = s.equivalent("CreateNavigationPropertyForTransferObjectRelationDefault");
	  t.binding = s.equivalent("CreateNavigationPropertyForTransferObjectRelationBinding");
	  s.eContainer.getPSMEquivalent().relations.add(t);
	  log.debug("Created TransferObjectRelation (OneWayRelationMember - MappedTransferObject - With: Binding, Default - Target: Entity): " + t.name);
}

//property,!default,range
rule CreateTransferObjectRelationFromOneWayRelationMemberOfMappedTransferObjectTypeWithBindingWithRangeTargetingEntity
	transform s: ESM!OneWayRelationMember
	to t: JUDOPSM!TransferObjectRelation
	extends CreateTransferObjectRelationTargetingDefaultTransferObjectType {
	  guard: s.eContainer.isKindOf(ESM!TransferObjectType) and not s.eContainer.isTypeOf(ESM!EntityType)
	  			and s.eContainer.mapping.isDefined()
	  			and s.target.isTypeOf(ESM!EntityType)
	  			and s.property
	  			and (not s.defaultExpression.expression.isDefined() or not (s.defaultExpression.expression.trim().length() > 0))
	  			and s.rangeExpression.expression.isDefined() and (s.rangeExpression.expression.trim().length() > 0)
	  t.range = s.equivalent("CreateNavigationPropertyForTransferObjectRelationRange");
	  t.binding = s.equivalent("CreateNavigationPropertyForTransferObjectRelationBinding");
	  s.eContainer.getPSMEquivalent().relations.add(t);
	  log.debug("Created TransferObjectRelation (OneWayRelationMember - MappedTransferObject - With: Binding, Range - Target: Entity): " + t.name);
}

//property(setter+getter & getter-only),!default,!range
rule CreateTransferObjectRelationFromOneWayRelationMemberOfMappedTransferObjectTypeWithBindingTargetingEntity
	transform s: ESM!OneWayRelationMember
	to t: JUDOPSM!TransferObjectRelation
	extends CreateTransferObjectRelationTargetingDefaultTransferObjectType {
	  guard: s.eContainer.isKindOf(ESM!TransferObjectType) and not s.eContainer.isTypeOf(ESM!EntityType)
	  			and s.eContainer.mapping.isDefined()
	  			and s.target.isTypeOf(ESM!EntityType)
	  			and s.property
	  			and (not s.defaultExpression.expression.isDefined() or not (s.defaultExpression.expression.trim().length() > 0))
	  			and (not s.rangeExpression.expression.isDefined() or not (s.rangeExpression.expression.trim().length() > 0))
	  t.binding = s.equivalent("CreateNavigationPropertyForTransferObjectRelationBinding");
	  s.eContainer.getPSMEquivalent().relations.add(t);
	  log.debug("Created TransferObjectRelation (OneWayRelationMember - MappedTransferObject - With: Binding - Target: Entity): " + t.name);
}

//------------- TransferObjectRelation / OneWayRelationMember - MappedTransferObject noBinding (!default,!range)
rule CreateTransferObjectRelationFromOneWayRelationMemberOfMappedTransferObjectTargetingEntity
	transform s: ESM!OneWayRelationMember
	to t: JUDOPSM!TransferObjectRelation
	extends CreateTransferObjectRelationTargetingDefaultTransferObjectType {
	  guard: s.eContainer.isKindOf(ESM!TransferObjectType) and not s.eContainer.isTypeOf(ESM!EntityType)
	  			and s.eContainer.mapping.isDefined()
	  			and s.target.isTypeOf(ESM!EntityType)
	  			and not s.property
	  			and (not s.defaultExpression.expression.isDefined() or not (s.defaultExpression.expression.trim().length() > 0))
	  			and (not s.rangeExpression.expression.isDefined() or not (s.rangeExpression.expression.trim().length() > 0))
	  s.eContainer.getPSMEquivalent().relations.add(t);

	  log.debug("Created TransferObjectRelation (OneWayRelationMember - MappedTransferObject - basic - Target: Entity): " + t.name);
}