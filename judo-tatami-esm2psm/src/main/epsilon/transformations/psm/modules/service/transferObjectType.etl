import "operation.etl";
import "../namespace/namespace.etl";
import "../data/primitiveTypedElement.etl";
import "../data/referenceTypedElement.etl";
import "../derived/expressionType.etl";
import "../../../../operations/_importAll.eol";

@abstract
rule CreateTransferObjectType
	transform s: ESM!TransferObjectType
	to t: JUDOPSM!TransferObjectType 
	extends CreateNamespaceElement {
	  for (super in s.generalizations) {
        t.superTransferObjectTypes.add(super.target.getPSMTransferObjectTypeEquivalent());
      }
}

rule CreateMappedTransferObjectType
	transform s: ESM!TransferObjectType
	to t: JUDOPSM!MappedTransferObjectType
	extends CreateTransferObjectType {
	  guard: s.isKindOf(ESM!TransferObjectType)  and not s.isKindOf(ESM!EntityType) and s.mapping.isDefined()
	  
	  t.entityType = s.mapping.target.equivalent("CreateEntityType");
	  t.filter = s.mapping.equivalent("CreateFilterExpressionForMappedTransferObjectType");
      
	  log.debug("Created Mapped TransferObject Type: " + t.name);
}

@lazy
rule CreateFilterExpressionForMappedTransferObjectType
    transform s : ESM!Mapping
    to t : JUDOPSM!LogicalExpressionType {
     guard: s.filter.isDefined()
            and s.filter.trim().length() > 0
         t.expression = s.filter;
}

rule CreateUnmappedTransferObjectType
	transform s: ESM!TransferObjectType 
	to t: JUDOPSM!UnmappedTransferObjectType
	extends CreateTransferObjectType {
	  guard: s.isKindOf(ESM!TransferObjectType)  and not s.isKindOf(ESM!EntityType) and not s.mapping.isDefined()
	  log.debug("Created UnmappedTransferObjectType: " + t.name);
}

rule CreateDefaultMappedTransferObjectTypeForEntity
	transform s: ESM!EntityType
	to t: JUDOPSM!MappedTransferObjectType {
	  t.name = s.name;
	  for (super in s.generalizations) {
        t.superTransferObjectTypes.add(super.target.equivalent("CreateDefaultMappedTransferObjectTypeForEntity"));
      }

      s.eContainer.getPSMGeneratedDefaultTransferObjectNamespaceEquivalent().elements.add(t);      

	  t.entityType = s.equivalent("CreateEntityType");
	  log.debug("Created Default MappedTransferObjectType for EntityType: " + t.name);
}
