import "../namespace/namespace.etl";
import "../data/primitiveTypedElement.etl";
import "../data/referenceTypedElement.etl";
import "../derived/expressionType.etl";
import "../../../../operations/_importAll.eol";

rule CreateTransferAttributeFromAttribute
    transform s: ESM!DataMember
    to t: JUDOPSM!TransferAttribute 
    extends CreatePrimitiveTypedElement {
      guard: s.memberType == ESM!MemberType#TRANSIENT
            
      t.defaultValue = s.getPSMDefaultEquivalent();
     
      s.eContainer.getPSMEquivalent().attributes.add(t);
      log.debug("Created TransferAttribute: [" + t.name + "] into [" + t.eContainer.name + "]");
}

rule CreateTransferAttributeForDefaultValue
    transform s: ESM!DataMember
    to t: JUDOPSM!TransferAttribute {
      guard: s.defaultExpression.isDefined() and
               s.defaultExpression.trim().length() > 0 and
               s.eContainer.isMapped()
      
      t.name = s.getPSMDefaultEquivalent().name;
      t.required = false;
      t.dataType = s.dataType.getPSMEquivalent();
      t.binding = s.getPSMDefaultEquivalent();
     
      s.eContainer.getPSMTransferObjectTypeEquivalent().attributes.add(t);
      log.debug("Created Default TransferAttribute: [" + t.name + "] into [" + t.eContainer.name + "]");
}

rule CreateTransferAttributeFromBound
    transform s: ESM!DataMember
    to t: JUDOPSM!TransferAttribute 
    extends CreatePrimitiveTypedElement {
      guard: s.memberType == ESM!MemberType#MAPPED
            
      if (s.binding.memberType == ESM!MemberType#STORED){
         t.defaultValue = s.getPSMDefaultEquivalent();
         t.binding = s.binding.equivalent("CreateAttribute");
      } else if (s.binding.memberType == ESM!MemberType#DERIVED) {
         t.binding = s.binding.equivalent("CreateDataProperty");
      }
     
      s.eContainer.getPSMEquivalent().attributes.add(t);
      
      log.debug("Created TransferAttribute: [" + t.name + "] into [" + t.eContainer.name + "]");
}

rule CreateTransferAttributeFromProperty
    transform s: ESM!DataMember
    to t: JUDOPSM!TransferAttribute 
    extends CreatePrimitiveTypedElement {
      guard: s.eContainer.isKindOf(ESM!TransferObjectType)
            and not s.eContainer.isKindOf(ESM!EntityType) 
            and s.memberType == ESM!MemberType#DERIVED

      if (s.eContainer.mapping.isDefined()){
         t.binding = s.equivalent("CreateDataPropertyForTransferAttributeBinding");
      } else {
         t.binding = s.equivalent("CreateStaticDataForTransferAttributeBinding");
      }
      
      s.eContainer.getPSMEquivalent().attributes.add(t);
      log.debug("Created TransferAttribute: [" + t.name + "] into [" + t.eContainer.name + "]");
}

//for default transfer object type
rule CreateTransferAttributeFromAttributeForDefaultTransferObjectType
    transform s: ESM!DataMember
    to t: JUDOPSM!TransferAttribute 
    extends CreatePrimitiveTypedElement {
      guard: s.memberType == ESM!MemberType#STORED
      
      t.defaultValue = s.getPSMDefaultEquivalent();
      t.binding = s.equivalent("CreateAttribute");
      
      s.eContainer.getPSMTransferObjectTypeEquivalent().attributes.add(t);
      log.debug("Created TransferAttribute for DefaultTransferObjectType: [" + t.name + "] into [" + t.eContainer.name + "]");
}

rule CreateTransferAttributeFromPropertyForDefaultTransferObjectType
    transform s: ESM!DataMember
    to t: JUDOPSM!TransferAttribute 
    extends CreatePrimitiveTypedElement {
      guard: s.eContainer.isKindOf(ESM!EntityType)
            and s.memberType == ESM!MemberType#DERIVED
      
      t.binding = s.equivalent("CreateDataProperty");
      
      s.eContainer.equivalent("CreateDefaultMappedTransferObjectTypeForEntity").attributes.add(t);
      log.debug("Created TransferAttribute for DefaultTransferObjectType: [" + t.name + "] into [" + t.eContainer.name + "]");
}

rule CreateOptionalTransferAttributeFromAttribute
    transform s: ESM!DataMember
    to t: JUDOPSM!TransferAttribute {
      guard: s.memberType == ESM!MemberType#TRANSIENT
      
      t.name = s.name;
      t.dataType = s.dataType.getPSMEquivalent();
      t.required = false;
      
      s.eContainer.getPSMOptionalEquivalent().attributes.add(t);
      log.debug("Created Optional Transfer Attribute: [" + t.name + "] into [" + t.eContainer.name + "]");
}

rule CreateOptionalTransferAttributeFromBound
    transform s: ESM!DataMember
    to t: JUDOPSM!TransferAttribute {
      guard: not s.eContainer.isKindOf(ESM!EntityType)
      and s.memberType == ESM!MemberType#MAPPED and s.binding.memberType == ESM!MemberType#STORED
      
      t.name = s.name;
      t.dataType = s.dataType.getPSMEquivalent();
      t.required = false; 
      t.binding = s.binding.equivalent("CreateAttribute");
     
      s.eContainer.getPSMOptionalEquivalent().attributes.add(t);
      log.debug("Created Optional Transfer Attribute: [" + t.name + "] into [" + t.eContainer.name + "]");
}

rule CreateOptionalTransferAttributeForOptionalEntityTypeFromStored
    transform s: ESM!DataMember
    to t: JUDOPSM!TransferAttribute {
      guard: s.memberType == ESM!MemberType#STORED
      
      t.name = s.name;
      t.dataType = s.dataType.getPSMEquivalent();
      t.required = false;
      t.binding = s.equivalent("CreateAttribute");
      
      s.eContainer.getPSMOptionalEquivalent().attributes.add(t);
      log.debug("Created Optional Transfer Attribute for Optional TransferObjectType: [" + t.name + "] into [" + t.eContainer.name + "]");
}
