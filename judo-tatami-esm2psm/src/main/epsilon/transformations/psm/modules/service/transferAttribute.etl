import "../namespace/namespace.etl";
import "../data/primitiveTypedElement.etl";
import "../data/referenceTypedElement.etl";
import "../derived/expressionType.etl";
import "../../../../operations/_importAll.eol";

rule CreateTransferAttributeFromAttribute
    transform s: ESM!DataMember
    to t: JUDOPSM!TransferAttribute 
    extends CreatePrimitiveTypedElement {
      guard: s.memberType == ESM!MemberType#TRANSIENT
            
      t.defaultValue = s.equivalent("CreateStaticDataForTransferAttributeDefaultValue");
     
      s.eContainer.getPSMEquivalent().attributes.add(t);
      log.debug("Created TransferAttribute: [" + t.name + "] into [" + t.eContainer.name + "]");
}

rule CreateTransferAttributeFromBound
    transform s: ESM!DataMember
    to t: JUDOPSM!TransferAttribute 
    extends CreatePrimitiveTypedElement {
      guard: s.memberType == ESM!MemberType#MAPPED
            
      t.defaultValue = s.equivalent("CreateStaticDataForTransferAttributeDefaultValue");
      
      if (s.binding.memberType = ESM!MemberType#STORED){
         t.binding = s.binding.equivalent("CreateAttribute");
      } else if (s.binding.memberType = ESM!MemberType#DERIVED) {
         t.binding = s.binding.equivalent("CreateDataProperty");
      }
     
      s.eContainer.getPSMEquivalent().attributes.add(t);
      
      log.debug("Created TransferAttribute: [" + t.name + "] into [" + t.eContainer.name + "]");
}

rule CreateTransferAttributeFromProperty
    transform s: ESM!DataMember
    to t: JUDOPSM!TransferAttribute 
    extends CreatePrimitiveTypedElement {
      guard: s.eContainer.isKindOf(ESM!TransferObjectType)
            and not s.eContainer.isKindOf(ESM!EntityType) 
            and s.memberType == ESM!MemberType#DERIVED
            
      t.defaultValue = s.equivalent("CreateStaticDataForTransferAttributeDefaultValue");
      
      if (s.eContainer.mapping.isDefined()){
         t.binding = s.equivalent("CreateDataPropertyForTransferAttributeBinding");
      } else {
         t.binding = s.equivalent("CreateStaticDataForTransferAttributeBinding");
      }
      
      s.eContainer.getPSMEquivalent().attributes.add(t);
      log.debug("Created TransferAttribute: [" + t.name + "] into [" + t.eContainer.name + "]");
}

//for default transfer object type
rule CreateTransferAttributeFromAttributeForDefaultTransferObjectType
    transform s: ESM!DataMember
    to t: JUDOPSM!TransferAttribute 
    extends CreatePrimitiveTypedElement {
      guard: s.memberType == ESM!MemberType#STORED
      
      t.defaultValue = s.equivalent("CreateStaticDataForTransferAttributeDefaultValue");
      t.binding = s.equivalent("CreateAttribute");
      
      s.eContainer.getPSMTransferObjectTypeEquivalent().attributes.add(t);
      log.debug("Created TransferAttribute for DefaultTransferObjectType: [" + t.name + "] into [" + t.eContainer.name + "]");
}

rule CreateTransferAttributeFromPropertyForDefaultTransferObjectType
    transform s: ESM!DataMember
    to t: JUDOPSM!TransferAttribute 
    extends CreatePrimitiveTypedElement {
      guard: s.eContainer.isKindOf(ESM!EntityType)
            and s.memberType == ESM!MemberType#DERIVED
      
      t.defaultValue = s.equivalent("CreateStaticDataForTransferAttributeDefaultValue");
      t.binding = s.equivalent("CreateDataProperty");
      
      s.eContainer.equivalent("CreateDefaultMappedTransferObjectTypeForEntity").attributes.add(t);
      log.debug("Created TransferAttribute for DefaultTransferObjectType: [" + t.name + "] into [" + t.eContainer.name + "]");
}

//for optional types
rule CreateOptionalTransferAttributeFromAttribute
    transform s: ESM!DataMember
    to t: JUDOPSM!TransferAttribute {
      guard: s.memberType == ESM!MemberType#TRANSIENT
      
      t.dataType = s.dataType.getPSMEquivalent();
      t.name = "_Optional" + s.name.firstToUpperCase();
      t.required = false;
      t.defaultValue = s.equivalent("CreateStaticDataForTransferAttributeDefaultValue");
      
      s.eContainer.getPSMOptionalEquivalent().attributes.add(t);
      log.debug("Created Optional Transfer Attribute: [" + t.name + "] into [" + t.eContainer.name + "]");
}

rule CreateOptionalTransferAttributeFromBound
    transform s: ESM!DataMember
    to t: JUDOPSM!TransferAttribute {
      guard: s.memberType == ESM!MemberType#MAPPED
      
      t.dataType = s.dataType.getPSMEquivalent();
      t.name = "_Optional" + s.name.firstToUpperCase();
      t.required = false; 
      t.defaultValue = s.equivalent("CreateStaticDataForTransferAttributeDefaultValue");
      
      if (s.binding.memberType = ESM!MemberType#STORED){
         t.binding = s.binding.equivalent("CreateOptionalAttribute");
      } else if (s.binding.memberType = ESM!MemberType#DERIVED) {
         t.binding = s.binding.equivalent("CreateOptionalDataProperty");
      }
     
      s.eContainer.getPSMOptionalEquivalent().attributes.add(t);
      
      log.debug("Created Optional Transfer Attribute: [" + t.name + "] into [" + t.eContainer.name + "]");
}

rule CreateOptionalTransferAttributeFromProperty
    transform s: ESM!DataMember
    to t: JUDOPSM!TransferAttribute {
      guard: s.eContainer.isKindOf(ESM!TransferObjectType)
            and not s.eContainer.isKindOf(ESM!EntityType) 
            and s.memberType == ESM!MemberType#DERIVED
            
      t.dataType = s.dataType.getPSMEquivalent();
      t.name = "_Optional" + s.name.firstToUpperCase();
      t.required = false; 
      t.defaultValue = s.equivalent("CreateStaticDataForTransferAttributeDefaultValue");
      
      if (s.eContainer.mapping.isDefined()){
         t.binding = s.equivalent("CreateDataPropertyForOptionalTransferAttributeBinding");
      } else {
         t.binding = s.equivalent("CreateStaticDataForTransferAttributeBinding");
      }
      
      s.eContainer.getPSMOptionalEquivalent().attributes.add(t);
      log.debug("Created Optional Transfer Attribute: [" + t.name + "] into [" + t.eContainer.name + "]");
}

rule CreateOptionalTransferAttributeForOptionalEntityTypeFromStored
    transform s: ESM!DataMember
    to t: JUDOPSM!TransferAttribute {
      guard: s.memberType == ESM!MemberType#STORED
      t.name = "_Optional" + s.name.firstToUpperCase();
      t.required = false;
      t.dataType = s.dataType.getPSMEquivalent();
      t.defaultValue = s.equivalent("CreateStaticDataForTransferAttributeDefaultValue");
      t.binding = s.equivalent("CreateOptionalAttribute");
      
      s.eContainer.getPSMOptionalEquivalent().attributes.add(t);
      log.debug("Created Optional Transfer Attribute for Optional TransferObjectType: [" + t.name + "] into [" + t.eContainer.name + "]");
}

rule CreateOptionalTransferAttributeForOptionalEntityTypeFromDerived
    transform s: ESM!DataMember
    to t: JUDOPSM!TransferAttribute {
      guard: s.eContainer.isKindOf(ESM!EntityType)
            and s.memberType == ESM!MemberType#DERIVED
      t.name = "_Optional" + s.name.firstToUpperCase();
      t.required = false; 
      t.dataType = s.dataType.getPSMEquivalent();
      t.defaultValue = s.equivalent("CreateStaticDataForTransferAttributeDefaultValue");
      t.binding = s.equivalent("CreateOptionalDataProperty");
      
      s.eContainer.getPSMOptionalEquivalent().attributes.add(t);
      log.debug("Created Optional Transfer Attribute for Optional TransferObjectType: [" + t.name + "] into [" + t.eContainer.name + "]");
}
