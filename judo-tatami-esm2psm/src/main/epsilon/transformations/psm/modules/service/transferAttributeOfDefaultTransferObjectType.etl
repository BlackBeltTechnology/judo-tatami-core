import "transferObjectType.etl";

@abstract
rule CreateTransferAttributeForDefaultTransferObjectType
    transform s: ESM!DataMember
    to t: JUDOPSM!TransferAttribute
    extends CreatePrimitiveTypedElement {
    guard: s.eContainer.isTypeOf(ESM!EntityType)
      s.eContainer.equivalent("CreateDefaultMappedTransferObjectTypeForEntity").attributes.add(t);
}

//binding, default
rule CreateTransferAttributeForDefaultTransferObjectTypeWithBindingWithDefault
    transform s: ESM!DataMember
    to t: JUDOPSM!TransferAttribute
    extends CreateTransferAttributeForDefaultTransferObjectType {
  	  guard: s.property
  			and (s.defaultExpression.expression.isDefined() and (s.defaultExpression.expression.trim().length() > 0))

      t.defaultValue = s.equivalent("CreateDataPropertyForEntityTypeDefaultTransferObjectTypeTransferAttributeDefault");
	  t.binding = s.equivalent("CreateDataProperty");

      log.debug("Created TransferAttribute for DefaultTransferObjectType with Binding (With: Default): [" + t.name + "] into [" + t.eContainer.name + "]");
}

//binding, !default
rule CreateTransferAttributeForDefaultTransferObjectTypeWithBinding
    transform s: ESM!DataMember
    to t: JUDOPSM!TransferAttribute
    extends CreateTransferAttributeForDefaultTransferObjectType {
  	  guard: s.property
  			and (not s.defaultExpression.expression.isDefined() or not (s.defaultExpression.expression.trim().length() > 0))

	  t.binding = s.equivalent("CreateDataProperty");
      log.debug("Created TransferAttribute for DefaultTransferObjectType with Binding (With: getterExpression only): [" + t.name + "] into [" + t.eContainer.name + "]");
}

//!binding, !default
rule CreateTransferAttributeForDefaultTransferObjectTypeBasic
    transform s: ESM!DataMember
    to t: JUDOPSM!TransferAttribute
    extends CreateTransferAttributeForDefaultTransferObjectType {
  	  guard: not s.property
  			and (not s.defaultExpression.expression.isDefined() or not (s.defaultExpression.expression.trim().length() > 0))

      log.debug("Created TransferAttribute for DefaultTransferObjectType without Binding (getterExpression only): [" + t.name + "] into [" + t.eContainer.name + "]");
}