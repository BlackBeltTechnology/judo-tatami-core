import "../namespace/namespace.etl";
import "../derived/referenceAccessor.etl";
import "../../../../operations/_importAll.eol";

@abstract
rule CreateAbstractActorType
	transform s: ESM!ActorType
	to t: JUDOPSM!AbstractActorType {
	  t.name = s.eContainer.name;

	  t.transferObjectType = s.eContainer.getPSMTransferObjectTypeEquivalent();
	  s.eContainer.getPSMTransferObjectTypeEquivalent().actorType = t;
	  s.eContainer.eContainer.getPSMGeneratedActorTypeNamespaceEquivalent().elements.add(t);

	  if (s.realm.isDefined() and s.realm.trim() <> '') {
          t.realm = s.realm;
	  }
}

rule CreateActorTypeClaim
    transform s : ESM!Claim
    to t : JUDOPSM!TransferAttribute
    extends CreateNamedElement {
        t.claimType = s.claimType.asString();
        t.dataType = s.attribute.dataType.getPSMEquivalent();
        t.required = s.attribute.required;

        if (s.attribute.binding.isDefined() and s.attribute.memberType == ESM!MemberType#MAPPED) {
            t.binding = s.attribute.equivalent("CreateTransferAttributeFromBound").binding;
        }

        s.eContainer.getPSMEquivalent().attributes.add(t);

        log.debug("Created ActorType Claim: " + t.name);
}

rule CreateActorType
	transform s: ESM!ActorType
	to t: JUDOPSM!ActorType
	extends CreateAbstractActorType {
	  guard: s.eContainer.isDefined() and not s.eContainer.mapping.isDefined()

	  log.debug("Created ActorType: " + t.name);
}

rule CreateMappedActorType
	transform s: ESM!ActorType
	to t: JUDOPSM!MappedActorType
	extends CreateAbstractActorType {
	  guard: s.eContainer.isDefined() and s.eContainer.mapping.isDefined()

	  t.entityType = s.eContainer.mapping.target.getPSMEquivalent();

	  log.debug("Created ActorType: " + t.name);
}
