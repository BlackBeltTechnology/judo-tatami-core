import "../namespace.etl";

@abstract
rule CreateReferenceTypedElement
	transform s: ESM!ReferenceTypedElement
	to t: JUDOPSM!ReferenceTypedElement
	extends CreateNamedElement {
	  t.`target` = s.`target`.getPSMEquivalent();
	  t.`cardinality` = s.equivalent("CreateCardinalityOfReferenceTypedElement");
}

@lazy
@greedy
rule CreateCardinalityOfReferenceTypedElement
	transform s: ESM!ReferenceTypedElement
	to t: JUDOPSM!Cardinality {
	  t.`upper` = s.`upper`;
	  t.`lower` = s.`lower`;
}

rule CreateContainment
	transform s: ESM!OneWayEndpoint
	to t: JUDOPSM!Containment
	extends CreateReferenceTypedElement {
	  var entity : ESM!EntityType = s.getEntityType();
	  entity.equivalent("CreateEntityType").relations.add(t);
	  log.debug("Created Containment: " + t.name);
}

rule CreateEndpoint
	transform s: ESM!TwoWayEndpoint
	to t: JUDOPSM!Endpoint
	extends CreateReferenceTypedElement {
	  var entity : ESM!EntityType = s.getEntityType();
	  entity.equivalent("CreateEntityType").relations.add(t);
	  t.`partner` = s.`partner`.equivalent("CreateEndpoint");
	  log.debug("Created Endpoint: " + t.name);
}