import "../namespace/namespace.etl";
import "../../../../operations/esm/data/_importData.eol";

@abstract
rule CreateCardinalityOfReferenceTypedElement
	transform s: ESM!ReferenceTypedElement
	to t: JUDOPSM!Cardinality {
	  t.upper = s.upper;
	  t.lower = s.lower;
}

@lazy
@greedy
rule CreateCardinalityOfContainment
    transform s: ESM!ReferenceTypedElement
    to t: JUDOPSM!Cardinality
    extends CreateCardinalityOfReferenceTypedElement {
}

@lazy
@greedy
rule CreateCardinalityOfAssociationEnd
    transform s: ESM!ReferenceTypedElement
    to t: JUDOPSM!Cardinality
    extends CreateCardinalityOfReferenceTypedElement {
}

@abstract
rule CreateReferenceTypedElement
	transform s: ESM!ReferenceTypedElement
	to t: JUDOPSM!ReferenceTypedElement
	extends CreateNamedElement {
	  if(s.target.isTypeOf(ESM!TransferObjectType) and s.target.mapping.isDefined() and  not s.target.isTypeOf(ESM!EntityType)) {
	  	t.target = s.target.mapping.target.getPSMEquivalent(); //TODO: recheck/finish
	  } else {
	  	t.target = s.target.getPSMEquivalent();
	  }
}

rule CreateContainment
	transform s: ESM!OneWayRelationMember
	to t: JUDOPSM!Containment
	extends CreateReferenceTypedElement {
	  guard: s.containment and not s.property and s.eContainer.isKindOf(ESM!EntityType)
	  
	  t.cardinality = s.equivalent("CreateCardinalityOfContainment");
	  s.eContainer.getPSMEquivalent().getRelations().add(t);
	  
	  log.debug("Created Containment: " + t.name);
}

rule CreateAssociationEndWithoutPartner
	transform s: ESM!OneWayRelationMember
	to t: JUDOPSM!AssociationEnd
	extends CreateReferenceTypedElement {
	  guard: not s.containment and not s.property and s.eContainer.isKindOf(ESM!EntityType)
	  
	  t.cardinality = s.equivalent("CreateCardinalityOfAssociationEnd");
	  t.reverseCascadeDelete = s.reverseCascadeDelete;
	  s.eContainer.getPSMEquivalent().relations.add(t);
	  
	  log.debug("Created AssociationEnd: " + t.name);
}

rule CreateAssociationEndWithPartner
	transform s: ESM!TwoWayRelationMember
	to t: JUDOPSM!AssociationEnd
	extends CreateReferenceTypedElement {
	  guard: s.eContainer.isKindOf(ESM!EntityType)
	  
	  t.cardinality = s.equivalent("CreateCardinalityOfAssociationEnd");
	  t.reverseCascadeDelete = s.reverseCascadeDelete;
	  t.partner = s.partner.getPSMEquivalent();
	  s.eContainer.getPSMEquivalent().relations.add(t);
	  
	  log.debug("Created AssociationEnd: " + t.name);
}
