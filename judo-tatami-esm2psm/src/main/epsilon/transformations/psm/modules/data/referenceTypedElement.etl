import "../namespace.etl";

rule CreateCardinality
	transform s: ESM!Cardinality
	to t: JUDOPSM!Cardinality {
	  
	  t.`lower` = s.`lower`;
	  t.`upper` = s.`upper`;
	  log.debug("cardebug: Inside CreateCardinality!");
}

@abstract
rule CreateReferenceTypedElement
	transform s: ESM!ReferenceTypedElement
	to t: JUDOPSM!ReferenceTypedElement
	extends CreateNamedElement {
	  t.`target` = s.`target`.getPSMEquivalent();
	  //t.`cardinality` = s.transformCardinality(); //remove after fixing The Below
	  // TODO: fix!
	  t.`cardinality` = s.equivalent("CreateCardinalityOfReferenceTypedElement");
	  log.debug("ths: " + s);
	  /*
	  var tocard : JUDOPSM!Cardinality = s.equivalent("CreateCardinalityOfReferenceTypedElement");
	  
	  log.debug("reftypel's carbonera: " + s.equivalent("CreateCardinalityOfReferenceTypedElement"));
	  log.debug("cardebug: Inside CreateReferenceTypedElement!");
	  */
}

@lazy
@greedy
rule CreateCardinalityOfReferenceTypedElement
	transform s: ESM!ReferenceTypedElement
	to t: JUDOPSM!Cardinality {
	  t.`upper` = s.`upper`;
	  t.`lower` = s.`lower`;
	  log.debug("cardebug: [WIN] Inside CreateCardinalityOfReferenceTypedElement!");
	  
	  log.debug("cardto upper: " + t.`upper`);
	  log.debug("cardto lower: " + t.`lower`);
}

rule CreateContainment
	transform s: ESM!OneWayEndpoint
	to t: JUDOPSM!Containment
	extends CreateReferenceTypedElement {
	  var entity : ESM!EntityType = s.getEntityType();
	  entity.equivalent("CreateEntityType").relations.add(t);
	  log.debug("Created Containment: " + t.name);
}

rule CreateEndpoint
	transform s: ESM!TwoWayEndpoint
	to t: JUDOPSM!Endpoint
	extends CreateReferenceTypedElement {
	  var entity : ESM!EntityType = s.getEntityType();
	  entity.equivalent("CreateEntityType").relations.add(t);
	  t.`partner` = s.`partner`.equivalent("CreateEndpoint");
	  log.debug("Created Endpoint: " + t.name);
}
/**/