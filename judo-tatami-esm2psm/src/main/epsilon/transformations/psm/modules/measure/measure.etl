import "../namespace.etl";
import "../type/type.etl";
import "../../../../operations/esm/measure/measure.eol";

@lazy
@greedy
rule CreateMeasure
	transform s: ESM!Measure
	to t: JUDOPSM!Measure 
	extends CreateNamespaceElement {
	  t.symbol = s.symbol;
}

rule CreateDerivedMeasure
	transform s: ESM!Measure
	to t: JUDOPSM!DerivedMeasure
	extends CreateMeasure {
	guard: not s.terms.isEmpty()
}

rule CreateUnit
	transform s: ESM!Unit
	to t: JUDOPSM!Unit 
	extends CreateNamedElement {
	  t.symbol = s.symbol;
	  t.rateDividend = s.rateDividend;
	  t.rateDivisor = s.rateDivisor;
	  if(not s.isTypeOf(ESM!DurationUnit)) {
	  	  s.getContainingPSMEquivalent().units.add(t);
	  }
}

rule CreateDurationUnit
	transform s: ESM!DurationUnit
	to t: JUDOPSM!DurationUnit 
	extends CreateUnit {
	  t.unitType = JUDOPSM!DurationType#hour; //[postponed]
	  s.getContainingPSMEquivalent().units.add(t);
}

rule CreateMeasureDefinitionTerm
	transform s: ESM!MeasureDefinitionTerm
	to t: JUDOPSM!MeasureDefinitionTerm {
	  t.exponent = s.exponent;
	  t.unit = s.unit.getPSMEquivalent();
	  s.getDerivedMeasure().terms.add(t);
}

rule CreateMeasuredType
	transform s: ESM!MeasuredType
	to t: JUDOPSM!MeasuredType
	extends CreateNumericType {
	  t.storeUnit = s.storeUnit.getPSMEquivalent();
}