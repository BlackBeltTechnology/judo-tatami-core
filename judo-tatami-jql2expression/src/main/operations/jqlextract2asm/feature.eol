@cached
operation JQLEXTRACT!NavigationExpression getBaseObjectType() : ASM!EClass {
    if (self.isBasedOnVariable()) {
        return self.getVariable().getObjectType(); // variable is always defined
    } else if (self.isBasedOnStructuredType()) {
        return self.base.getStructuredTypeByName();
    } else {
    	// unknown type of base
    	return null;
    }
}

@cached
operation JQLEXTRACT!Feature getFeatureBaseObjectType() : ASM!EClass {
	var featureBase = self.getFeatureBase();
	if (not featureBase.isDefined()) {
		// feature base is unknown
		return null;
	}
	if (featureBase.isKindOf(JQLEXTRACT!NavigationExpression)) {
		return featureBase.getBaseObjectType();
	} else if (featureBase.isKindOf(JQLEXTRACT!Feature)) {
		return featureBase.getReferenceContainer();
	}
}

@cached
operation JQLEXTRACT!Feature getReferenceType() : ASM!EReference {
	var featureBaseObjectType = self.getFeatureBaseObjectType();
	if (featureBaseObjectType.isDefined()) {
		return featureBaseObjectType.eAllReferences.selectOne(r | r.name == self.name);
	} else {
		return null;
	}
}

@cached
operation JQLEXTRACT!Feature getAttribute() : ASM!EAttribute {
	var featureBaseObjectType = self.getFeatureBaseObjectType();
	if (featureBaseObjectType.isDefined()) {
		return featureBaseObjectType.eAllAttributes.selectOne(a | a.name == self.name);
	} else {
		return null;
	}
}

@cached
operation JQLEXTRACT!Feature getReferenceContainer() : ASM!EClass {
	var objectType = self.getFeatureBaseObjectType();
  	if (objectType.isDefined()) {
	  	var ref = objectType.eAllReferences.selectOne(r | r.name == self.name);
	  	if (ref.isDefined()) {
	  		return ref.eReferenceType;
	  	} else {
	  		// unknown target
	  		return null;
	  	}
  	} else {
  		// unknown kind of base
  		return null;
  	}
}

@cached
operation JQLEXTRACT!Feature getAttributeType() : ASM!EDataType {
	var attribute = self.getAttribute();
	if (attribute.isDefined()) {
		return attribute.eAttributeType;
	} else {
		return null;
	}
}
