import "modules/feature.etl";
import "modules/literal.etl";
import "modules/navigationExpression.etl";
import "modules/numeric.etl";

pre {
    var transferObjectInstances = new List;
    
    for (b in JQLEXTRACT!Binding.all) {
        var selfName = "self";
        
        if (b.className.isDefined()) {
            var found = transferObjectInstances.selectOne(i | selfName == i.name and b.packageName == i.elementName.namespace and b.className == i.elementName.name);
            
            if (not found.isDefined()) {
		        var instance = new EXPR!Instance;
		        instance.name = selfName;
		        instance.elementName = new EXPR!TypeName;
		        instance.elementName.namespace = b.packageName;
		        instance.elementName.name = b.className;
		        
		        transferObjectInstances.add(instance);
            }
        }
    }
}

// TODO - collection variables are not supported yet

post {
    for (ee in JQLEXTRACT!ExtractedExpression.all) {
        if (ee.binding.isDefined()) {
            var featureName = ee.binding.featureName;
            
            if (ee.jqlExpression.isKindOf(JQLEXTRACT!NavigationExpression)) {
                var expr = ee.jqlExpression.transformToExpression();
                if (expr.isDefined()) {
	                expr.`alias` = featureName;
                } else {
                    log.error("No expression is created for " + ee.jqlExpression);
                }
            }
        }
    }
}