operation ESM!esm::ui::DataField createInputFromDataField(application : UI!ui::Application) : UI!ui::VisualElement {
	var dataType = self.dataFeature.getMember().getDataType();
	if (dataType.isKindOf(ESM!esm::type::StringType) and self.textWidget == ESM!esm::ui::TextWidget#TEXT) {
		var ret : UI!ui::Formatted = dataType.formatted(self);
		ret.name = self.name;
		ret.label = self.getUiLabel();
		ret.attributeType = self.dataFeature.getMember().mapAttributeType(application, self.getTransferObjectType().mapClassType(application));
		return ret;
	}
	
	var ret : UI!ui::Input = self.dataFeature.getMember().getDataType().input(self, application);
	ret.name = self.name;
	ret.label = self.getUiLabel();

	if (self.stretch == ESM!esm::ui::Stretch#NONE) {
    	ret.stretch = UI!ui::Stretch#NONE;
    } else if (self.stretch == ESM!esm::ui::Stretch#HORIZONTAL) {
        ret.stretch = UI!ui::Stretch#HORIZONTAL;
    } else if (self.stretch == ESM!esm::ui::Stretch#VERTICAL) {
        ret.stretch = UI!ui::Stretch#VERTICAL;
    } else {
        ret.stretch = UI!ui::Stretch#BOTH;
    }
    
    if (self.fit == ESM!esm::ui::Fit#LOOSE) {
		ret.fit = UI!ui::Fit#LOOSE;
	} else if (self.fit == ESM!esm::ui::Fit#TIGHT) {
		ret.fit = UI!ui::Fit#TIGHT;
	}

	ret.sourceId = self.getID();
	ret.attributeType = self.dataFeature.getMember().mapAttributeType(application, self.getTransferObjectType().mapClassType(application));
	return ret;
}

operation ESM!esm::ui::DataField map(application : UI!ui::Application) : UI!ui::VisualElement {
	return self.createInputFromDataField(application);
}
