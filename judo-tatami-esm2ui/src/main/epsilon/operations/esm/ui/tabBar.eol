operation ESM!esm::ui::TabBar createTabController(application : UI!ui::Application) : UI!ui::TabController {
	var ret : UI!ui::TabController = new UI!ui::TabController();
	ret.name = self.name;	
    ret.label = self.getUiLabel();
    
	ret.col = self.col.asReal();
	ret.row = self.row.asReal();
    ret.sourceId = self.getID();
    
    if (self.stretch == ESM!esm::ui::Stretch#NONE) {
    	ret.stretch = UI!ui::Stretch#NONE;
    } else if (self.stretch == ESM!esm::ui::Stretch#HORIZONTAL) {
        ret.stretch = UI!ui::Stretch#HORIZONTAL;
    } else if (self.stretch == ESM!esm::ui::Stretch#VERTICAL) {
        ret.stretch = UI!ui::Stretch#VERTICAL;
    } else {
        ret.stretch = UI!ui::Stretch#BOTH;
    }
    if (self.fit == ESM!esm::ui::Fit#LOOSE) {
		ret.fit = UI!ui::Fit#LOOSE;
	} else if (self.fit == ESM!esm::ui::Fit#TIGHT) {
		ret.fit = UI!ui::Fit#TIGHT;
	}
    
	for (t in self.tabs) {
	
		var tab : UI!ui::Tab = new UI!ui::Tab();
		tab.name = t.name;
		if (t.iconName.isDefined() and t.iconName.trim().length() > 0) {
			tab.icon = new UI!ui::Icon();
			tab.icon.name = t.iconName;
		}
		
		tab.element = t.map(application);
		
		ret.tabs.add(tab);
	}

	return ret;
}

operation ESM!esm::ui::TabBar map(application : UI!ui::Application) : UI!ui::TabController {
	return self.createTabController(application);
}
