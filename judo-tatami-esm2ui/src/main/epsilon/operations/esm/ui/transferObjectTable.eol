operation ESM!esm::ui::TransferObjectTable createTableFromTransferObjectTable(application : UI!ui::Application, relation : UI!ui::data::RelationType, page : UI!ui::PageDefinition) : UI!ui::Table {
    var parameterPage : Boolean = page.pageType == UI!ui::PageType#OPERATION_INPUT or page.pageType == UI!ui::PageType#OPERATION_OUTPUT;
    var t : UI!ui::Table = new UI!ui::Table();
    self.setPropertiesOfLinkAndTable(t, relation);
    for (column in self.columns.select(c | (c.dataFeature.getMember().memberType == ESM!esm::structure::MemberType#TRANSIENT implies parameterPage))) {
        t.columns.add(column.map(application));
    }
    t.row = 31d;
    return t;
}

operation ESM!esm::ui::TransferObjectTable createLinkFromTransferObjectTable(application : UI!ui::Application, relation : UI!ui::data::RelationType, page : UI!ui::PageDefinition) : UI!ui::Link {
    var parameterPage : Boolean = page.pageType == UI!ui::PageType#OPERATION_INPUT or page.pageType == UI!ui::PageType#OPERATION_OUTPUT;
    var t : UI!ui::Link = new UI!ui::Link();
    self.setPropertiesOfLinkAndTable(t, relation);
    for (column in self.columns.select(c | (c.dataFeature.getMember().memberType == ESM!esm::structure::MemberType#TRANSIENT implies parameterPage))) {
        t.parts.add(column.map(application));
    }
    t.row = 1d;
    return t;
}

operation ESM!esm::ui::TransferObjectTable setPropertiesOfLinkAndTable(element : UI!ui::VisualElement, relation : UI!ui::data::RelationType) {
    element.name = self.name;
    element.col = applicationColumns.asReal();
    element.label = self.getUiLabel();
    element.icon = self.iconName;
    element.sourceId = self.getID();
    element.~originalRelation = relation.~originalRelation;
    element.dataElement = relation;
}
