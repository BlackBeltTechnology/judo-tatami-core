operation ESM!esm::type::DateType input(dataField : ESM!esm::ui::DataField, application : UI!ui::Application): UI!ui::Input {
    return self.fillInput(new UI!ui::DateInput(), dataField.row.asReal(), dataField.col.asReal(), dataField.iconName);
}

operation ESM!esm::type::DateType formatted(): UI!ui::Formatted {
    return self.fillFormatted(new UI!ui::Formatted(), "%s", 1d, 2d);
}

@cached
operation ESM!esm::type::DateType fqName() {
    if (self.eContainer.isKindOf(ESM!esm::namespace::NamespaceElement)) {
        return esmUtils.getNamespaceElementFQName(self.eContainer) + "." + self.name;
    } else {
        return self.eContainer.name + "." + self.name;
    }
}

operation ESM!esm::type::DateType createDateType(application : UI!ui::Application) : UI!ui::data::DateType {
    var type = new UI!ui::data::DateType();
    type.name = self.fqName();
    type.operator = self.mapTypeOperationEnumeration(application);
    application.dataTypes.add(type);
    return type;
}

operation ESM!esm::type::DateType mapDataType(application : UI!ui::Application) : UI!ui::data::DateType {
    var type = application.dataTypes.selectOne(t | t.name = self.fqName());
    if (type.isUndefined()) {
        type = self.createDateType(application);
    }
    return type;
}

operation ESM!esm::type::DateType mapTypeOperationEnumeration(application : UI!ui::Application) : UI!ui::data::EnumerationType {
    var type = application.dataTypes.selectOne(t | t.name = "_NumericOperation");
    if (type.isUndefined()) {
        type = createNumericOperationEnumeration(application);
    }
    return type;
}
