operation ESM!esm::type::StringType input(dataField : ESM!esm::ui::DataField, attributeType : UI!ui::data::AttributeType, application : UI!ui::Application): UI!ui::Input {
    
    if (dataField.textMultiLine) {
	    var input = new UI!ui::TextArea();
	    return input.fillInput(dataField, attributeType, application);
    } else {
        var input = new UI!ui::TextInput();
        return input.fillInput(dataField, attributeType, application);
    }
}

operation ESM!esm::type::BooleanType input(dataField : ESM!esm::ui::DataField, attributeType : UI!ui::data::AttributeType, application : UI!ui::Application): UI!ui::Input {
    var input = new UI!ui::Switch();
    return input.fillInput(dataField, attributeType, application);
}

operation ESM!esm::type::StringType formatted(dataField : ESM!esm::ui::DataField, attributeType : UI!ui::data::AttributeType, application : UI!ui::Application): UI!ui::Formatted {
    return createFormatted(dataField, attributeType, application);
}

@cached
operation ESM!esm::type::StringType fqName() {
    if (self.eContainer.isKindOf(ESM!esm::namespace::NamespaceElement)) {
        return esmUtils.getNamespaceElementFQName(self.eContainer) + "." + self.name;
    } else {
        return self.eContainer.name + "." + self.name;
    }
}

operation ESM!esm::type::StringType createStringType(application : UI!ui::Application) : UI!ui::data::StringType {
    var type = new UI!ui::data::StringType();
    type.name = self.fqName();
    type.regExp = self.regExp;
    type.maxLength = self.maxLength;
    type.operator = self.mapTypeOperationEnumeration(application);
    application.dataTypes.add(type);
    return type;
}

operation ESM!esm::type::StringType mapDataType(application : UI!ui::Application) : UI!ui::data::StringType {
    var type = application.dataTypes.selectOne(t | t.name = self.fqName());
    if (type.isUndefined()) {
        type = self.createStringType(application);
    }
    return type;
}

operation ESM!esm::type::StringType mapTypeOperationEnumeration(application : UI!ui::Application) : UI!ui::data::EnumerationType {
    var type = application.dataTypes.selectOne(t | t.name = "_StringOperation");
    if (type.isUndefined()) {
        type = createStringOperationEnumeration(application);
    }
    return type;
}
