operation ESM!esm::type::EnumerationType input(dataField : ESM!esm::ui::DataField, application : UI!ui::Application): UI!ui::Input {
    
    if (dataField.enumWidget == ESM!esm::ui::EnumWidget#RADIO) {
        var radio = new UI!ui::EnumerationRadio();
        for (m in self.mapDataType(application).members) {
            var opt = new UI!ui::Option();
            opt.selected = false;
            opt.name = m.name;
            opt.enumerationMember = m;
            radio.options.add(opt);
        }
        return self.fillInput(radio, dataField.row.asReal(), dataField.col.asReal());
        
    } else {
        var combo = new UI!ui::EnumerationCombo();
        for (m in self.mapDataType(application).members) {
            var opt = new UI!ui::Option();
            opt.selected = false;
            opt.name = m.name;
            opt.enumerationMember = m;
            combo.options.add(opt);
        }
        return self.fillInput(combo, dataField.row.asReal(), dataField.col.asReal());
    }
}

operation ESM!esm::type::EnumerationType formatted(): UI!ui::Formatted {
    return self.fillFormatted(new UI!ui::Formatted(), "%s", 1d, 2d);
}

@cached
operation ESM!esm::type::EnumerationType fqName() {
    if (self.eContainer.isKindOf(ESM!esm::namespace::NamespaceElement)) {
        return esmUtils.getNamespaceElementFQName(self.eContainer) + "." + self.name;
    } else {
        return self.eContainer.name + "." + self.name;
    }
}

operation ESM!esm::type::EnumerationType createEnumerationType(application : UI!ui::Application) : UI!ui::data::EnumerationType {
    var type = new UI!ui::data::EnumerationType();
    type.name = self.fqName();
    for (m in self.members) {
        type.members.add(m.createEnumerationMember());
    }
    type.operator = self.mapTypeOperationEnumeration(application);
    application.dataTypes.add(type);
    return type;
}

operation ESM!esm::type::EnumerationMember createEnumerationMember() : UI!ui::data::EnumerationMember {
    var member = new UI!ui::data::EnumerationMember();
    member.name = self.name;
    member.ordinal = self.ordinal;
    return member;
}

operation ESM!esm::type::EnumerationType mapDataType(application : UI!ui::Application) : UI!ui::data::EnumerationType {
    var type = application.dataTypes.selectOne(t | t.name = self.fqName());
    if (type.isUndefined()) {
        type = self.createEnumerationType(application);
    }
    return type;
}

operation ESM!esm::type::EnumerationType mapTypeOperationEnumeration(application : UI!ui::Application) : UI!ui::data::EnumerationType {
    var type = application.dataTypes.selectOne(t | t.name = "_EnumerationOperation");
    if (type.isUndefined()) {
        type = createEnumerationOperationEnumeration(application);
    }
    return type;
}
