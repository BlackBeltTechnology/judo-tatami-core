operation ESM!esm::type::BooleanType input(dataField : ESM!esm::ui::DataField, attributeType : UI!ui::data::AttributeType, application : UI!ui::Application): UI!ui::Input {
    var input = new UI!ui::Switch();
    input.fillInput(dataField, attributeType, application);
    if (not input.getIsLabelVisible()) {
        if (not input.label.isDefined()) {
            input.label = "";
        }
        input.showLabel = true;
    }
    
    return input;
}

operation ESM!esm::type::BooleanType formatted(dataField : ESM!esm::ui::DataField, attributeType : UI!ui::data::AttributeType, application : UI!ui::Application): UI!ui::Formatted {
    return createFormatted(dataField, attributeType, application);
}

@cached
operation ESM!esm::type::BooleanType fqName() {
    if (self.eContainer.isKindOf(ESM!esm::namespace::NamespaceElement)) {
        return esmUtils.getNamespaceElementFQName(self.eContainer) + "." + self.name;
    } else {
        return self.eContainer.name + "." + self.name;
    }
}

operation ESM!esm::type::BooleanType createBooleanType(application : UI!ui::Application) : UI!ui::data::BooleanType {
    var type = new UI!ui::data::BooleanType();
    type.name = self.fqName();
    type.operator = self.mapTypeOperationEnumeration(application);
    application.dataTypes.add(type);
    return type;
}

operation ESM!esm::type::BooleanType mapDataType(application : UI!ui::Application) : UI!ui::data::BooleanType {
    var type = application.dataTypes.selectOne(t | t.name = self.fqName());
    if (type.isUndefined()) {
        type = self.createBooleanType(application);
    }
    return type;
}

operation ESM!esm::type::BooleanType mapTypeOperationEnumeration(application : UI!ui::Application) : UI!ui::data::EnumerationType {
    var type = application.dataTypes.selectOne(t | t.name = "_BooleanOperation");
    if (type.isUndefined()) {
        type = createBooleanOperationEnumeration(application);
    }
    return type;
}
