operation createFormatted(dataField : ESM!esm::ui::DataField, attributeType : UI!ui::data::AttributeType, application : UI!ui::Application) : UI!ui::Formatted {
    var formatted = new UI!ui::Formatted();
    formatted.setVisualProperties(dataField, application);
    formatted.format = "%s";
    formatted.attributeType = attributeType;
    formatted.sourceId = dataField.getID();
    return formatted;
}

operation createBooleanOperationEnumeration(application : UI!ui::Application) : UI!ui::data::EnumerationType {
    var type = new UI!ui::data::EnumerationType();
    type.name = "_BooleanOperation";
    
    var equals = new UI!ui::data::EnumerationMember();
    equals.ordinal = 0;
    equals.name = "equals";
    type.members.add(equals);
    
    application.dataTypes.add(type);
    return type;
}

operation createNumericOperationEnumeration(application : UI!ui::Application) : UI!ui::data::EnumerationType {
    var type = new UI!ui::data::EnumerationType();
    type.name = "_NumericOperation";
    
    var lessThan = new UI!ui::data::EnumerationMember();
    lessThan.ordinal = 0;
    lessThan.name = "lessThan";
    type.members.add(lessThan);

    var greaterThan = new UI!ui::data::EnumerationMember();
    greaterThan.ordinal = 1;
    greaterThan.name = "greaterThan";
    type.members.add(greaterThan);

    var lessOrEqual = new UI!ui::data::EnumerationMember();
    lessOrEqual.ordinal = 2;
    lessOrEqual.name = "lessOrEqual";
    type.members.add(lessOrEqual);

    var greaterOrEqual = new UI!ui::data::EnumerationMember();
    greaterOrEqual.ordinal = 3;
    greaterOrEqual.name = "greaterOrEqual";
    type.members.add(greaterOrEqual);

    var equal = new UI!ui::data::EnumerationMember();
    equal.ordinal = 4;
    equal.name = "equal";
    type.members.add(equal);

    var notEqual = new UI!ui::data::EnumerationMember();
    notEqual.ordinal = 5;
    notEqual.name = "notEqual";
    type.members.add(notEqual);
    
    application.dataTypes.add(type);
    return type;
}

operation createEnumerationOperationEnumeration(application : UI!ui::Application) : UI!ui::data::EnumerationType {
    var type = new UI!ui::data::EnumerationType();
    type.name = "_EnumerationOperation";
    
    var equals = new UI!ui::data::EnumerationMember();
    equals.ordinal = 0;
    equals.name = "equals";
    type.members.add(equals);

    var notEquals = new UI!ui::data::EnumerationMember();
    notEquals.ordinal = 1;
    notEquals.name = "notEquals";
    type.members.add(notEquals);
    
    application.dataTypes.add(type);
    return type;
}

operation createStringOperationEnumeration(application : UI!ui::Application) : UI!ui::data::EnumerationType {
    var type = new UI!ui::data::EnumerationType();
    type.name = "_StringOperation";
    
    var lessThan = new UI!ui::data::EnumerationMember();
    lessThan.ordinal = 0;
    lessThan.name = "lessThan";
    type.members.add(lessThan);

    var greaterThan = new UI!ui::data::EnumerationMember();
    greaterThan.ordinal = 1;
    greaterThan.name = "greaterThan";
    type.members.add(greaterThan);

    var lessOrEqual = new UI!ui::data::EnumerationMember();
    lessOrEqual.ordinal = 2;
    lessOrEqual.name = "lessOrEqual";
    type.members.add(lessOrEqual);

    var greaterOrEqual = new UI!ui::data::EnumerationMember();
    greaterOrEqual.ordinal = 3;
    greaterOrEqual.name = "greaterOrEqual";
    type.members.add(greaterOrEqual);

    var equal = new UI!ui::data::EnumerationMember();
    equal.ordinal = 4;
    equal.name = "equal";
    type.members.add(equal);

    var notEqual = new UI!ui::data::EnumerationMember();
    notEqual.ordinal = 5;
    notEqual.name = "notEqual";
    type.members.add(notEqual);
    
    var matches = new UI!ui::data::EnumerationMember();
    matches.ordinal = 6;
    matches.name = "matches";
    type.members.add(matches);

    var like = new UI!ui::data::EnumerationMember();
    like.ordinal = 7;
    like.name = "like";
    type.members.add(like);
    
    application.dataTypes.add(type);
    return type;
}
