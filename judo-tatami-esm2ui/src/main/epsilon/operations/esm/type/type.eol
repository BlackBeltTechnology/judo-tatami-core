operation ESM!esm::namespace::NamedElement fillInput(input : UI!ui::Input, row : Integer, col : Integer): UI!ui::Input {
	input.col = col;
	input.row  = row;
	return input;
}

operation ESM!esm::type::PasswordType input(): UI!ui::Input {
	return self.fillInput(new UI!ui::PasswordInput(), 2, 1);
}

operation ESM!esm::type::StringType input(): UI!ui::Input {
	return self.fillInput(new UI!ui::TextInput(), 2, 1);
}

operation ESM!esm::type::NumericType input(): UI!ui::Input {
	return self.fillInput(new UI!ui::NumericInput(), 2, 1);
}

operation ESM!esm::type::BooleanType input(): UI!ui::Input {
	return self.fillInput(new UI!ui::Switch(), 2, 1);
}

operation ESM!esm::type::DateType input(): UI!ui::Input {
	return self.fillInput(new UI!ui::DateInput(), 2, 1);
}

operation ESM!esm::type::TimestampType input(): UI!ui::Input {
	return self.fillInput(new UI!ui::DateTimeInput(), 2, 1);
}

//operation ESM!esm::type::EnumerationType input(): UI!ui::Input {
//	return self.fillInput(new UI!ui::DateInput(), 2, 1);
//}


operation ESM!esm::namespace::NamedElement fillFormatted(formatted : UI!ui::Formatted, format : String, row : Integer, col : Integer): UI!ui::Formatted {
	formatted.name = self.name;
	formatted.col = col;
	formatted.row  = row;
	formatted.format = format;
	return formatted;
}

operation ESM!esm::type::PasswordType formatted(): UI!ui::Formatted {
	return self.fillFormatted(new UI!ui::Formatted(), "%s", 2, 1);
}

operation ESM!esm::type::StringType formatted(): UI!ui::Formatted {
	return self.fillFormatted(new UI!ui::Formatted(), "%s", 2, 1);
}

// TODO: sprinf numberic format
operation ESM!esm::type::NumericType formatted(): UI!ui::Formatted {
	return self.fillFormatted(new UI!ui::Formatted(), "%s", 2, 1);
}

operation ESM!esm::type::BooleanType formatted(): UI!ui::Formatted {
	return self.fillFormatted(new UI!ui::Formatted(), "%s", 2, 1);
}

operation ESM!esm::type::DateType formatted(): UI!ui::Formatted {
	return self.fillFormatted(new UI!ui::Formatted(), "%s", 2, 1);
}

operation ESM!esm::type::TimestampType formatted(): UI!ui::Formatted {
	return self.fillFormatted(new UI!ui::Formatted(), "%s", 2, 1);
}

//operation ESM!esm::type::EnumerationType text(): UI!ui::Formatted {
//	return self.fillText(new UI!ui::DateInput(), 2, 1);
//}


//rule NumericType
//    transform s: ESM!esm::type::NumericType
//    to t: UI!ui::data::NumericType {    
//    t.precision = s.precision;]
//}

/*
operation ESM!esm::type::DataFeature createAttributeTypeForClass(application : UI!ui::Application, clazz : UI!ui::data::ClassType) : UI!ui::data::AttributeType {
	var attribute = new UI!ui::data::AttributeType();	
	attribute.name = self.name;

	if (self.memberType == ESM!esm::structure::MemberType#STORED) {
		attribute.memberType = UI!ui::data::MemberType#STORED;
	} else if (self.memberType == ESM!esm::structure::MemberType#DERIVED) {
		attribute.memberType = UI!ui::data::MemberType#DERIVED;
	} else if (self.memberType == ESM!esm::structure::MemberType#MAPPED) {
		attribute.memberType = UI!ui::data::MemberType#MAPPED;
	} else if (self.memberType == ESM!esm::structure::MemberType#TRANSIENT) {
		attribute.memberType = UI!ui::data::MemberType#TRANSIENT;
	} else {
		attribute.memberType = UI!ui::data::MemberType#STORED;
	}
	attribute.isReadOnly = self.isReadOnly();

	clazz.attributes.add(attribute);
	log.debug("Create attribute " + attribute.name + " in class type: " + clazz.name);
	return attribute;
}

operation ESM!esm::structure::DataFeature mapAttributeType(application : UI!ui::Application, clazz : UI!ui::data::ClassType) : UI!ui::data::AttributeType {
	var attribute = clazz.attributes.selectOne(r | r.name = self.name);
	if (attribute.isUndefined()) {
		attribute = self.createAttributeTypeForClass(application, clazz);
	}
	return attribute;
} */


