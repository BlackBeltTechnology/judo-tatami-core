operation UI!ui::VisualElement updateInheritedReferences(pageDef : UI!ui::PageDefinition) {
	
	log.debug("Updating visual element: " + self.name);
	
	var relation : UI!ui::data::RelationType = pageDef.dataElement;
	
	if (self.isKindOf(UI!ui::Container)) {
		for (child in self.children) {
			child.updateInheritedReferences(pageDef);
		}
	} else if (self.isKindOf(UI!ui::TabController)) {
		for (tab in self.tabs) {
			tab.element.updateInheritedReferences(pageDef);
		}
	} else if (self.isKindOf(UI!ui::Table) or self.isKindOf(UI!ui::Link)) {
		
		var old = self.dataElement; 
		
		if (pageDef.pageType == UI!ui::PageType#TABLE) {
			if (relation <> self.dataElement) {
				self.dataElement = relation;
				log.debug("Changed table page's data element from " + old.eContainer.name + "." + old.name + " to " + self.dataElement.eContainer.name + "." + self.dataElement.name );
			}
		}
		if (self.isKindOf(UI!ui::Table)) {
            for (col in self.columns) {
                col.updateInheritedReferences(pageDef);
            }
		} else {
            for (part in self.parts) {
                part.updateInheritedReferences(pageDef);
            }
		}

	} else if (self.isKindOf(UI!ui::Button)) {
		if (self.action.isKindOf(UI!ui::PageAction)) {
			if (self.dataElement <> self.action.target.dataElement) {
				var application = self.action.target.~application;
				var clonedPage = application.pages.selectOne(p | p.~original.isDefined() and p.~original == self.action.target and 
				                                                relation.target == p.dataElement.eContainer());
				if (clonedPage.isDefined()) {
					self.action.target = clonedPage;
				}	
			}
		}
	}
}
