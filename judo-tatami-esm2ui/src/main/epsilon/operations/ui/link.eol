operation UI!ui::Link calculateActions(application : UI!ui::Application, preview : Boolean) {
	var relationType = self.getRelationType();
	var pageDefinition = self.getPageDefinition();
	var pageType = pageDefinition.pageType;

	if (relationType.isDefined()) {
		if (pageType == UI!ui::PageType#VIEW or
			pageType == UI!ui::PageType#OPERATION_OUTPUT or
			(pageType == UI!ui::PageType#DASHBOARD and not relationType.isCollection)) {
			self.createViewAction(relationType, application, preview);
		}
		
		if (pageType == UI!ui::PageType#CREATE or pageType == UI!ui::PageType#UPDATE) {
			self.createViewAction(relationType, application, preview);
			if (relationType.getIsRelationBehaviourTypeDeletable()) {
	        	self.createDeleteAction(relationType);
	        }
	        if (relationType.getIsRelationBehaviourTypeUpdatable()) {
	        	self.createUpdateAction(relationType, application, preview);
	        }
	        if (relationType.getIsRelationBehaviourTypeRemovable()) {
	            self.createRemoveAction();
	        }
	        if (relationType.getIsRelationBehaviourTypeUnsetable()) {
	            self.createUnsetAction();
	        }
	        if (relationType.getIsRelationBehaviourTypeCreatable()) {
				self.createCreateAction(relationType, application, preview);
			}
			if (relationType.getIsRelationBehaviourTypeSetable()) {
				self.createSetAction(relationType);
			}
			if (relationType.getIsRelationBehaviourTypeAddable()) {
				self.createAddAction(relationType);
			}
		}
		
		if (pageType == UI!ui::PageType#OPERATION_INPUT and (relationType.getIsRelationKindAggregation() or relationType.getIsRelationKindComposition())) {
			self.createUpdateAction(relationType, application, preview);
			self.createRemoveAction();
			self.createUnsetAction();
	        self.createCreateAction(relationType, application, preview);
			self.createSetAction(relationType);
			self.createAddAction(relationType);
		}
	
		if (pageType == UI!ui::PageType#TABLE or (pageType == UI!ui::PageType#DASHBOARD and relationType.isCollection)) {
			self.createViewAction(relationType, application, preview);
			if (relationType.getIsRelationBehaviourTypeDeletable()) {
	        	self.createDeleteAction(relationType);
	        }
	        if (relationType.getIsRelationBehaviourTypeUpdatable()) {
	        	self.createUpdateAction(relationType, application, preview);
	        }
	        if (relationType.getIsRelationBehaviourTypeRemovable()) {
	            self.createRemoveAction();
	        }
	        if (relationType.getIsRelationBehaviourTypeUnsetable()) {
	            self.createUnsetAction();
	        }
		}
	
		if (pageType == UI!ui::PageType#CUSTOM) {
		
		}
	}
}

operation UI!ui::Link createViewAction(relationType : UI!ui::data::RelationType, application : UI!ui::Application, preview : Boolean) {
	if (preview) {
		var viewAction = new UI!ui::ViewAction();
		viewAction.target = application.pages.selectOne(p | p.pageType = UI!ui::PageType#DASHBOARD);
		viewAction.isTransient = relationType.memberType == UI!ui::data::MemberType#TRANSIENT;
		self.actions.add(viewAction);
	} else {
		var page = application.pages.selectOne(p | p.pageType = UI!ui::PageType#VIEW and p.getRelationType() == relationType);
		if (page.isDefined()) {
			log.debug(" ========= LINK DEF: VIEW: " + relationType.name + " - " + page.name);
		    var viewAction = new UI!ui::ViewAction();
			viewAction.target = page;
			viewAction.isTransient = relationType.memberType == UI!ui::data::MemberType#TRANSIENT;
			self.actions.add(viewAction);
		} else {
			log.warn("No view page defined for: " + self.name + " - " + relationType.eContainer.name + "." + relationType.name);
		}
	}
}

operation UI!ui::Link createDeleteAction(relationType : UI!ui::data::RelationType) {
	var deleteAction = new UI!ui::DeleteAction();
    deleteAction.isTransient = relationType.memberType == UI!ui::data::MemberType#TRANSIENT;
    self.actions.add(deleteAction);
}

operation UI!ui::Link createUpdateAction(relationType : UI!ui::data::RelationType, application : UI!ui::Application, preview : Boolean) {
	if (preview) {
        var editAction = new UI!ui::EditAction();
        editAction.target = application.pages.selectOne(p | p.pageType = UI!ui::PageType#DASHBOARD);
        editAction.isTransient = relationType.memberType == UI!ui::data::MemberType#TRANSIENT;
        self.actions.add(editAction);
    } else {
        var page = application.pages.selectOne(p | p.pageType = UI!ui::PageType#UPDATE and p.getRelationType() == relationType);
        if (page.isDefined()) {
            log.debug(" ========= TABLE DEF: EDIT: " + relationType.name + " - " + page.name);
            var editAction = new UI!ui::EditAction();
            editAction.target = page;
            editAction.isTransient = relationType.memberType == UI!ui::data::MemberType#TRANSIENT;
            self.actions.add(editAction);
        } else {
            log.warn("No update page defined for: " + self.name  + " - " + relationType.eContainer.name + "." + relationType.name);
        }
    }
}

operation UI!ui::Link createRemoveAction() {
	self.actions.add(new UI!ui::RemoveAction());
}

operation UI!ui::Link createUnsetAction() {
	self.actions.add(new UI!ui::UnsetAction());
}

operation UI!ui::Link createSetAction(relationType : UI!ui::data::RelationType) {
	var action = new UI!ui::SetAction();
	action.dataElement = relationType;
	self.actions.add(action);
}

operation UI!ui::Link createAddAction(relationType : UI!ui::data::RelationType) {
	var action = new UI!ui::AddAction();
	action.dataElement = relationType;
	self.actions.add(action);
}

operation UI!ui::Link createCreateAction(relationType : UI!ui::data::RelationType, application : UI!ui::Application, preview : Boolean) {
	if (preview) {
		var action = new UI!ui::CreateAction();
	    action.target = application.pages.selectOne(p | p.pageType = UI!ui::PageType#DASHBOARD);
	    action.dataElement = relationType;
	    self.actions.add(action);
	} else {
		var page = application.pages.selectOne(p | p.pageType = UI!ui::PageType#CREATE and p.getRelationType() == relationType);
		if (page.isDefined()) {
			log.debug(" ========= PAGE DEF: CREATE: " + relationType.eContainer.name + "." + relationType.name + " - " + page.name);
		    var action = new UI!ui::CreateAction();
		    action.target = page;
		    action.dataElement = relationType;
		    self.actions.add(action);
		} else {
			log.warn("No update page defined for: " + self.name + " - " + relationType.eContainer.name + "." + relationType.name);
		}
	}
}
