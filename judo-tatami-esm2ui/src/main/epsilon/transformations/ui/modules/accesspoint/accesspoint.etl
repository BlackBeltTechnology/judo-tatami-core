import "../namespace/namespace.etl";
import "../../../../operations/_importAll.eol";

rule CreateApplication
	transform s: ESM!esm::structure::TransferObjectType
	to t: UI!ui::Application
	extends CreateNamedElementFromNamespaceElement {
	  guard: s.isAccesspoint()
      log.debug("CreateApplication: " + s.name);
       
      t.name = t.uiName(applicationType);
	  t.type = applicationType;
	  t.cols = applicationColumns;
	  t.navigationController = s.equivalent("CreateNavigationController");
}

rule CreateNavigationController
	transform s: ESM!esm::structure::TransferObjectType
	to t: UI!ui::NavigationController
	extends CreateNamedElementFromNamespaceElement {
	  guard: s.isAccesspoint()
          t.name = t.uiName("NavigationController");
		  log.debug("CreateNavigationController: " + s.name);

}

rule CreateApplicationDashboard
	transform s: ESM!esm::structure::TransferObjectType
    to t : UI!ui::PageDefinition
	extends CreateNamedElementFromNamespaceElement {
	  guard: s.isAccesspoint() and s.view.isDefined()
      log.debug("CreateDashboard: " + s.name);

      var application = s.equivalent("CreateApplication");        
	  log.debug("CreateApplicationDashboard: " + s.name);
      t.name = t.uiName("Dashboard");
      t.children.add(s.view.map());
      application.pages.add(t);
}


@greedy
rule CreateNavigationItemForAccessPointRelation
    transform s : ESM!esm::structure::RelationFeature
    to t : UI!ui::NavigationItem
    extends CreateNamedElementFromNamedElement {
        guard: s.eContainer.isAccesspoint() and s.target.mapping.isDefined()
        and s.getterExpression.isDefined() and s.getterExpression.trim() <> ''
        and ((s.target.table.isDefined and s.upper = -1) 
        		or (s.target.view.isDefined() and s.upper = 1) 
        		or (s.target.form.isDefined() and s.upper = 1))
		  log.debug("CreateNavigationItemForAccessPointRelation: " + s.name);
          t.name = t.uiName("NavigationItem");
          t.label = s.name;
          t.target = s.equivalent("CreateNavigationItemPageForAccessPointRelationForTable");
          if (t.target.isUndefined()) {
	          t.target = s.equivalent("CreateNavigationItemPageForAccessPointRelationForView");      
          }
          if (t.target.isUndefined()) {
  	          t.target = s.equivalent("CreateNavigationItemPageForAccessPointRelationForForm");              
          }
          s.eContainer.equivalent("CreateNavigationController").items.add(t);
}

@greedy
rule CreateNavigationItemPageForAccessPointRelationForView
    transform s : ESM!esm::structure::RelationFeature
    to t : UI!ui::PageDefinition
	extends CreateNamedElementFromNamedElement {
        guard: s.eContainer.isAccesspoint() and s.target.mapping.isDefined()
        and s.getterExpression.isDefined() and s.getterExpression.trim() <> ''
        and s.target.view.isDefined()
          var application = s.eContainer.equivalent("CreateApplication");        
		  log.debug("CreateNavigationItemPageForAccessPointRelationForView: " + s.name);
          t.name = t.uiName("NavigationItemView");
          t.children.add(s.target.view.map());
	      application.pages.add(t);
}

@greedy
rule CreateNavigationItemPageForAccessPointRelationForForm
    transform s : ESM!esm::structure::RelationFeature
    to t : UI!ui::PageDefinition
	extends CreateNamedElementFromNamedElement {
        guard: s.eContainer.isAccesspoint() and s.target.mapping.isDefined()
        and s.getterExpression.isDefined() and s.getterExpression.trim() <> ''
		and s.target.form.isDefined()
          var application = s.eContainer.equivalent("CreateApplication");
		  log.debug("CreateNavigationItemPageForAccessPointRelationForForm: " + s.name);
          t.name = t.uiName("NavigationItemForm");
          t.children.add(s.target.form.map());
	      application.pages.add(t);
}

@greedy
rule CreateNavigationItemPageForAccessPointRelationForTable
    transform s : ESM!esm::structure::RelationFeature
    to t : UI!ui::PageDefinition
	extends CreateNamedElementFromNamedElement {
        guard: s.eContainer.isAccesspoint() and s.target.mapping.isDefined()
        and s.getterExpression.isDefined() and s.getterExpression.trim() <> ''
        and s.target.table.isDefined() and s.upper = -1
          var application = s.eContainer.equivalent("CreateApplication");
		  log.debug("CreateNavigationItemPageForAccessPointRelationForTable: " + s.name);
          t.name = t.uiName("NavigationItemTable");
          
          var table = s.target.table.createTableFromTransferObjectTable();
          t.children.add(table);
          if (s.target.table.masterDetail and s.target.view.isDefined()) {
          		var detail : UI!ui::PageDefinition = new UI!ui::PageDefinition();    
          		detail.binding = t.binding;
          		detail.name = t.name + "/detail";
			    application.pages.add(detail);
	      		detail.children.add(s.target.view.map());
	      		table.detail = detail;
    	  }          
	      application.pages.add(t);
}
