import "../../../../operations/_importAll.eol";

rule NavigationController
    transform s: ESM!esm::accesspoint::ActorType
    to t: UI!ui::NavigationController {
        guard: s.kind = ESM!esm::accesspoint::ActorKind#HUMAN 

        log.debug("NavigationController: " + s.name);
        t.name = s.fqName().anchor("NavigationController");
}

@abstract
rule AccessMenuNavigationItem
    transform s: ESM!esm::ui::MenuItemAccess
    to t : UI!ui::NavigationItem {
        guard: not s.hidden

        log.debug("Create Access Navigation: " + s.access.fqName() );

        t.name = s.access.fqName().anchor("NavigationItem");
        t.label = s.getUiLabel();
        t.showLabel = s.showLabel;
        t.createIconForLabeledElement(s.iconName);
        t.showIcon = s.showIcon;
        s.eContainer.equivalent("NavigationController").items.add(t);
        t.~pos = s.eContainer.getMenuItems().indexOf(s);
}

rule AccessMenuNavigationItemTable
    transform s: ESM!esm::ui::MenuItemAccess
    to t : UI!ui::NavigationItem
        extends AccessMenuNavigationItem {
        guard: s.access.target.isTableDefined() and s.access.upper <> 1

        var application = s.access.eContainer.equivalent("Application");
        t.target = s.access.mapTablePage(application, s.access.target);
}

rule AccessMenuNavigationItemView
    transform s: ESM!esm::ui::MenuItemAccess
    to t : UI!ui::NavigationItem
        extends AccessMenuNavigationItem {
        guard: s.access.target.view.isDefined() and s.access.upper == 1
    
        var application = s.access.eContainer.equivalent("Application");
        t.target = s.access.mapViewPage(application, s.access.target);
}
